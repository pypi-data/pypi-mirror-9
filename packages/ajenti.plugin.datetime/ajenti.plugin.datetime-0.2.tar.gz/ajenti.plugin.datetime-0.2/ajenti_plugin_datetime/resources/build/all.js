// Generated by CoffeeScript 1.8.0
(function() {
  angular.module('ajenti.datetime', ['core']);

}).call(this);

// Generated by CoffeeScript 1.8.0
(function() {
  angular.module('core').config(function($routeProvider) {
    return $routeProvider.when('/view/datetime', {
      templateUrl: '/datetime:resources/partial/index.html',
      controller: 'DateTimeIndexController'
    });
  });

}).call(this);

// Generated by CoffeeScript 1.8.0
(function() {
  angular.module('ajenti.datetime').controller('DateTimeIndexController', function($scope, $interval, notify, pageTitle, datetime) {
    pageTitle.set('Date & Time');
    datetime.listTimezones().then(function(data) {
      return $scope.timezones = data;
    });
    datetime.getTimezone().then(function(data) {
      return $scope.timezone = data;
    });
    $scope._ = {};
    datetime.getTime().then(function(time) {
      var int;
      $scope._.time = new Date(time * 1000);
      int = $interval(function() {
        return $scope._.time = new Date($scope._.time.getTime() + 1000);
      }, 1000);
      return $scope.$on('$destroy', function() {
        return $interval.cancel(int);
      });
    });
    $scope.setTime = function() {
      return datetime.setTimezone($scope.timezone).then(function() {
        return datetime.setTime($scope._.time.getTime() / 1000).then(function() {
          return notify.success('Time set');
        })["catch"](function(e) {
          return notify.error('Failed', e.message);
        });
      })["catch"](function(e) {
        return notify.error('Failed', e.message);
      });
    };
    return $scope.syncTime = function() {
      notify.info('Synchronizing...');
      return datetime.syncTime().then(function(time) {
        $scope._.time = new Date(time * 1000);
        return notify.success('Time synchronized');
      });
    };
  });

}).call(this);

// Generated by CoffeeScript 1.8.0
(function() {
  angular.module('ajenti.datetime').service('datetime', function($http, $q, tasks) {
    this.listTimezones = function() {
      var q;
      q = $q.defer();
      $http.get("/api/datetime/tz/list").success(function(data) {
        return q.resolve(data);
      }).error(function(err) {
        return q.reject(err);
      });
      return q.promise;
    };
    this.getTimezone = function() {
      var q;
      q = $q.defer();
      $http.get("/api/datetime/tz/get").success(function(data) {
        return q.resolve(data);
      }).error(function(err) {
        return q.reject(err);
      });
      return q.promise;
    };
    this.setTimezone = function(tz) {
      var q;
      q = $q.defer();
      $http.get("/api/datetime/tz/set/" + tz).success(function(data) {
        return q.resolve(data);
      }).error(function(err) {
        return q.reject(err);
      });
      return q.promise;
    };
    this.getTime = function() {
      var q;
      q = $q.defer();
      $http.get("/api/datetime/time/get").success(function(data) {
        return q.resolve(data);
      }).error(function(err) {
        return q.reject(err);
      });
      return q.promise;
    };
    this.setTime = function(time) {
      var q;
      q = $q.defer();
      $http.get("/api/datetime/time/set/" + time).success(function(data) {
        return q.resolve(data);
      }).error(function(err) {
        return q.reject(err);
      });
      return q.promise;
    };
    this.syncTime = function() {
      var q;
      q = $q.defer();
      $http.get("/api/datetime/time/sync").success(function(data) {
        return q.resolve(data);
      }).error(function(err) {
        return q.reject(err);
      });
      return q.promise;
    };
    return this;
  });

}).call(this);

