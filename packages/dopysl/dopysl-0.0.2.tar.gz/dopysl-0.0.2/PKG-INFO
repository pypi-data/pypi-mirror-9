Metadata-Version: 1.1
Name: dopysl
Version: 0.0.2
Summary: Digital Ocean PYthon client that Sucks Less
Home-page: https://github.com/t0mk/dopysl
Author: Tomas Karasek
Author-email: tom.to.the.k@gmail.com
License: The MIT License (MIT)

Copyright (c) 2015 Tomas Karasek
Copyright (c) 2013 devo.ps

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Download-URL: https://github.com/t0mk/dopysl/archive/master.zip
Description: # Digital Ocean PYthon wrapper that Sucks Less
        
        Inspired by https://github.com/ahmontero/dop and https://github.com/devo-ps/dopy
        
        ## Installation
        
        ```
        pip install dopysl
        ```
        
        ## Getting Started
        
        Credentials for DigitalOcean API should be passed in environment variables.
        There is API v1 and v2.
        
        If you want to use APIv2, you need to find out the api token from https://cloud.digitalocean.com/settings/applications and you shoud set it as envvar:
        
        ```sh
        export DO_API_TOKEN=...
        ```
        
        If you still want to use APIv1 you need to define client ID and API key. **!!!Beware, API key for v1 is different than API token for v2 !!!**. Find it out from https://cloud.digitalocean.com/api_access and set it as:
        
        ```sh
        export DO_CLIENT_ID=...
        export DO_API_KEY=...
        ```
        
        ## Usage
        
        Theres is as Proxy singleton which you can use to query DigitalOcean API. To list all the droplets:
        
        ```python
        import dopysl
        print dopysl.all_active_droplets()
        ```
        
        alternatively more prettily:
        
        ```python
        import dopysl
        import json
        
        pp = lambda chunk: json.dumps(chunk, sort_keys=True, indent=4)
        
        pp(dopysl.all_active_droplets())
        ```
        
        If you use APIv2 you can use strings instead of id for regions, sizes, etc.
        i.e. you can do
        
        ```python
        dopysl.new_droplet('new_vm', '512mb', 'lamp', 'ams2')
        ```
        
        If you use APIv1 you first need to get ID of those.
        
        # Methods
        
        The methods of the DoManager are self explanatory; ex.
        
        ```
        dopysl.all_active_droplets()
        dopysl.show_droplet('12345')
        dopysl.destroy_droplet('12345')
        dopysl.call_regions()
        dopysl.call_images()
        dopysl.call_ssh_keys()
        dopysl.sizes()
        dopysl.all_domains()
        dopysl.new_droplet('new_droplet', 66, 1601, 1)
        ```
        
        The methods for v.2 API are similar, the only difference
        is using names instead of IDs for domains and slugs for
        sizes, images and datacenters; ex.
        
        ```
        dopysl.show_domain('exapmle.com')
        dopysl.new_droplet('new_droplet', '512mb', 'lamp', 'ams2')
        ```
        
        More in https://github.com/t0mk/dopysl/blob/master/dopy/manager.py
        
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
