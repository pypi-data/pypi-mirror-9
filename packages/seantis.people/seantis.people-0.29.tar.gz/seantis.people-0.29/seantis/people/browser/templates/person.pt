<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="seantis.people">

    <metal:block metal:use-macro="context/main_template/macros/master">
        <metal:block fill-slot="content-core">
            <div class="person-wrapper"> 
                <tal:block repeat="position view/visible_positions" define="split_screen_class python: view.split_screen() and 'splitscreen' or ''">
                    <div tal:attributes="class python: 'person-details person-details-{} {}'.format(position, split_screen_class)">
                      <tal:block repeat="field python: view.fields(position)">
                        <tal:block condition="python: field in context.membership_fields" define="
                          person python: context;
                          method field;
                          ">
                          <tal:block define="label python: context.membership_fields[field]">
                            <metal:use use-macro="context/@@seantis-people-macros/person-memberships" />
                          </tal:block>
                        </tal:block>
                        <tal:block condition="python: field not in context.membership_fields">
                          <tal:block define="value context/?field" condition="python: value is not None">
                            <div class="person-detail">
                              <h2 tal:content="python: view.get_field_title(field)" />
                              <div tal:content="structure python: view.renderer.render(context, field)" />
                            </div>
                          </tal:block>
                        </tal:block>
                      </tal:block>
                    </div>
                </tal:block>
                <div class="visualClear"></div>
                <div class="listingBar onegovBatching person-navigation" tal:define="
                  adjacent view/get_adjacent_urls;
                " tal:condition="python: any(adjacent)">
                  <a i18n:translate="" tal:attributes="href python: adjacent[0]" tal:condition="python: adjacent[0]" class="previous">Previous portrait</a>
                  <a i18n:translate="" tal:attributes="href python: adjacent[1]" tal:condition="python: adjacent[1]" class="next">Next portrait</a>
                </div>
            </div>
        </metal:block>
    </metal:block>

</html>