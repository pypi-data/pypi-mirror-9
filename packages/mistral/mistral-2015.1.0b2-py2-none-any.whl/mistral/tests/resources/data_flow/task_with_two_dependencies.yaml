Namespaces:
  MyService:
    # These ad-hoc actions based on std.echo have parameters only for test
    # purposes. In practice, it's more convenient just to use std.echo and
    # specify parameter 'output'.
    actions:
      build_full_name:
        class: std.echo
        base-parameters:
          output: '{$.first_name} {$.last_name}'
        parameters:
          - first_name
          - last_name
        output:
          full_name: $

      build_greeting:
        class: std.echo
        base-parameters:
          output: Cheers!
        output:
          greeting: $

      send_greeting:
        class: std.echo
        base-parameters:
          output: True
        parameters:
          - f_name
          - greet_msg
        output:
          greeting_sent: $

Workflow:
  #  context = {
  #    'person': {
  #        'first_name': 'John',
  #        'last_name': 'Doe',
  #        'address': {
  #            'street': '124352 Broadway Street',
  #            'city': 'Gloomington',
  #            'country': 'USA'
  #        }
  #    }
  #  }

  tasks:
    build_full_name:
      action: MyService.build_full_name
      parameters:
        first_name: $.person.first_name
        last_name: $.person.last_name
      publish:
        f_name: $.full_name

    build_greeting:
      requires: [build_full_name]
      action: MyService.build_greeting
      publish:
        greet_msg: $.greeting

    send_greeting:
      requires: [build_full_name, build_greeting]
      action: MyService.send_greeting
      parameters:
        f_name: $.f_name
        greet_msg: $.greet_msg
