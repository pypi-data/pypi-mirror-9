(function(){$(document).ready(function(){var EPOCH_KEY="p2rb.reviewer_epoch";var rootEditor=RB.PageManager.getPage().reviewRequestEditor;var rootEditorView=RB.PageManager.getPage().reviewRequestEditorView;var $ErrorContainer=$("#error-container");function reportError(aMsg){if(typeof aMsg=="object"){if(aMsg.errorText){aMsg=aMsg.errorText}else{aMsg=JSON.stringify(aMsg,null,"	")}}$("#error-info").text(aMsg);$("#error-stack").text((new Error).stack);$ErrorContainer.attr("haserror","true");RB.PageManager.getPage().reviewRequestEditorView._scheduleResizeLayout()}$("#error-close").click(function(){$ErrorContainer.attr("haserror","false")});$("#error-stack-toggle").click(function(){$("#error-stack").toggle()});var Reviewer=RB.BaseResource.extend({defaults:{username:""},initialize:function(options){var person=options.person;if(person.hasOwnProperty("username")){this.set("username",person["username"])}else{this.set("username",person["title"])}}});var ReviewerList=Backbone.Collection.extend({model:Reviewer});var ReviewerListView=Backbone.View.extend({render:function(){return this.collection.pluck("username").join(", ")}});var Commit=Backbone.Model.extend({defaults:{loaded:false,editable:false,canViewDraft:false},requestOrDraft:function(){return this.reviewRequest.draft.id!==undefined?this.reviewRequest.draft:this.reviewRequest},hasDraft:function(){return this.reviewRequest.draft.id!==undefined},initialize:function(options){this.reviewers=new ReviewerList;this.reviewRequest=new RB.ReviewRequest({id:options.reviewRequestID});this.commitID=options.commitID;this.id=options.reviewRequestID;this.editor=new RB.ReviewRequestEditor({reviewRequest:this.reviewRequest})},ready:function(aSuccess,aFailure){var reviewable=this.get("canViewDraft")?this.reviewRequest.draft:this.reviewRequest;reviewable.ready({ready:function(){this.updateReviewers();this.set("loaded",true);aSuccess()},error:function(aMessage){aFailure(aMessage)}},this)},updateReviewers:function(){var targetPeople=this.requestOrDraft().get("targetPeople");var reviewers=_.map(targetPeople,function(aTargetPerson){return new Reviewer({person:aTargetPerson})});this.reviewers.reset(reviewers)},getReviewerNames:function(){return this.reviewers.pluck("username")}});var CommitList=Backbone.Collection.extend({model:Commit});var CommitView=Backbone.View.extend({tagName:"li",commitTemplate:_.template($("#rbmozui-commits-child").html()),linksTemplate:_.template($("#rbmozui-commit-links").html()),initialize:function(options){this.listenTo(this.model,"change",this.render);this.listenTo(this.model.reviewers,"reset",this.render);this.listenTo(this.model.reviewRequest,"change",this.render);this.listenTo(this.model.reviewRequest.draft,"change",this.render);this.listView=options.listView;this.model.ready(function(){console.log("Successfully loaded Commit with ID "+this.model.commitID+" at review request with ID "+this.model.id)}.bind(this),reportError)},render:function(){var isCurrent=this.model.id==gReviewRequest.id;this.$el.attr("current",isCurrent);if(!this.model.get("loaded")){this.$el.html("Loading...");return this}var reviewers=new ReviewerListView({collection:this.model.reviewers});var reviewable=this.model.requestOrDraft();var links=this.linksTemplate({childURL:this.model.reviewRequest.get("reviewURL")});this.$el.html(this.commitTemplate({commitID:this.model.commitID,commitIDShort:this.model.commitID.substring(0,8),description:reviewable.get("description"),summary:reviewable.get("summary"),childID:this.model.id,reviewers:reviewers.render(),links:links}));var editable=this.model.get("editable");var editorOptions={editIconClass:"rb-icon rb-icon-edit",useEditIconOnly:true,enabled:editable,deferEventSetup:true};var reviewerList=this.$el.find(".child-rr-reviewers");reviewerList.inlineEditor(editorOptions).on({beginEdit:function(){rootEditor.incr("editCount")},cancel:function(){rootEditor.decr("editCount")},complete:_.bind(function(e,value){var editor=new RB.ReviewRequestEditor({reviewRequest:this.model.reviewRequest});var warning=$("#review-request-warning");var sanitized=value.split(" ").map(function(aName){var trimmed=aName.trim();if(trimmed.indexOf(":")==0){trimmed=trimmed.substring(1)}return trimmed});editor.setDraftField("targetPeople",sanitized.join(", "),{jsonFieldName:"target_people",error:function(error){rootEditor.decr("editCount");console.error(error.errorText);warning.delay(6e3).fadeOut(400,function(){$(this).hide()}).show().html(error.errorText);$(reviewerList).text(reviewers.render())},success:function(){rootEditor.decr("editCount");this.model.updateReviewers();this.listView.updateRootReviewers();rootEditorView.showBanner()}},this)},this)});var acOptions={fieldName:"users",nameKey:"username",descKey:"fullname",extraParams:{fullname:1},cmp:function(term,a,b){var aUsername=a.data.username,bUsername=b.data.username,aFullname=a.data.fullname||"",bFullname=a.data.fullname||"";if(aUsername.indexOf(term)===0){if(bUsername.indexOf(term)===0){return aUsername.localeCompare(bUsername)}return-1}else if(bUsername.indexOf(term)===0){return 1}else{return aFullname.localeCompare(bFullname)}}};$(reviewerList).inlineEditor("field").rbmozuiautocomplete({formatItem:function(data){var s=data[acOptions.nameKey];if(acOptions.descKey&&data[acOptions.descKey]){s+=" <span>("+_.escape(data[acOptions.descKey])+")</span>"}return s},matchCase:false,multiple:true,searchPrefix:":",parse:function(data){var items=data[acOptions.fieldName],itemsLen=items.length,parsed=[],value,i;for(i=0;i<itemsLen;i++){value=items[i];parsed.push({data:value,value:value[acOptions.nameKey],result:value[acOptions.nameKey]})}return parsed},url:SITE_ROOT+"api/"+(acOptions.resourceName||acOptions.fieldName)+"/",extraParams:acOptions.extraParams,cmp:acOptions.cmp,width:350,error:function(xhr){var text;try{text=$.parseJSON(xhr.responseText).err.msg}catch(e){text="HTTP "+xhr.status+" "+xhr.statusText}reportError(text)}}).on("autocompleteshow",function(){var resultsPane=$(".ui-autocomplete-results:not("+":has(.ui-autocomplete-footer))");if(resultsPane.length>0){$("<div/>").addClass("ui-autocomplete-footer").text(gettext("Press Tab to auto-complete.")).appendTo(resultsPane)}});$(reviewerList).inlineEditor("setupEvents");RB.PageManager.getPage().reviewRequestEditorView._scheduleResizeLayout();return this}});var CommitListView=Backbone.View.extend({linksTemplate:_.template($("#rbmozui-commit-links").html()),initialize:function(options){console.log("Initializing CommitListView");this.model=new RB.ReviewRequest({id:options.rootID});this.commitList=new CommitList;this.listenTo(this.commitList,"add",this.add);var self=this;console.log("Requesting root review request and draft");var mutableByUser=rootEditor.get("mutableByUser");var reviewable=mutableByUser?this.model.draft:this.model;reviewable.ready({ready:function(){console.log("Loaded root review request.");var reviewable=self.model.draft.id?self.model.draft:self.model;var extraData=reviewable.get("extraData");var isSquashed=extraData["p2rb.is_squashed"].toString().toLowerCase()=="true";if(!isSquashed){reportError("Root review request with ID: "+self.model.id+" does not "+"have p2rb.is_squashed set to True");return}var isMutable=rootEditor.get("mutableByUser");var isViewingRoot=self.model.id==gReviewRequest.id;var childIDs=extraData["p2rb.commits"];if(!childIDs){reportError("Root review request with ID: "+self.model.id+" does not "+"have p2rb.commits set.");return}self.epoch=parseInt(reviewable.get("extraData")[EPOCH_KEY],10)||0;console.log("Root review request loaded with epoch set at "+self.epoch);childIDs=JSON.parse(childIDs);var commits=childIDs.map(function(tuple,index){return new Commit({commitID:tuple[0],reviewRequestID:tuple[1],editable:isViewingRoot&&isMutable,canViewDraft:isMutable})});self.commitList.add(commits);var links=self.linksTemplate({childURL:self.model.get("reviewURL")});$("#rbmozui-commits-root-links").html(links);if(isViewingRoot){$("#rbmozui-commits-root").attr("current","true")}},error:function(errorObject){console.error("Error: "+errorObject);reportError(errorObject)}})},add:function(commit){var view=new CommitView({model:commit,listView:this});$("#rbmozui-commits-children").append(view.render().el)},updateRootReviewers:function(){var reviewerNameList=[];this.commitList.forEach(function(commit){reviewerNameList=reviewerNameList.concat(commit.getReviewerNames())});var self=this;var reviewerNames=_.unique(reviewerNameList).join(",");console.log("Setting reviewers on root review request to: "+reviewerNames);rootEditor.setDraftField("targetPeople",reviewerNames,{jsonFieldName:"target_people",success:function(){console.log("Successfully set reviewers on root review request");self.epoch++;console.log("Setting epoch to "+self.epoch);rootEditor.setDraftField(EPOCH_KEY,self.epoch,{fieldID:EPOCH_KEY,jsonFieldName:EPOCH_KEY,useExtraData:true,success:function(){console.log("Root review request epoch has been set to "+self.epoch)},error:function(errorObject){console.error("Failed to bump root review request epoch. Error was: "+errorObject.errorText)}})},error:function(errorObject){console.error("Failed to set reviewers on root review request: "+errorObject.errorText)}})}});var rootID=$("#rbmozui-commits-root").data("id");if(!rootID){console.error("Could not find a valid id for the root review "+"request.");return}console.log("Found root review request ID: "+rootID);new CommitListView({rootID:rootID})})}).call(this);