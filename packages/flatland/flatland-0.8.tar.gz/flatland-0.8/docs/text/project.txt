
The Flatland Project
********************


License
=======

Copyright Â© The Flatland authors and contributors

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


Authors & Contributors
======================

Flatland was originally written by Jason Kirtland.

Contributors are:

* Dan Colish <dcolish@gmail.com>

* Jason Kirtland <jek@discorporate.us>

* Adam Lowry

* Dag Odenhall

* Michel Pelletier

* Ollie Rutherfurd

* Benjamin Stover

* Thomas Waldmann

* Scott Wilson

Portions derived from other open source works and are clearly marked.


History
=======

Flatland is a Python implementation of techniques I've been using for
form and web data processing for ages, in many different languages.
It is an immediate conceptual descendant and re-write of "springy", a
closed-source library used internally at Virtuous, Inc.  The Genshi
filter support was donated to the Flatland project by Virtuous.


Documentation Todo List
=======================

Todo: doc descent_validators

(The *original entry* is located in  /Users/jek/projects/oss/src
/flatland-main/flatland/schema/containers.py:docstring of
flatland.schema.containers.Container.descent_validators, line 1.)

Todo: doc field_schema

(The *original entry* is located in  /Users/jek/projects/oss/src
/flatland-main/flatland/schema/containers.py:docstring of
flatland.schema.containers.Mapping.field_schema, line 1.)

Todo: doc set()

(The *original entry* is located in  /Users/jek/projects/oss/src
/flatland-main/flatland/schema/containers.py:docstring of
flatland.schema.containers.Mapping.set, line 1.)

Todo: doc set()

(The *original entry* is located in  /Users/jek/projects/oss/src
/flatland-main/flatland/schema/compound.py:docstring of
flatland.schema.compound.Compound.set, line 1.)

Todo: intro

(The *original entry* is located in  /Users/jek/projects/oss/src
/flatland-main/docs/source/schema/dicts.rst, line 7.)

Todo: strict, duck, etc.

(The *original entry* is located in  /Users/jek/projects/oss/src
/flatland-main/docs/source/schema/dicts.rst, line 14.)

Todo: doc of()

(The *original entry* is located in  /Users/jek/projects/oss/src
/flatland-main/flatland/schema/containers.py:docstring of
flatland.schema.containers.Dict.of, line 1.)

Todo: doc set()

(The *original entry* is located in  /Users/jek/projects/oss/src
/flatland-main/flatland/schema/containers.py:docstring of
flatland.schema.containers.Dict.set, line 1.)

Todo: FIXME UPDATE:FieldSchemas are a bit like Python "class"
definitions: they need be defined only once and don't do much on their
own. "FieldSchema.create_element()" produces "Elements"; closely
related objects that hold and manipulate form data.  Much like a
Python "class", a single "FieldSchema" may produce an unlimited number
of "Element" instances.

(The *original entry* is located in  /Users/jek/projects/oss/src
/flatland-main/docs/source/schema/schema.rst, line 20.)

Todo: FIXME UPDATE:FieldSchema instances may be freely composed and
shared among many containers.

(The *original entry* is located in  /Users/jek/projects/oss/src
/flatland-main/docs/source/schema/schema.rst, line 36.)

Todo: FIXME UPDATE:Elements can be supplied to template environments
and used to great effect there: elements contain all of the
information needed to display or redisplay a HTML form field,
including errors specific to a field.The "u", "x", "xa" and "el()"
members are especially useful in templates and have shortened names to
help preserve your sanity when used in markup.

(The *original entry* is located in  /Users/jek/projects/oss/src
/flatland-main/docs/source/schema/schema.rst, line 50.)
