Metadata-Version: 1.0
Name: canopener
Version: 0.1.6
Summary: Python convenience function for opening compressed URLs and files.
Home-page: https://github.com/selassid/canopener
Author: David Selassie
Author-email: selassid@gmail.com
License: Copyright (c) 2012-2014, David Selassie
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Description: =========
        canopener
        =========
        
        .. image:: https://travis-ci.org/selassid/canopener.svg?branch=master
            :target: https://travis-ci.org/selassid/canopener
        
        Python convenience function ``canopener(filename, mode='r')`` for opening files.
        
        Local files behave identically to ``open()``::
        
            >>> canopener('local_file.txt')
        
        URLs can also be passed as the filename and opened for reading. ``urllib2.urlopen()`` is used under the covers, so it has equivalent support::
        
            >>> canopener('http://remote/file.txt')
        
        S3 URLs can also be read if the boto_ module is installed and the ``AWS_ACCESS_KEY_ID`` and ``AWS_SECRET_ACCESS_KEY`` environment variables are set. The file is downloaded to a temporary local file on open::
        
            >>> os.environ['AWS_ACCESS_KEY_ID'] = 'key'
            >>> os.environ['AWS_SECRET_ACCESS_KEY'] = 'secret'
            >>> canopener('s3://bucket/file.txt')
        
        .. _boto: https://github.com/boto/boto
        
        Any paths with ".gz" or ".bz2" extensions are transparently decompressed::
        
            >>> canopener('local_file.txt.gz')
            >>> canopener('local_file.txt.bz2')
            >>> canopener('http://remote/file.txt.gz')
            >>> canopener('s3://bucket/file.txt.gz')
        
        There's also transparent compression when writing to local files::
        
            >>> canopener('local_file.txt.gz', 'w')
        
Keywords: o,p,e,n, ,f,i,l,e, ,s,3, ,u,r,l, ,b,z,i,p, ,b,z,2, ,g,z,i,p, ,g,z
Platform: UNKNOWN
