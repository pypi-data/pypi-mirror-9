/*
 * Copyright (c) AppDynamics Inc
 * All rights reserved
 * Created by guru.tahasildar on 9/4/14.
 */
option java_package = "com.appdynamics.push.notification.api";

option java_outer_classname = "PushNotificationAPI";

enum MobileDevicePlatform {
    IOS = 1;
    ANDROID = 2;
}

/**
 * Represents device on which AppD App is installed.
 * If multiple users share same physical device then we will create one such entry per User. So, this really represents
 * a logical device rather than a physical device. This was also done to simplify some (user-device) management at
 * App side.
 */
message MobileDevice {
    optional string uuid = 1;
    optional string name = 2;
    optional MobileDevicePlatform platform = 3 [default = IOS];
    optional bool enabled = 4;
}

/**
 * Represents content's of Mobile Device registration response.
 */
message MobileDeviceRegistrationResponse {
    required string deviceUuid = 1;
    required string globalAccountName = 2;
}

/**
 * Represents content's of Mobile Device token registration/ update request.
 */
message MobileDeviceTokenRegistrationRequest {
    required string deviceUuid = 1;
    required string globalAccountName = 2;
    optional MobileDevicePlatform platform = 3 [default = IOS];
    required string newToken = 4;
    optional string oldToken = 5;
}

/**
 * When User clicks on Push Notification pop-up, we show event details, for which notification message needs
 * event id and time at which event took place (needed by controller api which App uses).
 */
message EventInstance {
    required int64 eventId = 1;
    required int64 timestamp = 2;    // Milliseconds since Epoch
}

/**
 * Defines the different types of Push Notification messages.
 * Used by Mobile App to perform different things depending on type of notification.
 */
enum PushNotificationMessageType {
    REGISTRATION_MESSAGE = 0;
    SINGLE_EVENT_MESSAGE = 1;
    MULTIPLE_EVENTS_MESSAGE = 2;
}

/**
 * Contents of message which are sent by Controller to Push Notification infrastructure.
 */
message NotificationMessage {
    required PushNotificationMessageType type = 1;
    required string alertBody = 2;
    required string globalAccountName = 3;
    repeated string deviceUuids = 4;
    repeated EventInstance eventInstances = 5;
    optional int64 applicationId = 6;
}
