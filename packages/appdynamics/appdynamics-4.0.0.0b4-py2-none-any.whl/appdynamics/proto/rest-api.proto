/*
 * Copyright (c) AppDynamics Inc
 * All rights reserved
 */
option java_package = "com.appdynamics.rest.api";

option java_outer_classname = "RestAPI";

message Error {
  required string code = 1;  // application error code
  required string message = 2;  // error message
  required string href = 3;  // reference URL about the error
  optional string refCode = 4;  // optional reference code associated to the erroneous request
}

message Link {
  required string href = 1;  // fully qualified url of the resource
  optional string name = 2;  // name of the resource
}

message Action {
  required string href = 1;  // fully qualified url of the resource
  repeated string method = 2;  // HTTP methods, ie POST, PUT, PATCH
  required string name = 3;  // name of the action
  repeated string options = 4;  // input options of this action
}

message NameValuePair {
  required string name = 1;
  required string value = 2;
}

message Application {
  required string id = 1;  // unique id of the application
  required string name = 2;  // name of the application
  optional string description = 3;  // description of the application
  optional Nodes nodes = 4;  // nodes assigned to the application
  repeated Link links = 5;
}

message Applications {
  repeated Application applications = 1;
  repeated Link links = 2;
}

message Node {
  required string id = 1;  // unique id of the node
  required string name = 2;  // name of the node
  required string type = 3;  // type of the node
  repeated Action actions = 4;
  repeated Link links = 5;
}

message Nodes {
  repeated Node nodes = 1;
  repeated Action actions = 2;
  repeated Link links = 3;
}

message OperationRequest {
  required string name = 1;  // operation name
  repeated NameValuePair properties = 2;  // operation properties
}

message Operation {
  required string id = 1;  // unique id of the operation
  required string name = 2;  // name of the operation
  required string status = 3;  // status of the operation
  repeated NameValuePair properties = 4;  // operation properties
}

message Operations {
  repeated Operation operations = 1;
  repeated Action actions = 2;
}

message HealthRule {
  required string id = 1;  // unique id of the health rule
  required string name = 2;  // name of the health rule
  required string type = 3;  // type of the health rule
  required string description = 4;  // health rule details
  required bool enabled = 5;  // status of the health rule
  required uint32 waitTimeInMinutes = 6;  // waiting time in minutes
  required uint32 durationInMintues = 7;  // duration in minutes
  repeated Action actions = 8;
}

message HealthRules {
  repeated HealthRule healthrules = 1;
  repeated Action actions = 2;
  repeated Link links = 3;
}

message Triggers {
  repeated string healthRules = 1;  // name of the health rules
  repeated string eventTypes = 2;  // name of the event types
  repeated string requestTypes = 3;  // name of the request types
}

message Policy {
  required string id = 1;  // unique id of the policy
  required string name = 2;  // name of the policy
  required string type = 3;  // type of the policy
  required bool enabled = 4;  // status of the policy
  required bool batchingPerMinute = 5;  // batching mode
  required Triggers triggers = 6;  // triggers of the policy
  repeated string policyActions = 7;  // action name
  repeated Action actions = 8;
}

message Policies {
  repeated Policy policies = 1;
  repeated Action actions = 2;
  repeated Link links = 3;
}

message LicenseUsage {
  repeated NameValuePair allowed = 1;
  repeated NameValuePair used = 2;
}

message Account {
  required string id = 1;  // unique id of the account
  required string name = 2;  // name of the account
  repeated Link links = 3;
}

message Accounts {
  repeated Account accounts = 1;
}

message Users {
    repeated User users = 1;
}
message User {
    optional string id = 1;
    optional string name = 2;
    optional string displayName = 3;
    optional string email = 4;
    repeated Link links = 5;
}

message TimeRangeSpecification {
  optional string startTimeMillis = 1; //an optional start time, if not specified, will start "now". ISO-8601
  optional string endTimeMillis = 2; //an optional end time, if not specified, please specify duration.  ISO-8601
  optional int32 durationMillis = 3; //an optional duration, if not specified, please specify end time
}

enum AffectedEntityType {
    APP = 0;
    MACHINE = 1;
    BT = 2;
    TIER = 3;
    NODE = 4;
}

enum StringMatchOperator {
    EQUALS = 0;
    STARTSWITH = 1;
    ENDSWITH = 2;
    CONTAINS = 3;
    REGEX = 4;
    INLIST = 5;
    NOT_EMPTY = 6;
}

enum NodeType {
    ALL = 0;
    JAVA = 1;
    DOT_NET = 2;
    PHP = 3;
}

message MachineAffectedEntities {
    enum MachineAffectedEntityType {
        SPECITIC = 0;
    }
    required MachineAffectedEntityType type = 1;
    repeated uint64 machines = 2; //set this if the type is SPECIFIC
}

message BTAffectedEntities {
    enum BTAffectedEntityType {
        ALL = 0;
        WITHIN_TIERS = 1;
        SPECIFIC = 2;
        CRITERIA = 3;
    }
    required BTAffectedEntityType type = 1;
    repeated int64 tiers = 2; //set this if the type is WITHIN_TIERS
    repeated int64 bts = 3; //set this if the type is SPECIFIC
    optional StringMatchOperator matchesOperator = 4; //set this if the type is CRITERIA
    optional string matchesValue = 5; //set this if the type is CRITERIA
}

message TierAffectedEntities {
    enum TierAffectedEntityType {
        ALL = 0;
        SPECIFIC = 1;
    }
    required TierAffectedEntityType type = 1;
    repeated uint64 tiers = 2; //set this if the type is SPECIFIC
}

message NodeAffectedEntities {
    enum NodeAffectedEntityType {
        ALL = 0;
        WITHIN_TIERS = 1;
        SPECIFIC = 2;
        NAME_CRITERIA = 3;
        PROPERTY_CRITERIA = 4;
    }
    required NodeAffectedEntityType type = 1;
    required NodeType nodeType = 2;
    repeated int64 tiers = 3; //set this if the type is WITHIN_TIERS
    repeated int64 nodes = 4; //set this if the type is SPECIFIC
    optional StringMatchOperator nameMatchesOperator = 5; //set this if the type is NAME_CRITERIA
    optional string nameMatchesValue = 6; //set this if the type is NAME_CRITERIA
    repeated NameValuePair metaInfoProperties = 7; //set this if the type is PROPERTY_CRITERIA
    repeated NameValuePair environmentVariables = 8; //set this if the type is PROPERTY_CRITERIA
    repeated NameValuePair jvmSystemVariables = 9; //set this if the type is PROPERTY_CRITERIA and the nodeType is JAVA
}

//must have exactly one field with values but no more than that
message AffectedEntities {
  required AffectedEntityType type = 1;
  optional MachineAffectedEntities machineAffectedEntities = 2; //set this if the type is MACHINES
  optional BTAffectedEntities btAffectedEntities = 3; //set this if the type is BTS
  optional TierAffectedEntities tierAffectedEntities = 4; //set this if the type is TIERS
  optional NodeAffectedEntities nodeAffectedEntities = 5; //set this if the type is NODES
}

message ActionSuppression {
  optional string id = 1; //unique id of the action suppression
  required string name = 2;
  required TimeRangeSpecification timeRange = 3; //how long should the suppression be active
  repeated int64 healthRuleIds = 4; //health rule scope if any
  required AffectedEntities affects = 5; //
  repeated Action actions = 6;
}

message ActionSuppressions {
  repeated ActionSuppression actionSuppressions = 1;
  repeated Action actions = 2;
  repeated Link links = 3;
}

message LicenseUsages {
    repeated Usage usages = 1;
}

message Usage {
  required string id = 1; // unique id corresponding to the license usage (either AggregatedLicenseUsage ot LicenseUsage)
  optional int64 maxUnitsUsed = 2; //Maximum usage count out of the collected samples for the hourly resolution.
  optional int64 minUnitsUsed = 3; //Minimum usage count out of the collected samples for the hourly resolution.
  optional int64 avgUnitsUsed = 4; //Average usage count over the samples collected over an hour.
  optional double totalUnitsUsed = 5; //Sum of all the usage count of all the samples.
  optional int64 sampleCount = 6;   //License Usage samples collected during an hour
  optional int64 avgUnitsAllowed = 7; //Avg max units allowed for an hour.
  optional int64 avgUnitsProvisioned = 8; //Avg max units provisioned for an hour.
  required int64 accountId = 9; //Account Id of the account corresponding to license usage sample.
  required string agentType = 10; //Agent type
  required int64 createdOn = 11; //Sampling time (millis since epoch)
  optional string createdOnIsoDate = 12; //Sampling time in iso format
  optional int32 hourOfTheDay = 13; //hour of the day for which the data is aggregated.

  optional int64 unitsUsed = 14; //Units used by the agent during sampling.
  optional int64 unitsProvisioned = 15; //Units provisioned during the sampling
  optional int64 unitsAllowed = 16; //Max units allowed for the agent during sampling.
}

message License {
   repeated LicenseModule modules = 1;  //License modules for a license
   repeated Link links = 2;
}

message LicenseModule {
    optional string name = 1; // name of the license module
    repeated Link links = 2;
    repeated NameValuePair properties = 3; //Properties for the license module .
}

message EntityLogLevels {
  repeated EntityLogLevel entityLogLevels = 1;
}

message EntityLogLevel {
    required EntityTypeEnum.EntityType entityType = 1;
    required int64 entityId = 2;
    required LevelEnum.Level level = 3;
}

// Need these two auxiliary messages because of namespace conflicts
message LevelEnum {
   enum Level {
       ALL = 0;
       TRACE = 1;
       DEBUG = 2;
       INFO = 3;
       WARN = 4;
       ERROR = 5;
       OFF = 6;
   }
}

// This protobuf Enum must be kept in sync with the Enum com.singularity.ee.controller.api.constants.EntityType
// at all times.  The order of the enum values must be the same.
message EntityTypeEnum {
   enum EntityType {
           ACCOUNT = 0;
           AGENT_CONFIGURATION = 1;
           ALL = 2;
           APPLICATION = 3;
           APPLICATION_COMPONENT = 4;
           APPLICATION_COMPONENT_NODE = 5;
           APPLICATION_DIAGNOSTIC_DATA = 6;
           MOBILE_APPLICATION = 7;
           AUTOMATIC_LEAK_DETECTION = 8;
           BACKEND = 9;
           BACKEND_DISCOVERY_CONFIG = 10;
           BUSINESS_TRANSACTION = 11;
           BUSINESS_TRANSACTION_GROUP = 12;
           CALL_GRAPH_CONFIGURATION = 13;
           CUSTOM_EXIT_POINT_DEFINITION = 14;
           CUSTOM_MATCH_POINT_DEFINITION = 15;
           CUSTOM_MEMORY_STRUCTURE = 16;
           DASHBOARD = 17;
           ERROR = 18;
           ERROR_CONFIGURATION = 19;
           DOT_NET_ERROR_CONFIGURATION = 20;
           PHP_ERROR_CONFIGURATION = 21;
           NODEJS_ERROR_CONFIGURATION = 22;
           PYTHON_ERROR_CONFIGURATION = 23;
           EUM_CONFIGURATION = 24;
           BLITZ_CONFIGURATION = 25;
           EVENT = 26;
           GLOBAL_CONFIGURATION = 27;
           INCIDENT = 28;
           JMX_CONFIG = 29;
           MACHINE_INSTANCE = 30;
           MEMORY_CONFIGURATION = 31;
           NOTIFICATION_CONFIG = 32;
           OBJECT_INSTANCE_TRACKING = 33;
           POLICY = 34;
           RULE = 35;
           SERVICE_ENDPOINT_DEFINITION = 36;
           SERVICE_ENDPOINT_DEFINITION_CONTAINER = 37;
           SQL_DATA_GATHERER_CONFIG = 38;
           STACK_TRACE = 39;
           THREAD_TASK = 40;
           TRANSACTION_MATCH_POINT_CONFIG = 41;
           USER = 42;
           GROUP = 43;
           ACCOUNT_ROLE = 44;
           WORKFLOW = 45;
           WORKFLOW_EXCUTION = 46;
           POJO_DATA_GATHERER_CONFIG = 47;
           HTTP_REQUEST_DATA_GATHERER_CONFIG = 48;
           BASE_PAGE = 49;
           IFRAME = 50;
           VIRTUAL_PAGE = 51;
           AJAX_REQUEST = 52;
           SYNTH_SCHEDULE_REF = 53;
           MOBILE_NETWORK_REQUEST = 54;
           SERVICE_END_POINT = 55;
           INFO_POINT = 56;
           METRIC_BASELINE = 57;
           DB_SERVER = 58;
           DOT_NET_AGENT_CONFIG = 59;
           DOT_NET_MACHINE_CONFIG = 60;
           ACTION = 61;
           ACTION_SUPPRESSION = 62;
           EVENT_REACTOR = 63;
           REMOTE_SERVICES = 64;
           HTTP_REQUEST_ACTION_PLAN_CONFIG = 65;
           HTTP_REQUEST_ACTION_MEDIA_TYPE_CONFIG = 66;
           MOBILE_DEVICE = 67;
           HOTSPOT_DEFINITION = 68;
           HOTSPOT_DEFINITION_CONTAINER = 69;
   }
}
