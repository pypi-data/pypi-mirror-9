Metadata-Version: 1.0
Name: opentuner
Version: 0.5.0
Summary: An extensible framework for program autotuning
Home-page: http://opentuner.org/
Author: Jason Ansel
Author-email: jansel@jansel.net
License: MIT
Description: OpenTuner
        =========
        
        Program autotuning has been demonstrated in many domains to achieve
        better or more portable performance. However, autotuners themselves are
        often not very portable between projects because using a domain informed
        search space representation is critical to achieving good results and
        because no single search technique performs best for all problems.
        
        OpenTuner is a new framework for building domain-specific
        multi-objective program autotuners. OpenTuner supports fully
        customizable configuration representations, an extensible technique
        representation to allow for domain-specific techniques, and an easy to
        use interface for communicating with the tuned program. A key capability
        inside OpenTuner is the use of ensembles of disparate search techniques
        simultaneously, techniques which perform well will receive larger
        testing budgets and techniques which perform poorly will be disabled.
        
        System dependencies
        -------------------
        
        A list of system dependencies can be found in
        `debian-packages-deps <https://raw.github.com/jansel/opentuner/master/debian-packages-deps>`__
        which are primarily python 2.6+ (not 3.x) and sqlite3 (or your
        `supported <http://docs.sqlalchemy.org/en/rel_0_8/dialects/index.html>`__
        database backend of choice).
        
        On Ubuntu/Debian there can be installed with:
        
        ::
        
            sudo apt-get install `cat debian-packages-deps | tr '\n' ' '`
        
        Installation
        ------------
        
        OpenTuner (and dependencies) can be installed with
        
        ::
        
            sudo pip install opentuner
        
        or
        
        ::
        
            pip install --user opentuner
        
        This will not install any of the example programs.
        
        Development installation
        ------------------------
        
        For development (running OpenTuner out of a git checkout), a list of
        python dependencies can be found in
        `requirements.txt <https://raw.github.com/jansel/opentuner/master/requirements.txt>`__
        these can be installed system-wide with ``pip``.
        
        ::
        
            sudo apt-get install python-pip
            sudo pip install -r requirements.txt
        
        Or you can use virtual env to create a isolated python environment by
        running:
        
        ::
        
            python ./venv-bootstrap.py
        
        which will create a ./venv/bin/python (./venv/Scripts/python.exe on
        windows) with all the required packages installed.
        
        Checking Installation
        ---------------------
        
        Quickly checking that a successful installation has been made, may be
        performed by running an example program such as:
        
        ::
        
            ./examples/rosenbrock/rosenbrock.py
        
        Tutorials
        ---------
        
        -  `Tutorial: Optimizing Block Matrix
           Multiplication <http://opentuner.org/tutorial/gettingstarted/>`__
        -  `Creating OpenTuner
           Techniques <https://github.com/jansel/opentuner/wiki/TechniqueTutorial>`__.
        
        Papers
        ------
        
        -  `OpenTuner: An Extensible Framework for Program
           Autotuning <http://groups.csail.mit.edu/commit/papers/2014/ansel-pact14-opentuner.pdf>`__.
           Jason Ansel, Shoaib Kamil, Kalyan Veeramachaneni, Jonathan
           Ragan-Kelley, Jeffrey Bosboom, Una-May O'Reilly, Saman Amarasinghe.
           International Conference on Parallel Architectures and Compilation
           Techniques. Edmonton, Canada. August, 2014.
           `Slides <http://groups.csail.mit.edu/commit/papers/2014/ansel-pact14-opentuner-slides.pdf>`__.
           `Bibtex <http://groups.csail.mit.edu/commit/bibtex.cgi?key=ansel:pact:2014>`__.
        
        Contributing Code
        -----------------
        
        The preferred way to contribute code to OpenTuner is to fork the project
        on github and `submit a pull
        request <https://www.openshift.com/wiki/github-workflow-for-submitting-pull-requests>`__.
        
        Support
        -------
        
        OpenTuner is supported in part by the United States Department of Energy
        `X-Stack <http://science.energy.gov/ascr/research/computer-science/ascr-x-stack-portfolio/>`__
        program as part of `D-TEC <http://www.dtec-xstack.org/>`__.
        
Platform: UNKNOWN
