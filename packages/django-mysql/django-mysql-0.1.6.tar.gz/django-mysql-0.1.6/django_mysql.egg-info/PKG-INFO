Metadata-Version: 1.1
Name: django-mysql
Version: 0.1.6
Summary: Extensions to Django for use with MySQL/MariaDB
Home-page: https://github.com/adamchainz/django-mysql
Author: Adam Johnson
Author-email: me@adamj.eu
License: BSD
Description: ============
        Django MySQL
        ============
        
        .. image:: https://badge.fury.io/py/django-mysql.png
            :target: http://badge.fury.io/py/django-mysql
        
        .. image:: https://travis-ci.org/adamchainz/django-mysql.png?branch=master
                :target: https://travis-ci.org/adamchainz/django-mysql
        
        .. image:: https://coveralls.io/repos/adamchainz/django-mysql/badge.svg
                :target: https://coveralls.io/r/adamchainz/django-mysql
        
        .. image:: https://pypip.in/d/django-mysql/badge.png
                :target: https://pypi.python.org/pypi/django-mysql
        
        .. image:: https://readthedocs.org/projects/django-mysql/badge/?version=latest
                :target: http://django-mysql.readthedocs.org/en/latest/
        
        .. image:: https://landscape.io/github/adamchainz/django-mysql/master/landscape.svg?style=flat
           :target: https://landscape.io/github/adamchainz/django-mysql/master
           :alt: Code Health
        
        
        .. figure:: https://raw.github.com/adamchainz/django-mysql/master/docs/images/dolphin-pony.png
           :alt: The dolphin-pony - proof that cute + cute = double cute.
        
        ..
        
            | The dolphin-pony - proof that cute + cute = double cute.
        
        
        Django-MySQL is a non-inventively named package that helps you use some
        MySQL/MariaDB-specific features in the world of Django.
        
        
        What kind of features?
        ----------------------
        
        Here's a short list of what's inside:
        
        * ``QuerySet`` extensions - 'smart' iteration, ``approx_count`` for quick
          estimates of ``count()``, quick ``pt-visual-explain`` of the underlying
          query
        * Status variable inspection and utility methods
        * User locks - use MySQL as a locking server between your servers
        
        To see them all, check out the exposition at
        http://django-mysql.readthedocs.org/en/latest/exposition.html .
        
        Requirements
        ------------
        
        Tested with:
        
        * Python: 2.7, 3.3, 3.4
        * Django: 1.7, 1.8 beta
        * MySQL: 5.5, 5.6 / MariaDB: 5.5, 10.0, 10.1
        * mysqlclient: 1.3.5 (Python 3 compatible version of ``MySQL-python``)
        
        Any combination of these should be good, and also ``MySQL-python`` should work
        since it's just an older version of ``mysqlclient``.
        
        
        
        
        History
        =======
        
        0.1.3 (2015-03-08)
        ------------------
        
        * Added ``pt_visual_explain`` integration on ``QuerySet``
        * Added soundex-based field lookups for the ORM
        
        
        0.1.2 (2015-03-01)
        ------------------
        
        * Added ``get_many`` to ``GlobalStatus``
        * Added ``wait_until_load_low`` to ``GlobalStatus`` which allows you to wait
          for any high load on your database server to dissipate.
        * Added smart iteration classes and methods for ``QuerySet``\s that allow
          efficient iteration over very large sets of objects slice-by-slice.
        
        0.1.1 (2015-02-23)
        ------------------
        
        * Added ``Model`` and ``QuerySet`` subclasses which add the ``approx_count``
          method
        
        0.1.0 (2015-02-12)
        ---------------------
        
        * First release on PyPI
        * ``Lock``\s
        * ``GlobalStatus`` and ``SessionStatus``
        
Keywords: Django,MySQL,MariaDB
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Topic :: Database
