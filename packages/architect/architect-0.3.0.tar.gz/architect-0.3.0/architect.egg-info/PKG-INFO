Metadata-Version: 1.1
Name: architect
Version: 0.3.0
Summary: A set of tools which enhances ORMs written in Python with more features
Home-page: https://github.com/maxtepkeev/architect
Author: Max Tepkeev
Author-email: tepkeev@gmail.com
License: Copyright 2015 Max Tepkeev

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
Description: Architect
        =========
        
        .. image:: https://badge.fury.io/py/architect.svg
           :target: https://badge.fury.io/py/architect
        
        .. image:: https://img.shields.io/pypi/dm/architect.svg
           :target: https://pypi.python.org/pypi/architect
        
        .. image:: https://img.shields.io/travis/maxtepkeev/architect/master.svg
           :target: https://travis-ci.org/maxtepkeev/architect
        
        .. image:: https://img.shields.io/coveralls/maxtepkeev/architect/master.svg
           :target: https://coveralls.io/r/maxtepkeev/architect?branch=master
        
        Architect is a set of tools which enhances ORMs written in Python with more features and simplifies
        different database related complex tasks.
        
        Features
        --------
        
        * Supported ORMs
        
          - Django
          - Peewee
          - Pony
          - SQLAlchemy
        
        * Supported DBs
        
          - PostgreSQL
          - MySQL
        
        * Supports Python 2.6 - 3.4
        * Extensively documented
        
        Dependencies
        ------------
        
        Architect has no required external dependencies except for the ORM it will be used with.
        
        Installation
        ------------
        
        To install Architect, simply:
        
        .. code-block:: bash
        
           $ pip install architect
        
        or:
        
        .. code-block:: bash
        
           $ easy_install architect
        
        Documentation
        -------------
        
        Documentation is available at http://architect.readthedocs.org.
        
        Contacts and Support
        --------------------
        
        I will be glad to get your `feedback <https://github.com/maxtepkeev/architect/issues>`_, `pull requests
        <https://github.com/maxtepkeev/architect/pulls>`_, `issues <https://github.com/maxtepkeev/architect/issues>`_,
        whatever. Feel free to contact me for any questions.
        
        Donations and Sponsorship
        -------------------------
        
        If you like this project and want to support it you have 3 options:
        
        #. Just give this project a star at the `GitHub <https://github.com/maxtepkeev/architect>`_ repository.
        #. You can express your gratitude via `Gratipay <https://gratipay.com/maxtepkeev/>`_.
        #. Become a sponsor. Contact me via ``tepkeev at gmail dot com`` if you are interested in becoming a sponsor
           and we will discuss the terms and conditions.
        
        Copyright and License
        ---------------------
        
        Architect is licensed under Apache 2.0 license. Check the `LICENSE
        <https://github.com/maxtepkeev/architect/blob/master/LICENSE>`_ for details.
        
        
        Changelog
        ---------
        
        0.3.0 (2015-04-05)
        ++++++++++++++++++
        
        - Added: Documentation rewritten from scratch
        - Added: Introduced completely new API (almost 80% of Architect code was rewritten from scratch).
          All functionality is now provided by an ``architect.install`` decorator which dynamically injects
          requested feature, e.g. partition, into a model under the ``architect`` namespace, e.g.
          ``model.architect.partition``. No more mixins, inheritance and nested classes with settings that
          pollute model's namespace. More information is available in the `docs <http://architect.readthedocs.org
          /features/index.html>`__
        - Added: New ``operation`` feature which provide an abstraction layer to execute raw SQL statements
          which will work with any supported ORM, see `docs <http://architect.readthedocs.org/features/
          operation.html>`__
        - Fixed: `Issue #8 <https://github.com/maxtepkeev/architect/issues/8>`__ (``cannot import name
          string_literal`` error with PonyORM and PyMySQL if ``pymysql.install_as_MySQLdb()`` was used)
        - Fixed: `Issue #7 <https://github.com/maxtepkeev/architect/pull/7>`__ (SQLite dummy backend was
          completely broken)
        - Fixed: `Issue #4 <https://github.com/maxtepkeev/architect/pull/4>`__ (``autocommit cannot be
          used inside a transaction`` error with Django if a model was used inside ``with
          transaction.atomic()`` block)
        - Fixed: `Issue #2 <https://github.com/maxtepkeev/architect/issues/2>`__ (``partition``
          command was unable to find module with models to partition)
        - Fixed: `Issue #1 <https://github.com/maxtepkeev/architect/issues/1>`__ (``relation already
          exists`` error when trying to insert data into non-existent partition simultaneously from
          several queries) (thanks to `Daniel Kontsek <https://github.com/dn0>`__)
        
        0.2.0 (2014-07-19)
        ++++++++++++++++++
        
        - Added: MySQL range partitioning support
        
        0.1.0 (2014-07-13)
        ++++++++++++++++++
        
        - Initial release
        
Keywords: architect,django,pony,peewee,sqlalchemy,partition,partitioning,database,table
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Database
Classifier: Topic :: Utilities
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: Environment :: Web Environment
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: SQL
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: Implementation :: CPython
