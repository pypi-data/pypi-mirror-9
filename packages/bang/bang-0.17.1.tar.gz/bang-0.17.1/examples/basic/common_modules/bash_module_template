#!/bin/bash
# bash_module_template
# ====================
#
# Copyright 2012 - John Calixto
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

MODULE_NAME=bash_module
LOG=/tmp/${MODULE_NAME}.log

# use fd 3 to communicate back to ansible
exec 3>&1-

die() {
    echo "failed=True msg=\"$*\"" >&3
    exit 1
}

# usage:  win CHANGED
win() {
    echo "failed=False changed=$1" >&3
    exit 0
}

header="==== $(date -u) ===="
set -x
(
: $header

# retrieve the args as bash vars
eval "$(cat $1)"

# example of vars ``device`` and ``mountpoint`` passed in.  just use them:
#
#     [ "x$device" != "x" ] || die "Missing device"
#     [ "x$mountpoint" != "x" ] || die "Missing mountpoint"

# example of fixing up /etc/fstab. do not really use this - use the ansible
# ``mount`` module instead:
#
#     if grep "\\s*$device\\s\\+$mountpoint\\s" /etc/fstab &>/dev/null
#     then
#         changed=False
#     elif grep "$device" /etc/fstab &>/dev/null
#     then
#         sed -i -e "\\,/dev/vdb, s,/mnt,/srv," /etc/fstab
#         changed=True
#     else
#         echo "$device $mountpoint $FSTAB_OPTS" >>/etc/fstab
#         changed=True
#     fi

win $changed
) &>>$LOG
