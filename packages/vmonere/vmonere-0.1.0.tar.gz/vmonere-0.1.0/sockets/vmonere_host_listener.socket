#!/usr/bin/env python

import time
import sys
import datetime

sys.path.append('/var/lib/virtdc/framework')

import socket               # Import socket module

#==============================================================================
# Variables
#==============================================================================
# Some descriptive variables
#name                = "virtdc"
#version             = "0.1.0"
#long_description    = """vmplacementandscaling is a set of API's/tools written to create virtual machines for cloud users efficiently."""
#url                 = "https://github.com/dineshappavoo/virtdc"
#license             = ""

#==============================================================================


def start_server():

	   
	s = socket.socket()			# Create a socket object
	host = socket.gethostname()		# Get local machine name
	port = 12346				# Reserve a port for your service.
	s.bind((host, port))        		# Bind to the port

	s.listen(15)                 		# Now wait for client connection.


	while True:
		c, addr = s.accept()		# Establish connection with client.
		#print 'Got connection from', addr
		#c.send('Thank you for connecting')
		
		usage = c.recv(1024)

		try:
			#Activity Log
			hostlistener_log = open('/var/lib/virtdc/logs/activity_logs/hostlistener.log', 'a+')
			usage = usage.strip()
			host_usage = usage.split('|')
			hostname = host_usage[0].strip() if len(host_usage[0].strip()) != 0 else 0
			cpu_usage = host_usage[1].strip() if len(host_usage[1].strip()) != 0 else 0
			mem_usage = host_usage[2].strip() if len(host_usage[2].strip()) != 0 else 0
			io_usage = host_usage[3].strip() if len(host_usage[3].strip()) != 0 else 0


			path = '/var/lib/virtdc/vmonere/monitor_logs/host/'+hostname+'.log'
			file= open(path, 'a+')
            		time_now = str(datetime.datetime.now())
			usage=  time_now +' \t|\t '+ str(hostname) +' \t|\t '+ str(cpu_usage) + '\t|\t' + str(mem_usage) + '\t|\t' + str(io_usage)
			file.write(usage+'\n')
			file.close()

			'''
            		#To log usage in json file
            		log_usage_json(hostname, time_now, cpu_usage, mem_usage, io_usage)
            		'''
                

		except Exception as e:
			hostlistener_log.write(str(datetime.datetime.now()) +' :: vmonere host listener :: '+hostname+' :: error in listener \n')
			hostlistener_log.write(str(e) + '\n')
			pass

		#print usage

		c.close()                # Close the connection

def log_usage_json(hostname, time_now, cpu, mem, io):
    
    path = '/var/lib/virtdc/vmonere/monitor_logs/host/json/' + hostname + '.json'


    with open(path) as log_file:
        dict = json.load(log_file)
    print log_dict

    dict["time"] = time_now
    dict["cpu"] = cpu
    dict["memory"] = mem
    dict["io"] = io
    

    with open(path,"w") as f:
        json.dump(dict,f)


if __name__ == "__main__":
   # stuff only to run when not called via 'import' here
   start_server()
