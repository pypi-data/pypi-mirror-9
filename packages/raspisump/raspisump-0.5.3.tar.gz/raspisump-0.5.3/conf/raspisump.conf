# Configuration file for raspi-sump
# All configurations should be done in this file and not
# the main raspisump.py program
# This file should be located in the /home/pi/raspi-sump directory

[gpio_pins]
# Trig pin sends the signal.  Value is the number of the GPIO 
# pin on the RaspberryPi
trig_pin = 17

# Echo pin receives the signal.  Value is the number of the GPIO 
# pin on the RaspberryPi
echo_pin = 27


[pit]
# critical_distance is the water level in the sump pit (in centimeters) 
# that will trigger an email sms alert.  
# ***Note: critical_distance is a poorly worded value. It would be
# better defined as critical_water_level or critical_depth.  I will find a way
# to change this that will not affect users that have already installed the
# program as updates do not overwrite your existing configuration file.
critical_distance = 35 

# The pit_depth is the distance (in centimeters) between the sensor and the
# bottom of the sump pit.
pit_depth = 72

# rsump.py should be run with a cron job.  However cron is limited to
# 1 minute as its minimum interval. If you need to monitor the sump level
# more frequently you can set reading_interval to the desired time in seconds.
# Default is 0 meaning only one reading will occur and the program will exit.
# If set to 0 call the script with a cron job and select your interval there.
# If setting to a value other than 0 you should run checkpid.py from a cron
# job at a regularly interval to monitor the health of the rsump.py process.
reading_interval = 0

# This will adjust the speed of sound to reflect the following temperature.
# Set this to the normal Celcius temperature of your basement.
temperature = 20

[email]
# SMTP Server requires authentication (0=No, 1=Yes)
# If using localhost or possibly your ISP email this value
# will most likely be 0.  Check your ISP's configuration docs.
# For Gmail set this to 1 and fill out the corresponding 
# username and password values in this file.
smtp_authentication = 0

# SMTP Server uses TLS (0=No, 1=Yes)
# If using localhost or possibly your ISP email this value
# will most likely be 0.  Check your ISP's configuratin docs.
# For Gmail set this to 1.
smtp_tls = 0

# If server requires authentication enter username and password.
# For Gmail, activate these values with your gmail username and password.
username = 
password = 

# SMTP Server and Port
# example --  smtp_server = smtp.gmail.com:587
# if using a SMTP server on the Pi use localhost:25
smtp_server = localhost:25

# Notifications will be sent to the following address
# example -- email_to = cellnumber@wireless_carrier (for sms email alerts)
# Can also use a regular email address
# To add multiple recipients seperate email addresses with a comma.
# e.g. Adding recipient(s)
#   email_to = single_email@somewhere.com
#   email_to = recipient1@somewhere.com, recipient2@somewhere.com
email_to = 

# Notification will be coming from the following address
email_from = 
