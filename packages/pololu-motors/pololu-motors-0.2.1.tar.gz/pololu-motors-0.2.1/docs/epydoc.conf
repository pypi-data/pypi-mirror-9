[epydoc] # Epydoc section marker (required by ConfigParser)

# modules
#   The list of objects to document.  Objects can be named using
#   dotted names, module filenames, or package directory names.
#   Alases for this option include "objects" and "values".
modules: pololu

# output
#   The type of output that should be generated.  Should be one
#   of: html, text, latex, dvi, ps, pdf.
output: html

# target
#   The path to the output directory.  May be relative or absolute.
target: docs/pmcapi

# verbosity
#   An integer indicating how verbose epydoc should be.  The default
#   value is 0; negative values will supress warnings and errors;
#   positive values will give more verbose output.
verbosity: -3

# debug
#   A boolean value indicating that Epydoc should show a tracaback
#   in case of unexpected error. By default don't show tracebacks
debug: 0

# simple-term
#   If True, don't try to use colors or cursor control when doing
#   textual output. The default False assumes a rich text prompt
simple-term: 0


### Generation options

# docformat
#   The default markup language for docstrings, for modules that do
#   not define __docformat__.  Defaults to epytext.
docformat: reStructuredText

# parse
#   Whether or not parsing should be used to examine objects.
parse: yes

# introspect
#   Whether or not introspection should be used to examine objects.
introspect: yes

# exclude
#   Don't examine in any way the modules whose dotted name match this
#   regular expression pattern.
#exclude:

# exclude-introspect
#   Don't perform introspection on the modules whose dotted name match this
#   regular expression pattern.
#exclude-introspect:

# exclude-parse
#   Don't perform parsing on the modules whose dotted name match this
#   regular expression pattern.
#exclude-parse:

# inheritance
#   The format for showing inheritance objects.
#   It should be one of: 'grouped', 'listed', 'included'.
inheritance: listed

# private
#   Whether or not to inclue private variables.  (Even if included,
#   private variables will be hidden by default.)
private: yes

# imports
#   Whether or not to list each module's imports.
imports: yes

# sourcecode
#   Whether or not to include syntax highlighted source code in
#   the output (HTML only).
sourcecode: yes

# include-log
#   Whether or not to includea a page with Epydoc log, containing
#   effective option at the time of generation and the reported logs.
include-log: no


### Output options

# name
#   The documented project's name.
name: Pololu Motor Control API

# css
#   The CSS stylesheet for HTML output.  Can be the name of a builtin
#   stylesheet, or the name of a file.
css: white

# url
#   The documented project's URL.
url: https://github.com/cnobile2012/pololu-motors

# link
#   HTML code for the project link in the navigation bar.  If left
#   unspecified, the project link will be generated based on the
#   project's name and URL.
#link: <a href="somewhere">My Cool Project</a>

# top
#   The "top" page for the documentation.  Can be a URL, the name
#   of a module or class, or one of the special names "trees.html",
#   "indices.html", or "help.html"
#top: os.path

# help
#   An alternative help file.  The named file should contain the
#   body of an HTML file; navigation bars will be added to it.
#help: my_helpfile.html

# frames
#   Whether or not to include a frames-based table of contents.
frames: yes

# separate-classes
#   Whether each class should be listed in its own section when
#   generating LaTeX or PDF output.
separate-classes: no


### API linking options

# external-api
#   Define a new API document.  A new interpreted text role
#   will be created
#external-api: epydoc

# external-api-file
#   Use the records in this file to resolve objects in the API named NAME.
#external-api-file: epydoc:api-objects.txt

# external-api-root
#   Use this URL prefix to configure the string returned for external API.
#external-api-root: epydoc:http://epydoc.sourceforge.net/api


### Graph options

# graph
#   The list of graph types that should be automatically included
#   in the output.  Graphs are generated using the Graphviz "dot"
#   executable.  Graph types include: "classtree", "callgraph",
#   "umlclass".  Use "all" to include all graph types
graph: all

# dotpath
#   The path to the Graphviz "dot" executable, used to generate
#   graphs.
dotpath: /usr/bin/dot

# pstat
#   The name of one or more pstat files (generated by the profile
#   or hotshot module).  These are used to generate call graphs.
#pstat: profile.out

# graph-font
#   Specify the font used to generate Graphviz graphs.
#   (e.g., helvetica or times).
graph-font: Helvetica

# graph-font-size
#   Specify the font size used to generate Graphviz graphs.
graph-font-size: 10


### Return value options

# The condition upon which Epydoc should exit with a non-zero
# exit status. Possible values are error, warning, docstring_warning
#fail-on: error
