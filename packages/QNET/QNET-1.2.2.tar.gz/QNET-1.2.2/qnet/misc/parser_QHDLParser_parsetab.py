
# /Users/nikolas/Projects/QNET/qnet/misc/parser_QHDLParser_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'R\xa7H\xcc\xfe;\x98z\xa5\xcb\xa8\x0e6qc\x1b'
    
_lr_action_items = {'REAL':([46,],[64,]),'FEEDLEFT':([91,112,],[113,113,]),'GENERIC':([10,47,114,],[13,13,122,]),'ENTITY':([0,1,3,5,6,9,23,74,136,],[2,-3,-4,-2,2,-1,34,-5,-48,]),'COMPLEX':([46,],[67,]),'PORT':([10,12,14,15,47,68,83,114,123,124,152,],[-14,19,-12,-13,-14,19,-15,-14,132,-62,-61,]),'INOUT':([57,],[79,]),'BEGIN':([30,49,50,72,125,],[48,-56,-49,-55,-57,]),'RPAREN':([25,26,36,37,39,40,41,42,43,44,58,59,61,64,65,66,67,75,82,84,86,96,97,98,99,101,102,103,104,105,107,108,134,139,140,141,142,143,144,149,150,151,153,154,155,160,161,],[-14,-17,-37,-41,-14,-39,-36,-10,62,-11,-10,81,-16,-21,-23,-14,-22,-40,-38,-18,-25,-47,-42,-46,-43,-29,-31,-28,-24,-27,-26,-30,139,-32,-68,-66,-64,146,-65,-70,156,-72,-63,-67,-65,-69,-71,]),'FCONST':([85,106,126,137,147,148,],[102,102,102,102,102,102,]),'SEMI':([23,25,26,33,34,35,36,37,39,40,41,53,54,55,61,62,64,65,66,67,75,81,82,84,86,96,97,98,99,101,102,103,104,105,107,108,110,115,117,118,119,120,121,127,128,139,146,156,],[-14,42,-17,-14,-6,-7,-37,56,58,60,-36,74,-8,-9,-16,83,-21,-23,-14,-22,-40,100,-38,-18,-25,-47,-42,-46,-43,-29,-31,-28,-24,-27,-26,-30,-14,125,-14,-50,-14,-51,129,135,136,-32,152,159,]),'LOSSY_FIELDMODE':([77,78,79,80,94,],[96,-44,96,-45,96,]),'COLON':([27,28,38,63,71,73,76,91,],[46,-20,57,-19,93,94,95,93,]),'COMMA':([27,28,38,63,73,76,101,102,103,105,107,108,116,139,140,141,142,143,144,149,150,151,153,154,155,160,161,],[45,-20,45,-19,45,45,-29,-31,-28,-27,-26,-30,126,-32,-68,-66,-64,147,-65,-70,157,-72,-63,-67,-65,-69,-71,]),'ASSIGN':([64,65,66,67,],[-21,-23,85,-22,]),'OUT':([57,95,],[80,80,]),'END':([10,12,14,15,17,18,20,47,68,69,70,83,87,88,89,90,92,100,111,114,123,124,129,131,133,152,159,],[-14,-14,-12,-13,23,-33,-34,-14,-14,-14,-59,-15,109,110,-76,-58,-78,-35,-75,-14,-14,-62,-77,-60,-74,-61,-73,]),'IS':([7,16,],[10,22,]),'FEEDRIGHT':([144,151,],[148,158,]),'ICONST':([85,106,126,137,147,148,],[108,108,108,108,108,108,]),'LPAREN':([13,19,85,130,137,138,147,148,],[21,24,106,137,106,145,106,106,]),'IN':([57,95,],[78,78,]),'ID':([2,4,11,21,23,24,29,33,34,35,42,45,48,51,56,60,69,70,88,89,90,92,93,110,111,113,114,117,118,119,120,123,124,129,131,133,137,145,147,148,152,157,158,159,],[7,8,16,28,-14,28,47,54,-6,-7,28,63,71,28,28,28,91,-59,112,-76,-58,-78,114,-14,-75,121,-14,54,-50,54,-51,-14,-62,-77,-60,-74,144,151,144,155,-61,151,161,-73,]),'MAP':([122,132,],[130,138,]),'INT':([46,],[65,]),'OF':([8,],[11,]),'SIGNAL':([31,32,49,50,52,72,125,135,],[-53,51,-56,51,-52,-55,-57,-54,]),'COMPONENT':([22,31,32,52,109,135,],[29,-53,29,-52,117,-54,]),'ARCHITECTURE':([0,1,3,5,6,9,74,110,136,],[4,-3,-4,-2,4,-1,-5,118,-48,]),'$end':([1,3,5,6,9,74,136,],[-3,-4,-2,0,-1,-5,-48,]),'FIELDMODE':([77,78,79,80,94,],[98,-44,98,-45,98,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instance_mapping_assignment_list':([48,],[69,]),'signal_list':([32,],[50,]),'non_io_port_list':([24,56,60,],[36,75,82,]),'int':([85,106,126,137,147,148,],[103,103,103,103,103,103,]),'entity_declaration':([0,6,],[1,1,]),'opt_semi':([25,39,],[43,59,]),'port_statement':([12,68,],[18,18,]),'generic_type':([46,],[66,]),'id_list':([21,24,42,51,56,60,],[27,38,27,73,76,76,]),'feedright_generic_assignment_list':([137,],[143,]),'feedright_port_assignment_list':([145,],[150,]),'with_io_port_list':([24,],[41,]),'signal_direction':([57,95,],[77,77,]),'number':([85,137,147,148,],[104,141,141,141,]),'generic_clause':([10,47,],[12,68,]),'feedright_generic_assignment':([137,147,],[142,153,]),'architecture_head':([22,],[30,]),'architecture_declaration':([0,6,],[3,3,]),'complex':([85,137,147,148,],[105,105,105,105,]),'generic_statement':([10,47,],[14,14,]),'component_declaration_list':([22,],[32,]),'generic_default':([66,],[84,]),'simple_number':([85,106,126,137,147,148,],[107,116,134,107,107,107,]),'empty':([10,12,23,25,33,39,47,66,68,69,88,110,114,117,119,123,],[15,20,35,44,55,44,15,86,20,92,92,120,124,55,55,133,]),'real':([85,106,126,137,147,148,],[101,101,101,101,101,101,]),'opt_entity':([23,],[33,]),'feedleft_assignment':([69,88,],[89,111,]),'opt_arch':([110,],[119,]),'non_io_port_entry_group':([24,56,60,],[37,37,37,]),'port_map':([123,],[131,]),'generic_entry_group':([21,42,],[26,61,]),'opt_id':([33,117,119,],[53,127,128,]),'port_list':([24,],[39,]),'instance_mapping_assignment':([48,69,],[70,90,]),'component_declaration':([22,32,],[31,52,]),'top_level_list':([0,],[6,]),'port_clause':([12,68,],[17,87,]),'signal_entry_group':([32,50,],[49,72,]),'io_port_entry_group':([24,],[40,]),'generic_list':([21,],[25,]),'generic_map':([114,],[123,]),'feedleft_assignment_list':([69,],[88,]),'signal_type':([77,79,94,],[97,99,115,]),'top_level_unit':([0,6,],[5,9,]),'id_or_value':([137,147,148,],[140,140,154,]),'feedright_port_assignment':([145,157,],[149,160,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> top_level_list","S'",1,None,None,None),
  ('top_level_list -> top_level_list top_level_unit','top_level_list',2,'p_top_level_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',131),
  ('top_level_list -> top_level_unit','top_level_list',1,'p_top_level_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',132),
  ('top_level_unit -> entity_declaration','top_level_unit',1,'p_top_level_unit','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',159),
  ('top_level_unit -> architecture_declaration','top_level_unit',1,'p_top_level_unit','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',160),
  ('entity_declaration -> ENTITY ID IS generic_clause port_clause END opt_entity opt_id SEMI','entity_declaration',9,'p_entity_declaration','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',166),
  ('opt_entity -> ENTITY','opt_entity',1,'p_opt_entity','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',179),
  ('opt_entity -> empty','opt_entity',1,'p_opt_entity','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',180),
  ('opt_id -> ID','opt_id',1,'p_opt_id','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',186),
  ('opt_id -> empty','opt_id',1,'p_opt_id','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',187),
  ('opt_semi -> SEMI','opt_semi',1,'p_opt_semi','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',193),
  ('opt_semi -> empty','opt_semi',1,'p_opt_semi','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',194),
  ('generic_clause -> generic_statement','generic_clause',1,'p_generic_clause','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',200),
  ('generic_clause -> empty','generic_clause',1,'p_generic_clause','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',201),
  ('empty -> <empty>','empty',0,'p_empty','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',209),
  ('generic_statement -> GENERIC LPAREN generic_list opt_semi RPAREN SEMI','generic_statement',6,'p_generic_statement','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',216),
  ('generic_list -> generic_list SEMI generic_entry_group','generic_list',3,'p_generic_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',222),
  ('generic_list -> generic_entry_group','generic_list',1,'p_generic_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',223),
  ('generic_entry_group -> id_list COLON generic_type generic_default','generic_entry_group',4,'p_generic_entry_group','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',232),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',239),
  ('id_list -> ID','id_list',1,'p_id_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',240),
  ('generic_type -> REAL','generic_type',1,'p_generic_type','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',249),
  ('generic_type -> COMPLEX','generic_type',1,'p_generic_type','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',250),
  ('generic_type -> INT','generic_type',1,'p_generic_type','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',251),
  ('generic_default -> ASSIGN number','generic_default',2,'p_generic_default','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',256),
  ('generic_default -> empty','generic_default',1,'p_generic_default','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',257),
  ('number -> simple_number','number',1,'p_number','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',266),
  ('number -> complex','number',1,'p_number','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',267),
  ('simple_number -> int','simple_number',1,'p_simple_number','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',273),
  ('simple_number -> real','simple_number',1,'p_simple_number','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',274),
  ('int -> ICONST','int',1,'p_int','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',280),
  ('real -> FCONST','real',1,'p_real','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',286),
  ('complex -> LPAREN simple_number COMMA simple_number RPAREN','complex',5,'p_complex','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',293),
  ('port_clause -> port_statement','port_clause',1,'p_port_clause','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',299),
  ('port_clause -> empty','port_clause',1,'p_port_clause','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',300),
  ('port_statement -> PORT LPAREN port_list opt_semi RPAREN SEMI','port_statement',6,'p_port_statement','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',310),
  ('port_list -> with_io_port_list','port_list',1,'p_port_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',316),
  ('port_list -> non_io_port_list','port_list',1,'p_port_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',317),
  ('with_io_port_list -> io_port_entry_group SEMI non_io_port_list','with_io_port_list',3,'p_with_io_port_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',327),
  ('with_io_port_list -> io_port_entry_group','with_io_port_list',1,'p_with_io_port_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',328),
  ('non_io_port_list -> non_io_port_entry_group SEMI non_io_port_list','non_io_port_list',3,'p_non_io_port_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',337),
  ('non_io_port_list -> non_io_port_entry_group','non_io_port_list',1,'p_non_io_port_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',338),
  ('non_io_port_entry_group -> id_list COLON signal_direction signal_type','non_io_port_entry_group',4,'p_non_io_port_entry_group','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',348),
  ('io_port_entry_group -> id_list COLON INOUT signal_type','io_port_entry_group',4,'p_io_port_entry_group','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',354),
  ('signal_direction -> IN','signal_direction',1,'p_signal_direction','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',361),
  ('signal_direction -> OUT','signal_direction',1,'p_signal_direction','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',362),
  ('signal_type -> FIELDMODE','signal_type',1,'p_signal_type','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',368),
  ('signal_type -> LOSSY_FIELDMODE','signal_type',1,'p_signal_type','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',369),
  ('architecture_declaration -> ARCHITECTURE ID OF ID IS architecture_head BEGIN instance_mapping_assignment_list feedleft_assignment_list END opt_arch opt_id SEMI','architecture_declaration',13,'p_architecture_declaration','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',375),
  ('architecture_head -> component_declaration_list signal_list','architecture_head',2,'p_architecture_head','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',391),
  ('opt_arch -> ARCHITECTURE','opt_arch',1,'p_opt_arch','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',397),
  ('opt_arch -> empty','opt_arch',1,'p_opt_arch','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',398),
  ('component_declaration_list -> component_declaration_list component_declaration','component_declaration_list',2,'p_component_declaration_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',405),
  ('component_declaration_list -> component_declaration','component_declaration_list',1,'p_component_declaration_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',406),
  ('component_declaration -> COMPONENT ID generic_clause port_clause END COMPONENT opt_id SEMI','component_declaration',8,'p_component_declaration','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',416),
  ('signal_list -> signal_list signal_entry_group','signal_list',2,'p_signal_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',425),
  ('signal_list -> signal_entry_group','signal_list',1,'p_signal_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',426),
  ('signal_entry_group -> SIGNAL id_list COLON signal_type SEMI','signal_entry_group',5,'p_signal_entry_group','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',436),
  ('instance_mapping_assignment_list -> instance_mapping_assignment_list instance_mapping_assignment','instance_mapping_assignment_list',2,'p_instance_mapping_assignment_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',445),
  ('instance_mapping_assignment_list -> instance_mapping_assignment','instance_mapping_assignment_list',1,'p_instance_mapping_assignment_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',446),
  ('instance_mapping_assignment -> ID COLON ID generic_map port_map','instance_mapping_assignment',5,'p_instance_mapping_assignment','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',455),
  ('generic_map -> GENERIC MAP LPAREN feedright_generic_assignment_list RPAREN SEMI','generic_map',6,'p_generic_map','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',461),
  ('generic_map -> empty','generic_map',1,'p_generic_map','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',462),
  ('feedright_generic_assignment_list -> feedright_generic_assignment_list COMMA feedright_generic_assignment','feedright_generic_assignment_list',3,'p_feedright_generic_assignment_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',471),
  ('feedright_generic_assignment_list -> feedright_generic_assignment','feedright_generic_assignment_list',1,'p_feedright_generic_assignment_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',472),
  ('id_or_value -> ID','id_or_value',1,'p_id_or_value','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',497),
  ('id_or_value -> number','id_or_value',1,'p_id_or_value','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',498),
  ('feedright_generic_assignment -> ID FEEDRIGHT id_or_value','feedright_generic_assignment',3,'p_feedright_generic_assignment','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',504),
  ('feedright_generic_assignment -> id_or_value','feedright_generic_assignment',1,'p_feedright_generic_assignment','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',505),
  ('feedright_port_assignment_list -> feedright_port_assignment_list COMMA feedright_port_assignment','feedright_port_assignment_list',3,'p_feedright_port_assignment_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',514),
  ('feedright_port_assignment_list -> feedright_port_assignment','feedright_port_assignment_list',1,'p_feedright_port_assignment_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',515),
  ('feedright_port_assignment -> ID FEEDRIGHT ID','feedright_port_assignment',3,'p_feedright_port_assignment','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',540),
  ('feedright_port_assignment -> ID','feedright_port_assignment',1,'p_feedright_port_assignment','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',541),
  ('port_map -> PORT MAP LPAREN feedright_port_assignment_list RPAREN SEMI','port_map',6,'p_port_map','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',550),
  ('port_map -> empty','port_map',1,'p_port_map','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',551),
  ('feedleft_assignment_list -> feedleft_assignment_list feedleft_assignment','feedleft_assignment_list',2,'p_feedleft_assignment_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',560),
  ('feedleft_assignment_list -> feedleft_assignment','feedleft_assignment_list',1,'p_feedleft_assignment_list','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',561),
  ('feedleft_assignment -> ID FEEDLEFT ID SEMI','feedleft_assignment',4,'p_feedleft_assignment','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',574),
  ('feedleft_assignment -> empty','feedleft_assignment',1,'p_feedleft_assignment','/Users/nikolas/Projects/QNET/qnet/qhdl/qhdl_parser.py',575),
]
