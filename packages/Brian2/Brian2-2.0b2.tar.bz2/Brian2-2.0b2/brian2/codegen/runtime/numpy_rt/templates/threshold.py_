{# USES_VARIABLES { _spikespace, N } #}
# t, not_refractory and lastspike are added as needed_variables in the
# Thresholder class, we cannot use the USES_VARIABLE mechanism
# conditionally
{# ITERATE_ALL { _idx } #}

import numpy as np
numpy_True = np.bool_(True)

# scalar code
_vectorisation_idx = 1
{{scalar_code|autoindent}}

# vector code
_vectorisation_idx = N

{{vector_code|autoindent}}
if _cond is True or _cond is numpy_True:
    _spikes = np.arange(_vectorisation_idx)
else:
    _spikes, = _cond.nonzero()
{{_spikespace}}[-1] = len(_spikes)
{{_spikespace}}[:len(_spikes)] = _spikes
{% if _uses_refractory %}
# Set the neuron to refractory
{{not_refractory}}[_spikes] = False
{{lastspike}}[_spikes] = t
{% endif %}