from django.db import models
from django.utils.translation import ugettext_lazy as _
from polymorphic import PolymorphicModel


class Product(PolymorphicModel):

    """ Represents anything you can buy... in an abstract sense. Subclasses
    are needed to actually represent physical stuff"""

    name = models.CharField(_("Name"), max_length=100)
    description = models.TextField(null=True, blank=True)
    categories = models.ManyToManyField(Category, null=True, blank=True)

    is_abstract = True
    status = "warning"
    status_label = _("Abstract")

    def __unicode__(self):

        return self.name

    def get_real(self):

        """ Override as per your liking to return the actual instance
        that this product is... """

        return [self]

    class Meta:
        ordering = ["name"]
        app_label = "paradiso"
