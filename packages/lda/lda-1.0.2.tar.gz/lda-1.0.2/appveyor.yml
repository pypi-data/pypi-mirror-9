branches:
  only:
    - master

environment:

  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\continuous_integration\\appveyor\\run_with_env.cmd"
    WHEELHOUSE_UPLOADER_USERNAME: lda-worker
    WHEELHOUSE_UPLOADER_SECRET:
      secure: qN7Dwv5Z8GM8yurirfjBaxcrxsJOz7xbwwJSor4YcknMGZFXpRp1U8S0rv//edTn

  matrix:
    - PYTHON: "C:\\Python27_32"
      PYTHON_VERSION: "2.7.8"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27_64"
      PYTHON_VERSION: "2.7.8"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python33_32"
      PYTHON_VERSION: "3.3.5"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python33_64"
      PYTHON_VERSION: "3.3.5"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python34_32"
      PYTHON_VERSION: "3.4.1"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python34_64"
      PYTHON_VERSION: "3.4.1"
      PYTHON_ARCH: "64"

install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - "powershell ./continuous_integration/appveyor/install.ps1"

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  - "%CMD_IN_ENV% pip install -r ./continuous_integration/appveyor/requirements.txt"
  - "%CMD_IN_ENV% pip install -r requirements.txt"
  - "%CMD_IN_ENV% pip install -r test-requirements.txt"
  - "%CMD_IN_ENV% cython lda/_lda.pyx"
  - "%CMD_IN_ENV% python setup.py bdist_wheel bdist_wininst"
  - ps: "ls dist"

  # Install the generated wheel package to test it
  - "pip install --pre --no-index --find-links dist/ lda"

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  # Change to a non-source folder to make sure we run the tests on the
  # installed library.
  - "mkdir empty_folder"
  - "cd empty_folder"

  # Skip joblib tests that require multiprocessing as they are prone to random
  # slow down
  - "python -c \"import nose; nose.main()\" -s lda"

  # Move back to the project folder
  - "cd .."

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*

on_success:
  # Upload the generated wheel package to Rackspace
  # On Windows, Apache Libcloud cannot find a standard CA cert bundle so we
  # disable the ssl checks.
  - "python -m wheelhouse_uploader upload --no-ssl-check --region=iad --local-folder=dist wheels"
