[buildout]
allow-picked-versions = false
show-picked-versions = true
extends =
    https://raw.github.com/collective/buildout.plonetest/master/test-4.3.x.cfg
    https://raw.github.com/collective/buildout.plonetest/master/qa.cfg
    qa.cfg
    versions.cfg

package-name = dexterity.localroles
package-extras = [test]
versions = versions

parts +=
  omelette
  scripts
  robot
  i18n
  i18ncheck

[test]
defaults = ['-s', '${buildout:package-name}', '--auto-color', '--auto-progress']

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

[scripts]
recipe = zc.recipe.egg:scripts
eggs = i18ndude

[robot]
recipe = zc.recipe.egg
eggs = ${buildout:package-name} [test]
       plone.app.robotframework

[i18n]
recipe = collective.recipe.template
inline =
    #!/bin/bash
    set -x
    domain="dexterity.localroles"
    src="${buildout:directory}/src/dexterity/localroles"
    localesdirectory="$src/locales"
    options="--merge2 $localesdirectory/dexterity.localroles-generated.pot"
    potfile=$localesdirectory/$domain.pot
    potmanualfile=$localesdirectory/$domain-manual.pot
    cd $src
    ${buildout:directory}/bin/i18ndude rebuild-pot --pot $potfile --create $domain \
    --merge $potmanualfile $options .
    ${buildout:directory}/bin/i18ndude sync --pot $potfile $localesdirectory/*/*/$domain.po
output = ${buildout:bin-directory}/i18n
mode = 755

[i18ncheck]
recipe = collective.recipe.template
inline =
    #!/bin/sh
    # This script allow to check templates for missing translations
    # You can send the name of the template as parameter, without the path
    if test $1
    then
    find src/dexterity/localroles -name $1 -exec bin/i18ndude find-untranslated {} \;
    else
    find src/dexterity/localroles -name '*.pt' -exec bin/i18ndude find-untranslated {} \;
    fi
output = ${buildout:bin-directory}/i18ncheck
mode = 755
