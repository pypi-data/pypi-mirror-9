.\"                                      -*- nroff -*-
.\" Copyright (C) 2014 Dimitris Zlatanidis
.\"
.\" This program is free software: you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation, either version 3 of the License, or
.\" (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.TH Slpkg "8" "1 2015" "slpkg"
.SH NAME
Slpkg is a user-friendly package manager for Slackware installations
.SH SYNOPSIS
Usage: slpkg Commands:
             [update] [re-create] [repo-add [repository name] [URL]]
             [repo-remove [repository]] [repo-list]
             [repo-info [repository]] [update [slpkg]]

             Optional arguments:
             [-h] [-v] [-a [script.tar.gz] [sources...]]
             [-b --list, [...] --add, --remove]
             [-q --list, [...] --add, --remove]
             [-q --build, --install, --build-install]
             [-g --config, --config=[editor]]
             [-l [repository], --index, --installed]
             [-c [repository] --upgrade]
             [-s [repository] [package...]
             [-t [repository] [package]
             [-p [repository] [package], --color=[]]
             [-n] [-f [...]] [-i [...]] [-u [...]]
             [-o  [...]] [-r [...]] [-d [...]]

.SH DESCRIPTION
\fBslpkg\fP is a terminal multitool in order to easy use Slackware packages.
.PP
It's a quick and easy way to manage your packages in slackware to a command.
.SH EXAMPLES
Slpkg is a user-friendly package manager for Slackware installations

Commands:
   update                                   update all package lists
   re-create                                recreate package lists  
   repo-add [repository name] [URL]         add custom repository
   repo-remove [repository]                 remove custom repository 
   repo-list                                list all repositories
   repo-info [repository]                   repository information
   update slpkg                             check and update slpkg

Optional arguments:
  -h, --help                                show this help message and exit
  -v, --version                             print version and exit
  -a, [script.tar.gz] [source...]           auto build SBo packages
  -b, --list, [package...] --add, --remove  add, remove packages in blacklist
  -q, --list, [package...] --add, --remove  add, remove SBo packages in queue
  -q, --build, --install, --build-install   build, install packages from queue
  -g, --config, --config=<editor>           configuration file management
  -l, [repository], --index, --installed    list of repositories packages
  -c, [repository] --upgrade                check for updated packages
  -s, [repository] [package...]             download, build & install packages
  -t, [repository] [package]                package tracking dependencies
  -p, [repository] [package], --color=[]    print package description
  -n, [package]                             view SBo packages through network
  -f, [package...]                          find installed packages
  -i, [package...]                          install binary packages
  -u, [package...]                          upgrade binary packages
  -o, [package...]                          reinstall binary packages
  -r, [package...]                          remove binary packages
  -d, [package...]                          display the contents


.SH PACKAGE FILE
Instead of [package...] you can create file with the suffix '.pkg' which was to 
contain the packages you want to work like:

 # echo "brasero
 > bitfighter
 > ffmpeg" > foo.pkg

 # cat foo.pkg
 > brasero
 > bitfighter
 > ffmpeg

 Example:

 # slpkg -s sbo foo.pkg

 or

 # slpkg -r foo.pkg 

.SH DEFAULT REPOSITORIES 
 slackware.com = 'slack'
 SlackBuilds.org = 'sbo'
 Alien's = 'alien'
 slacky.eu = 'slacky'
 rworkman's = 'rlw'
 studioware.org = 'studio'
 slacker.it = 'slackr'
 slackonly.com = 'slonly'
 Alien's ktown = 'ktown{latest}'
 Alien's multilib = 'multi'
 Slacke E17 and E18 = 'slacke{18}'
 SalixOS = 'salix'
 Slackel.gr = 'slackel'
 Alien's restricted = 'rested'
   
 Default enable repository is 'slack' and 'sbo'.
 Add or remove default repository in configuration file '/etc/slpkg/slpkg.conf'.
 Read REPOSITORIES file for explanations.

.SH COLORS
 red, green, yellow, cyan, grey
.PP
.SH GLOBAL OPTIONS
.TP
\fB\-v\fP, \fB\-\-version\fP
Print the version of program and exit.
.SH COMMANDS
.PP
The following commands are available.

.SS update, create and update packages list
\fBslpkg\fP \fBupdate\fP
.PP
Used to re-synchronize the package lists and create some important files.
This command must run every new repository is added or new updates is available.

.SS re-create, recreate packages list
\fBslpkg\fP \fBre-create\fP
.PP
It is sometimes useful to create all of the base file from the beginning so this 
command deletes all the packages lists and re-created.

.SS repo-add, add custom repository
\fBslpkg\fP \fBrepo-add\fP <\fIrepository name\fP> <\fIURL\fP>
.PP
Add custom binary repository. The repositories will be added to this command should 
contain at least the files 'PACKAGES.TXT' and 'CHECKSUMS.md5' and optional file
ChangeLog.txt.

.SS repo-remove, remove custom repository
\fBslpkg\fP \fBrepo-remove\fP <\fIrepository\fP> 
.PP
Remove custom repository by name.

.SS repo-list, repositories list
\fBslpkg\fP \fBrepo-list\fP
.PP
Lists all enabled or disabled repositories.

.SS repo-info, repository information
\fBslpkg\fP \fBrepo-info\fP <\fBrepository\fP>
.PP
View repository information.

.SS update slpkg
\fBslpkg\fP \fBupdate\fP \fBslpkg\fP
.PP
You can check for new versions and update slpkg itself.

.SS -a, auto build packages
\fBslpkg\fP \fB-a\fP <\fIscript\fP> <\fIsources\fP>
.PP
With this argument, build slackware package from source quickly and easy.
If you want to pass variables to the script exported as:
# export SLPKG_FFMPEG_X264=yes SLPKG_FFMPEG_LAME=yes

.SS -b , add, remove, view packages in blacklist
\fBslpkg\fP \fB-b\fP \fB--list\fP, <\fIpackages\fP> \fB--add\fP, \fB--remove\fP
.PP
List, add or remove packages from blacklist file. The settings here affect 
all repositories.

.SS -q , add, remove, view packages in queue
\fBslpkg\fP \fB-q\fP \fB--list\fP, <\fIpackages\fP> \fB--add\fP, \fB--remove\fP
.TP
\fBslpkg\fP \fB-q\fP \fB--build\fP, \fB--install\fP, \fB--build-install\fP
.PP
List, add, or remove sbo packages from queue. This argument is very useful if you want
to build and install multiple packages together. What to watch out for is the correct
order if there are dependencies. If you want to remove all the packages from the list
run '# slpkg -q all --remove'. (these arguments only working for the sbo repository)
Build or install or build and install packages are queued.

.SS -g , configuration file management
\fBslpkg\fP \fB--config\fP, \fB--config=[editor]\fP
.PP
Print configuration file or edit with editor.

.SS -l , list of installed packages
\fBslpkg\fP \fB-l\fP <\fIrepository\fP>, \fI--index\fP, \fI--installed\fP
.PP
List of packages per repository. Support command 'grep' like '# slpkg -l sbo | grep "python"'.

.SS -c , check if your packages is up to date
\fBslpkg\fP \fB-c\fP <\fIrepository\fP> \fI--upgrade\f
.PP
Check your packages is up to date.
Slackware 'patches' repository works independently of the others i.e not need before updating 
the list of packages by choosing "# slpkg update", works directly with the official repository 
and why always you can have updated your system. 

.SS -s , download, build and install package with all dependencies
\fBslpkg\fP \fB-s\fP <\fIrepository\fP> <\fIname of packages\fP>
.PP
Installs or upgrade packages from the repositories with automatically resolving all 
dependencies of the package. Sometimes to install a package have to pass part of the 
version of the package as 'slpkg -s alien ffmpeg-2.4.3'.

.SS -t , tracking dependencies
\fBslpkg\fP \fB-t\fP <\fIrepository\fP> <\fIname of package\fP>
.PP
Tracking all dependencies of that package.
The sequence shown is that you must follow to correctly install package.

.SS -p , print packages description
\fBslpkg\fP \fB-p\fP <\fIrepository\fP> <\fIname of package\fP>, \fI--color=\fP
.PP
Print package description with color. Available colors: red, green, yellow, cyan, grey

.SS -f , find packages
\fBslpkg\fP \fB-f\fP <\fIname of packages\fP>
.PP
Find installed packages with view total file size. 
Example you can view all installed sbo packages like '# slpkg -f _SBo'.

.SS -n , view SBo packages
\fBslpkg\fP \fB-n\fP <\fIname of package\fP>
.PP
View complete slackbuilds.org site in your terminal. Read fies, download, 
build or install.

.SS -i , install binary packages
\fBslpkg\fP \fB-i\fP <\fIpackages.t?z\fP>
.PP
Installs single binary packages designed for use with the 
Slackware Linux distribution into your system.

.SS -u , install-upgrade packages with new
\fBslpkg\fP \fB-u\fP <\fIpackages.t?z\fP>
.PP
Normally upgrade only upgrades packages that are already
installed on the system, and will skip any packages that do not
already have a version installed. 'Requires root privileges'
(like slackware command upgradepkg --install-new)

.SS -o , reinstall binary packages
\fBslpkg\fP \fB-o\fP <\fIpackages.t?z\fP>
.PP
Upgradepkg usually skips packages if the exact same package
(matching name, version, arch, and build number) is already
installed on the system.'Requires root privileges' (like 
slackware command upgradepkg --reinstall)

.SS -r , remove packages
\fBslpkg\fP \fB-r\fP <\fIname of packages\fP>
.PP
Removes a previously installed Slackware package, while writing
a progress report to the standard output. A package may be 
specified either by the full package name (as you'd see listed in
/var/log/packages/), or by the base package name. If installed
packages with command 'slpkg -s sbo <package>' then write a file
in /var/log/slpkg/dep/ with all dependencies and it allows you  
can remove them all together. 'Requires root
privileges' (like slackware command removepkg)

.SS -d , display contents
\fBslpkg\fP \fB-d\fP <\fIname of packages\fP>
.PP
Display the contents of the package with all descriptions.

.SH HELP OPTION
Specifying the help option displays help for slpkg itself, or a
command.
.br
For example:
  \fBslpkg \-\-help\fP - display help for slpkg

.SH FILES

/etc/slpkg/slpkg.conf
     General configuration of slpkg

/etc/slpkg/blacklist
     List of packages to skip

/etc/slpkg/slackware-mirrors
     List of Slackware Mirrors

/etc/slpkg/custom-repositories
     List of custom repositories

/var/log/slpkg
     ChangeLog.txt repositories files
     SlackBuilds logs and dependencies files

/var/lib/slpkg
     PACKAGES.TXT files 
     SLACKBUILDS.TXT files
     CHECKSUMS.md5 files
     FILELIST.TXT files

/tmp/slpkg
     Slpkg temponary donwloaded files and build packages

.SH AUTHOR
Dimitris Zlatanidis <d.zlatanidis@gmail.com>
.SH HOMEPAGE
https://github.com/dslackw/slpkg
.SH COPYRIGHT
Copyright \(co 2014-2015 Dimitris Zlatanidis

.SH SEE ALSO
installpkg(8), upgradepkg(8), removepkg(8), pkgtool(8), slackpkg(8), explodepkg(8),
makepkg(8).
