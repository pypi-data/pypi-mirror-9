[DEFAULT]
debug = false
profile = false
smtp_server = localhost
error_email_from = paste@localhost
privacyideaAudit.type = privacyidea.lib.auditmodules.sqlaudit
privacyideaAudit.key.private = %(here)s/private.pem
privacyideaAudit.key.public = %(here)s/public.pem
privacyideaAudit.sql.highwatermark = 10000
privacyideaGetotp.active = False
privacyideaSecretFile = %(here)s/dummy-encKey
privacyideaSuperuserFile = %(here)s/admin-users
privacyideaSuperuserRealms = superuser, 2ndsuperusers
privacyIDEASessionTimeout = 120
privacyideaURL = http://localhost:5001
privacyideaURL.disable_ssl = False
radius.dictfile = %(here)s/dictionary
radius.nas_identifier = privacyIDEA
privacyideaMachine.applications = privacyidea.lib.applications.ssh, privacyidea.lib.applications.luks

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5001

[app:main]
use = egg:privacyIDEA
sqlalchemy.url = sqlite:///%(here)s/token.sqlite
sqlalchemy.pool_recycle = 3600
full_stack = true
static_files = true
who.log_level = debug
who.log_file = %(here)s/privacyidea.log
cache_dir = %(here)s/data
custom_templates = %(here)s/custom-templates/

[loggers]
keys = root, privacyidea, sqlalchemy

[logger_root]
level = WARNING
handlers = file

[logger_privacyidea]
level = INFO
handlers = file
qualname = privacyidea

[logger_sqlalchemy]
level = ERROR
handlers = file
qualname = sqlalchemy.engine

[handlers]
keys = file

[handler_file]
class = handlers.RotatingFileHandler
args = ('%(here)s/privacyidea.log','a', 10000000, 4)
level = INFO
formatter = generic

[formatters]
keys = generic

[formatter_generic]
class = privacyidea.lib.log.SecureFormatter
format = %(asctime)s %(levelname)-5.5s {%(thread)d} [%(name)s][%(funcName)s #%(lineno)d] %(message)s
datefmt = %Y/%m/%d - %H:%M:%S

