#deaAudit.sql.urli
# privacyIDEA - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
debug = false
profile = false
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost


# default audit trail set to SQL Audit
privacyideaAudit.type = privacyidea.lib.auditmodules.sqlaudit
privacyideaAudit.key.private = %(here)s/private.pem
privacyideaAudit.key.public = %(here)s/public.pem

#privacyideaAudit.sql.url = mysql://user:password@localhost/privacyIDEA
privacyideaAudit.sql.url = sqlite:////dev/shm/test-token.sqlite
# One entry for SQL audit might take about 1K
privacyideaAudit.sql.highwatermark = 10000
privacyideaAudit.sql.lowwatermark = 5000

# If true, OTP values can be retrieved via the getotp controller
privacyideaGetotp.active = True

privacyidea.DefaultSyncWindow = 1000
privacyidea.DefaultOtpLen = 6
privacyidea.DefaultCountWindow = 50
privacyidea.DefaultMaxFailCount = 15
privacyidea.FailCounterIncOnFalsePin = True
privacyidea.PrependPin = True
privacyidea.DefaultResetFailCount = True
privacyidea.splitAtSign = True
privacyideaSecretFile = %(here)s/dummy-encKey

# This file contains the token administrators. 
# It can be created like this:
# % tools/privacyidea-create-pwidresolver-user -u admin -p test -i 1000 >> config/admin-users
privacyideaSuperuserFile = %(here)s/admin-users

#privacyidea.useridresolver = privacyidea.lib.resolvers.PasswdIdResolver.IdResolver
# This is only used for testnig purposes for running the selftests.
privacyidea.selfTest = True


# deprecated
#privacyideaNoSessionCheck = localhost, 127.0.0.1

# This is used to provide a list of application modules.
#
privacyideaMachine.applications = privacyidea.lib.applications.ssh, privacyidea.lib.applications.luks 

# These are the settings for the RADIUS Token
# The location of the RADIUS dictionary file
radius.dictfile= %(here)s/dictionary
# The NAS Identifier of your privacyIDEA server, 
# that is sent to the RADIUS server
radius.nas_identifier = privacyIDEA


[server:main]
use = egg:Paste#http
#host = 172.16.200.100
host = 0.0.0.0
#host = localhost
port = 5001
#ssl_pem = *

[app:main]
use = egg:privacyIDEA
#sqlalchemy.url = mysql://user:password@localhost/privacyIDEA
sqlalchemy.url = sqlite:////dev/shm/test-token.sqlite
sqlalchemy.pool_recycle = 3600
full_stack = true
static_files = true

who.config_file = %(here)s/who.ini
who.log_level = error
who.log_file = %(here)s/privacyidea.log


cache_dir = %(here)s/data
custom_templates = %(here)s/custom-templates/
#beaker.session.key = privacyidea
#beaker.session.secret = somesecret

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions


#
#  Note: You should change the Logging Level from DEGUB to WARN
#
# Logging configuration
[loggers]
keys = root, privacyidea, sqlalchemy

[logger_root]
level = ERROR
handlers = file

[logger_privacyidea]
level = ERROR
handlers = file
qualname = privacyidea

[logger_sqlalchemy]
level = ERROR
handlers = file
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handlers]
keys = file

[handler_file]
class = handlers.RotatingFileHandler
# Make the logfiles 10 MB
# and rotate 4  files
args = ('%(here)s/privacyidea.log','a', 10000000, 4)
level = ERROR
formatter = generic

[formatters]
keys = generic

[formatter_generic]
class = privacyidea.lib.log.SecureFormatter
format = %(asctime)s %(levelname)-5.5s {%(thread)d} [%(name)s][%(funcName)s #%(lineno)d] %(message)s
datefmt = %Y/%m/%d - %H:%M:%S



