
# -----------------------------------------------------------------------------
#   nginx.conf
#   ~~~~~~~~~~
#
#   Example nginx configuration.
#
#   connect to gunicorn server via '/tmp/gunicorn.sock' see gunicorn.sh script
#
# -----------------------------------------------------------------------------

# recommend worker count is: (2 x $num_cores) + 1
# see also: http://gunicorn.org/design.html#how-many-workers
worker_processes 1;

user nobody nogroup;
pid /var/run/nginx.pid;
error_log /var/log/nginx.error.log;

events {
    worker_connections 1024;
    accept_mutex off;
}

http {
    include mime.types;
    default_type application/octet-stream;
    access_log /var/log/nginx.access.log combined;
    sendfile on;

    upstream app_server {
        # For a TCP configuration:
        #server 127.0.0.1:8000 fail_timeout=0;

        # for UNIX domain socket setups:
        server unix:/tmp/gunicorn.sock fail_timeout=0;
    }

    # redirect if "www." missed: 
    server {
      listen 80;
      server_name your_site1.tld;
      rewrite ^/(.*) http://www.your_site1.tld/$1 permanent;
    }
    server {
      listen 80;
      server_name your_site2.tld;
      rewrite ^/(.*) http://www.your_site2.tld/$1 permanent;
    }

    server {
        listen 80;
        server_name localhost *.your_site2.tld *.your_site1.tld;
        root /var/www/YourSites/;

        location /media/  {
            root /var/www/YourSites/media;
        }

        # If you have a static "robots.txt":
        #location = /robots.txt {
        #    root /var/www/YourSites/;
        #}

        location = /favicon.ico {
            #empty_gif; # send empty 1x1 gif file
            return 204; # 204 - no content
        }

        # If you like to add a google webmaster tools file:
        #location = ^/google(.*).html$ {
        #    root /var/www/YourSites/;
        #}

        location / {
            # an HTTP header important enough to have its own Wikipedia entry:
            #   http://en.wikipedia.org/wiki/X-Forwarded-For
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # pass the Host: header from the client right along so redirects
            # can be set properly within the Rack application
            proxy_set_header Host $http_host;

            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;

            if (!-f $request_filename) {
                proxy_pass http://app_server;
                break;
            }
        }
    }
}