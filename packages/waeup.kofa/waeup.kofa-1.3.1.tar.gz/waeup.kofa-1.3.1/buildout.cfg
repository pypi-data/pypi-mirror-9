[buildout]
develop = .
parts =
    eggbasket
    app
    i18n
    test
    mkdirs
    zpasswd
    zope_conf
    site_zcml
    zdaemon_conf
    raw_deploy_ini
    raw_debug_ini
    themed_deploy_ini
    themed_debug_ini
    profile_ini
    waeupdocs
    coverage-detect
    coverage-report
# kofactl creation must be _after_ app!
    kofactl
    lxml
    diazo
# For backward compatibility, telling buildout not to throw away
# the data and log subdirectories from the parts directory.
    data
    log
# newest = false

extends = versions.cfg
show-picked-versions = true
update-versions-file = versions.cfg


# eggs will be installed in the default buildout location
# (see .buildout/default.cfg in your home directory)
# unless you specify an eggs-directory option here.

[kofa_params]
## Basic parameters for deployment.
# default is 127.0.0.1
host = 0.0.0.0
# default is 8080
base_port = 8080
zeo1_port = 8080
zeo2_port = 8081
zeo3_port = 8082
server_port = 8100
# default 7. Number of pre-opened ZODB threads/client
pool_size = 7
# default 20MB. Cache size of each client (ZEO only)
client_cache = 20MB
# default 5000. Number of objects cached.
object_cache = 5000
# number of preopened paster threads, default 10
threadpool_workers = 10
# package to be developed
devel_pkg = waeup.kofa

[app]
# This creates all scripts in bin/. The kofactl created here is 'faulty'.
recipe = zc.recipe.egg
eggs = waeup.kofa [beaker, diazo]
       z3c.evalexception>=2.0
       Paste
       PasteScript
       PasteDeploy
       repoze.profile
       ZODB3
interpreter = python-console

[kofactl]
# See http://pypi.python.org/pypi/zc.recipe.egg for details...
# Here we create the kofactl script again, this time with a
# fixed path to zdaemon.conf as argument.
recipe = zc.recipe.egg
eggs = waeup.kofa [beaker, diazo]
arguments = "${buildout:parts-directory}/etc/zdaemon.conf"
scripts = kofactl=kofactl

[mkdirs]
recipe = z3c.recipe.mkdir
paths =
    ${zope_conf:filestorage}
    ${zope_conf:logfiles}
    ${zope_conf:blobstorage}
    ${buildout:directory}/var/mailqueue/cur
    ${buildout:directory}/var/mailqueue/tmp
    ${buildout:directory}/var/mailqueue/new
    ${buildout:directory}/var/datacenter/media
    ${buildout:directory}/parts/test/datacenter

[test]
recipe = zc.recipe.testrunner
eggs = waeup.kofa [beaker, test]
defaults = ['--tests-pattern', '^f?tests$', '-v']

# this section named so that the i18n scripts are called bin/i18n...
[i18n]
recipe = z3c.recipe.i18n:i18n
packages = waeup.kofa
eggs = waeup.kofa
domain = waeup.kofa
output = src/waeup/kofa/locales
zcml =

# This section is named so that the zpasswd utility is
# called `zpasswd`
[zpasswd]
recipe = z3c.recipe.dev:script
eggs = waeup.kofa
module = zope.app.server.zpasswd
method = main

[zope_conf]
recipe = collective.recipe.template
input = etc/zope.conf.in
output = ${buildout:parts-directory}/etc/zope.conf
filestorage = ${buildout:directory}/var/filestorage
blobstorage = ${buildout:directory}/var/blobstorage
logfiles = ${buildout:directory}/var/log
extra =
# extra = <grokwarnings>True</grokwarnings>
# 'extra' is copied verbatim. Use it for product config sections and so.

# The [data] and [log] parts are still in here to instruct buildout to not
# unintentionally throw away the parts/data and parts/log subdirectories
# that contain the Data.fs and the log files. These files should be
# copied to the new locations. See the upgrade notes for more information.
[data]
recipe = zc.recipe.filestorage

[log]
recipe = zc.recipe.filestorage

[mailqueue]
recipe = zc.recipe.filestorage

[site_zcml]
recipe = collective.recipe.template
input = etc/site.zcml.in
output = ${buildout:parts-directory}/etc/site.zcml

[zdaemon_conf]
recipe = collective.recipe.template
input = etc/zdaemon.conf.in
output = ${buildout:parts-directory}/etc/zdaemon.conf

[raw_debug_ini]
recipe = collective.recipe.template
input = etc/raw/debug.ini.in
output = ${buildout:parts-directory}/etc/raw-debug.ini

[raw_deploy_ini]
recipe = collective.recipe.template
input = etc/raw/deploy.ini.in
output = ${buildout:parts-directory}/etc/raw-deploy.ini

[themed_debug_ini]
recipe = collective.recipe.template
input = etc/themed/debug.ini.in
output = ${buildout:parts-directory}/etc/themed-debug.ini

[themed_deploy_ini]
recipe = collective.recipe.template
input = etc/themed/deploy.ini.in
output = ${buildout:parts-directory}/etc/themed-deploy.ini

[profile_ini]
recipe = collective.recipe.template
input = etc/profile.ini.in
output = ${buildout:parts-directory}/etc/profile.ini

[eggbasket]
recipe = z3c.recipe.eggbasket
eggs = grok
url = http://grok.zope.org/releaseinfo/grok-eggs-1.1.tgz

[waeupdocs]
recipe = collective.recipe.sphinxbuilder
eggs = waeup.kofa[docs]
source = ${buildout:directory}/docs/source
build = ${buildout:directory}/docs/build

# Collect test coverage data.
[coverage-detect]
recipe = zc.recipe.testrunner
eggs = waeup.kofa[beaker]
defaults = ['--tests-pattern', '^f?tests$', '-v', '--coverage', 'coverage']

# Create a coverage report.
# Make sure to run bin/coverage-detect to collect the data for the report
# first!
[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport
arguments = ('${buildout:parts-directory}/coverage-detect/working-directory/coverage', '${buildout:directory}/coverage-report')

[lxml]
recipe = z3c.recipe.staticlxml
egg = lxml

[diazo]
recipe = zc.recipe.egg
eggs =
    diazo [wsgi]
    PasteScript
    waeup.kofa [beaker,diazo]
