Metadata-Version: 1.1
Name: bsdploy
Version: 2.0.0
Summary: A tool to remotely provision, configure and maintain FreeBSD jails
Home-page: http://github.com/ployground/bsdploy
Author: Tom Lazar
Author-email: tom@tomster.org
License: Beerware Licence
Description: BSDploy – FreeBSD jail provisioning
        ===================================
        
        BSDploy is a comprehensive tool to remotely **provision**, **configure** and **maintain** `FreeBSD <http://www.freebsd.org>`_ `jail hosts and jails <http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/jails-intro.html>`_.
        
        Its main design goal is to lower the barrier to *repeatable jail setups*.
        
        Instead of performing updates on production hosts you are encouraged to update the *description* of your setup, test it against an identically configured staging scenario until it works as expected and then apply the updated configuration to production with confidence.
        
        
        Main Features
        -------------
        
        - **provision** complete jail hosts from scratch
        
        - **describe** one or more jail hosts and their jails in a canonical configuration
        
        - **declarative configuration** – apply `Ansible <http://ansible.com>`_ playbooks to hosts and jails
        
        - **imperative maintenance**  – run `Fabric <http://fabfile.org>`_ scripts against hosts and jails
        
        - configure `ZFS pools and filesystems <https://wiki.freebsd.org/ZFS>`_ with `whole-disk-encryption <http://www.freebsd.org/doc/handbook/disks-encrypting.html>`_
        
        -  **modular provisioning** with plugins for `VirtualBox <https://www.virtualbox.org>`_ and `Amazon EC2 <http://aws.amazon.com>`_ and an architecture to support more.
        
        
        How it works
        ------------
        
        BSDploy takes the shape of a commandline tool by the name of ``ploy`` which is installed on a so-called *control host* (typically your laptop or desktop machine) with which you then control one or more *target hosts*. The only two things installed on target hosts by BSDploy are Python and ``ezjail`` – everything else stays on the control host.
        
        
        Example Session
        ---------------
        
        Here's what an abbreviated bootstrapping session of a simple website inside a jail on an Amazon EC2 instance could look like::
        
            # ploy start ec-instance
            [...]
            # ploy configure jailhost
            [...]
            # ploy start webserver
            [...]
            # ploy configure webserver
            [...]
            # ploy do webserver upload_website
        
        
        Best of both worlds
        -------------------
        
        Combining a declarative approach for setting up the initial state of a system combined with an imperative approach for providing maintenance operations on that state has significant advantages:
        
        1. Since the imperative scripts have the luxury of running against a well-defined context, you can keep them short and concise without worrying about all those edge cases.
        
        2. And since the playbooks needn't concern themselves with performing updates or other tasks you don't have to litter them with awkward states such as ``restarted`` or ``updated`` or – even worse – with non-states such as ``shell`` commands.
        
        
        Under the hood
        --------------
        
        BSDploy's scope is quite ambitious, so naturally it does not attempt to do all of the work on its own. In fact, BSDPloy is just a fairly thin, slightly opinionated wrapper around existing excellent tools.
        
        In addition to the above mentioned Ansible and Fabric, it uses `ezjail <http://erdgeist.org/arts/software/ezjail/>`_ on the host to manage the jails and on the client numerous members of the `ployground family <https://github.com/ployground/>`_ for pretty much everything else.
        
        
        Full documentation
        ------------------
        
        The full documentation is `hosted at RTD <http://docs.bsdploy.net>`_.
        
        
        
        Changes
        =======
        
        2.0.0 - 2015-03-05
        ==================
        
        - [feature] add support for http proxies
        - [change] deactivate pkg's *auto update* feature by default
        - [feature] add support for `firstboot-freebsd-update <http://www.freshports.org/sysutils/firstboot-freebsd-update/>`_ (disabled by default)
        - [change] [BACKWARDS INCOMPATIBLE] switched from ipfilter to pf - you must convert any existing ``ipnat_rules`` to the new ``pf_nat_rules``.
        - [feature] provide defaults for VirtualBox instances (less boilerplate)
        - [fix] set full /etc/ntp.conf instead of trying to fiddle with an existing one.
        - [feature] Support configuration as non-root user (see https://github.com/ployground/bsdploy/issues/62)
        - [change] switched to semantic versioning (see http://semver.org)
        
        
        1.3 - 2014-11-28
        ================
        
        - [deprecation] rsync_project is not working in all cases, print a warning
        - [feature] added rsync helper, which is a tiny wrapper around the rsync command
        - [fix] change format of /usr/local/etc/pkg/repos/FreeBSD.conf so the package
          repository is properly recognized
        - [change] use quarterly package repository everywhere
        
        
        1.2 - 2014-10-26
        ================
        
        - [feature] provide default and by-convention assignment of fabfiles
        - [doc] document provisioning of EC2 instances
        - [fix] fix string escapes for geli setup in rc.conf
        - [feature] make sshd listen address configurable
        - [fix] fix permission of periodic scripts in zfs_auto_snapshot role
        - [doc] describe how to use a http proxy for mfsBSD
        
        
        1.1.1 - 2014-09-25
        ==================
        
        - increase memory for virtual machines in documentation from 512MB to 1024MB
        - fix escaping for jail settings in rc.conf preventing jails from starting
        
        
        1.1.0 - 2014-08-13
        ==================
        
        - use FreeBSD 10.0 as default for bootstrapping and documentation
        - always encode result of templates as utf-8
        - fix compatibility with ansible 1.7
        
        
        1.0.0 - 2014-07-20
        ==================
        
        - added bsdploy.fabutils with a wrapper for rsync_project
        - automatically set env.shell for fabric scripts.
        - generate ssh host keys locally during bootstrap if possible.
        - set ``fingerprint`` option for ezjail master automatically if a ssh host key exists locally.
        
        
        1.0b4 - 2014-07-08
        ==================
        
        - remove custom ``ploy`` and ``ploy-ssh`` console scripts.
        
        
        1.0b3 - 2014-07-07
        ==================
        
        - make ``ploy_virtualbox`` an optional dependency
        
        
        1.0b2 - 2014-07-07
        ==================
        
        - migrate from ``mr.awsome*`` dependencies to ``ploy*``
        - various bugfixes
        - added tests
        
        
        1.0b1 - 2014-06-17
        ==================
        
        - Initial public release
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: System Administrators
Classifier: Operating System :: POSIX :: BSD :: FreeBSD
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 2 :: Only
Classifier: Topic :: System :: Installation/Setup
Classifier: Topic :: System :: Systems Administration
