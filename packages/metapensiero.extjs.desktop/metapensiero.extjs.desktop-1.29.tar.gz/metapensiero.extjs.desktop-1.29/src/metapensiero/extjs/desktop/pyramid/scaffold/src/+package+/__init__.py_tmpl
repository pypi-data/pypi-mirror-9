# -*- mode: python; coding: utf-8 -*-

import logging

from pyramid.config import Configurator
from sqlalchemy import engine_from_config

from .models import DBSession

logger = logging.getLogger(__name__)


def exception_view(context, request):
    from simplejson import dumps
    from pyramid.response import Response

    logger.error(u'Error happened serving %s: %s, %s',
                 request.url, context.status, context)
    return Response(dumps({'success': False, 'message': unicode(context)}),
                    status=context.status, content_type='application/json')


def main(global_config, **settings):
    """ This function returns a Pyramid WSGI application.
    """

    from metapensiero.extjs.desktop.pyramid import configure

    if settings['desktop.version'] != 'test':
        engine = engine_from_config(settings, 'sqlalchemy.')
        DBSession.configure(bind=engine)

    config = Configurator(settings=settings)

    configure(config)

    config.add_translation_dirs('{{package}}:locale/')

    config.add_static_view('static', 'static', cache_max_age=3600)

    config.add_route('login', '/auth/login')
    config.add_route('logout', '/auth/logout')
    config.add_route('users', '/auth/users')

    config.scan()
    return config.make_wsgi_app()
