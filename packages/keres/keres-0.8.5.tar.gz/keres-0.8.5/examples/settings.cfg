[general]

# location of the CopasiSE binary
copasise = "/usr/programs/bin/CopasiSE"
# name of the template file that will become the copasie config
tmplt_file = "example.cps.tmplt"
# name of the temporary copasie config file
tmp_cps = "temporary.cps"
# the scale of simulated data
# simulated data have normally distributed max fluorescent intensities
# height_scale**2 is the variance of this distribution
height_scale = 0.05
# the scale of the distribution of simulated lag times
# lag times follow an exponential distribution
# exponential_scale is the exponential scale parameter beta (1/lambda)
# $f(x;\lambda) = \lambda \e^{-\lambda x}$
exponential_scale = 0.20

# superpose noiselss simulation in plot
plot_noiseless = True

# plot styling
# size of a figure in inches given 100dpi
figsize = (5, 2)
# what to plot
# max number of plots for each noise level
# for example, if there are 10 simulations at a
# given noise level, and plot_n is 2, then
# the first and 6th (1 + 5) simulations at that level will be plotted
plot_n = 1
# even if plot_n is 0 or None (don't do plots)
# the history of p(H|E) is plotted if the difference between
# the simulted time and the time found by the Bayes filter
# differ by plot_history_cutoff points
# set to None to never plot the history
plot_history_cutoff = 40
# sometimes, for very noisy data, the Bayes filter can not
# find the pickup, plot_nans specifies how many such simulations
# should be plotted for each noise level
# use 0 to never plot such simulations
plot_nans = 6

# noise levels will range from noise_increment to noise_level
# in steps of nois_level
max_noise = 0.20
noise_increment = 0.10

# should noise get larger proportional to the concentration
# of fiber ("scaled noise")
scale_noise = False

# length of deterministic is this fraction of nondeterministic
# simulated data have a deterministic period where no fibers are present
# after a copasi simulation, this deterministic phase is det_frac
# the size of the copasi simulated data
# for example if the copasi data were 100 data points in length
# and det_frac were 0.1, then the deterministic phase prepended
# would be 10 points
det_frac = 0.45

# stringency of the exponential distribution, in range [0-1)
# the p(exp) is calculated for the group of noiseless simulations for
# each noise level
# the distribution of lag times for the group must satisfy
# an exponential distribution using a Kolmogorov-Smirnov test
# with a p-value less than exp_dist_stringency
exp_dist_stringency = 0.0099

# a biphsic simulation where there are two distinct phases
# of increasing fluorescence, separated by a time where
# fluorescence plateaus
biphasic = False
# frac_phase_2 of 0.25 means 25% of the data will be phase 2
frac_phase_2 = 0.99
# amp_phase_2 of 0.25 means that phase 2 will be 25%
# of the amplitude of phase 1
amp_phase_2 = 1.0

# how many times to print the progress report
# a table reporting the noise level, real time, and measured times
# for the tenth, half and Bayes methods, and the difference
# between the Bayes time and the real time is produced
# at most, report_n tables will be produced, evenly spaced
# among the noise levels
# for example, if there are 10 noise levels and report_n is 2,
# then a report will be generated for the first and sixth noise level
report_n = 10

# number of points in the final time series
# the copasi output and any prepended data is resampled to this many points
timepoints = 500

# how many simulations to run at each noise level: scaling_n * stochastic_n
# each noise level has scaling_n lag times, and each of these simulations
# creates stochastic_n different noisy time series
scaling_n = 5
# stochastic_n specifies how many simulations to run at
# each noise level
stochastic_n = 2

# autocopasi results (acr) file name 
# use .acr extension for big runs to keep and .test to test
# open these with pickle.loads(bz2.decompress(open(acr_name).read()))
acr_name = "results-normal.test"

# if dbugging == True, generate lots of debugging output
debugging = False

[copasi-params]

# copasi report of the fiber concentration
result_file = "results.tmp"
# These constants are for the following reaction scheme
# 2A & \rightleftharpoons B \mbox{ ;  } k_1 \mbox{,  } k_{-1} \\
# 2B & \rightleftharpoons C \mbox{ ;  } k_2 \mbox{,  } k_{-2} \\
# 2C & \rightarrow F \mbox{ ;  } k_3 \\
# A + F & \rightarrow F \mbox{ ;  } k_4
k01 = 700.0
k-1 = 0.001
k02 = 700.0
k-2 = 0.001
k03 = 1.0
k04 = 1000.0

# number of molecules per fL
Nmol = 301107.0
# reaction volume in L
Volume = 5e-12
