# -*- coding: utf8 -*-

import re
import logging


class BaseEmitter(object):

    def __init__(self, config):
        self.config = config
        self.log = logging.getLogger(__name__)

        self.control_chars = ''.join(map(unichr, range(0, 32) + range(127, 160)))
        self.control_char_re = re.compile('[%s]' % re.escape(self.control_chars))

    def emit(self, payload):
        """
        Emit the payload generated by the collector.
        """
        raise NotImplemented('Please implement the emit function.')

    def check(self):
        """
        Do service checks that decides if the emitter would work or not.
        Raise a CheckException if the check not passes.
        It is not required to return a value.
        """
        return True

    def config_check(self):
        """
        Test if the required config settings is set. Raise a CheckException if not.
        It is not required to return a value.
        """
        return True

    def remove_control_chars(self, s):
        return self.control_char_re.sub('', s)
