Metadata-Version: 1.1
Name: django-markwhat
Version: 1.3
Summary: A collection of template filters that implement
     common markup languages.
Home-page: http://pypi.python.org/pypi/django-markwhat
Author: Alireza Savand
Author-email: alireza.savand@gmail.com
License: Copyright (c) 2005-2013 Django Contributors, Alireza Savand
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of the authors nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
Description: =====================
        Django MarkWhat
        =====================
        
        .. image:: https://travis-ci.org/Alir3z4/django-markwhat.png
           :alt: travis-cli tests status for django-markwhat
           :target: https://travis-ci.org/Alir3z4/django-markwhat
        
        
        .. contents:: Table of contents
        
        .. note::
        
            Extracted from `Django 1.4 since markup deprecation <https://docs.djangoproject.com/en/dev/releases/1.5/#django-contrib-markup>`_
        
        ------
        
        A collection of template filters that implement common markup languages.
        
        provides template filters that implement the following markup
        languages:
        
        * ``textile`` -- implements `Textile`_ -- requires `PyTextile`_
        * ``markdown`` -- implements `Markdown`_ -- requires `Python-markdown`_
        * ``commonmark`` -- implements `CommonMark`_ -- requires `CommonMark-py`_
        * ``reStructuredText`` -- implements `reST (reStructuredText)`_
          -- requires `docutils`_
        
        In each case, the filter expects formatted markup as a string and
        returns a string representing the marked-up text. For example, the
        ``textile`` filter converts text that is marked-up in Textile format
        to HTML.
        
        
        Supported Python versions
        =========================
        
        ``django-crequest`` currently can be run on multiple python versions:
        
        * Python 2 (2.7)
        * Python 3 (3.3, 3.4)
        * PyPy
        
        
        
        Installation
        ------------
        ``django-markwhat`` is available on pypi:
        
        http://pypi.python.org/pypi/django-markwhat
        
        So easily install it by ``pip``:
        ::
            
            pip install django-markwhat
        
        Or by ``easy_install``
        ::
            
            $ easy_install django-markwhat
        
        Another way is by cloning ``django-markwhat``'s `git repo <https://github.com/Alir3z4/django-markwhat>`_ :::
            
            git clone git://github.com/Alir3z4/django-markwhat.git
        
        Then install it by running:
        ::
            
            $ python setup.py install
        
        Configuration
        ******************
        
        To activate these filters, add ``'django_markwhat'`` to your
        ``INSTALLED_APPS`` setting. Once you've done that, use
        ``{% load markup %}`` in a template, and you'll have access to these filters.
        
        .. warning::
        
            The output of markup filters is marked "safe" and will not be escaped when
            rendered in a template. Always be careful to sanitize your inputs and make
            sure you are not leaving yourself vulnerable to cross-site scripting or
            other types of attacks.
        
        .. _Textile: http://en.wikipedia.org/wiki/Textile_%28markup_language%29
        .. _Markdown: http://en.wikipedia.org/wiki/Markdown
        .. _CommonMark: http://commonmark.org
        .. _CommonMark-py: https://pypi.python.org/pypi/CommonMark
        .. _reST (reStructured Text): http://en.wikipedia.org/wiki/reStructuredText
        .. _PyTextile: http://loopcore.com/python-textile/
        .. _Python-markdown: http://pypi.python.org/pypi/Markdown
        .. _docutils: http://docutils.sf.net/
        
        reStructuredText
        ----------------
        
        When using the ``reStructuredText`` markup filter you can define a
        `RESTRUCTUREDTEXT_FILTER_SETTINGS` in your django settings to
        override the default writer settings. See the `reStructuredText writer
        settings`_ for details on what these settings are.
        
        .. warning::
        
           reStructuredText has features that allow raw HTML to be included, and that
           allow arbitrary files to be included. These can lead to XSS vulnerabilities
           and leaking of private information. It is your responsibility to check the
           features of this library and configure appropriately to avoid this. See the
           `Deploying Docutils Securely
           <http://docutils.sourceforge.net/docs/howto/security.html>`_ documentation.
        
        .. _reStructuredText writer settings: http://docutils.sourceforge.net/docs/user/config.html#html4css1-writer
        
        Markdown
        --------
        
        The Python Markdown library supports options named "safe_mode" and
        "enable_attributes". Both relate to the security of the output. To enable both
        options in tandem, the markdown filter supports the "safe" argument.
        ::
            
            {{ markdown_content_var|markdown:"safe" }}
        
        .. warning::
        
            Versions of the Python-Markdown library prior to 2.1 do not support the
            optional disabling of attributes and by default
        
        Tests
        -----
        
        ``django-markwhat`` is tested on both `python2` and `python3`, to run the tests:
        
        ::
        
            $ tox
        
        
        
Keywords: django,markdown,markup,textile,rst,reStructuredText,docutils,web
Platform: OS Independent
Classifier: Development Status :: 5 - Production/Stable
Classifier: Development Status :: 6 - Mature
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.0
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries
