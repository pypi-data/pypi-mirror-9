
===================
 :mod:`grampg` API
===================


.. module:: grampg
   :platform: Unix, Windows
   :synopsis: Simple and flexible password generation library.
.. moduleauthor:: Elvio Toccalino <elviotoccalino@yahoo.com>


When interfacing the :mod:`grampg` you will instantiate :class:`PasswordGenerator`, configure your character sets if necessary, and call :meth:`~PasswordGenerator.of` on it to instantiate an internal :class:`Generator`. The :class:`PasswordGenerator` is in fact little more than a fluent interface to build generators. The generator instance is returned only when :meth:`~PasswordGenerator.done` is called.

By means of the :class:`PasswordGenerator` instance, the :class:`Generator` instance can then be progressively spec'ed, so passwords generated by it can conform to you're twisted needs.

.. autoclass:: PasswordGenerator
   :members:

Once the you have specified your password scheme, you will have access to the generator instance.

.. autoclass:: Generator
   :members: generate

In case of errors during the specification, the following exceptions are used.

.. autoexception:: PasswordSpecsError

.. autoexception:: PasswordSpecsNonValidatedError

.. autoexception:: PasswordGeneratorIsDone
