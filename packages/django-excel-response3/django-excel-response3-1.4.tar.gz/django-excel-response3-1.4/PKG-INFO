Metadata-Version: 1.1
Name: django-excel-response3
Version: 1.4
Summary: A subclass of HttpResponse which will transform a QuerySet,
or sequence of sequences, into either an Excel spreadsheet or
CSV file formatted for Excel, depending on the amount of data.
http://github.com/danpetrikin/django-excel-response/

Home-page: http://github.com/danpetrikin/django-excel-response/
Author: Dan Petrikin
Author-email: dan@pydojo.com
License: UNKNOWN
Download-URL: https://github.com/danpetrikin/django-excel-response/tarball/1.4
Description: django-excel-response3
        ======================
        
        This is an overhaul of
        https://pypi.python.org/pypi/django-excel-response which was originally
        http://djangosnippets.org/snippets/1151/
        
        -  added class detection for values, and will use the value
           str(class\_value)
        -  added support for floats, dollar strings, and comma separated number
           strings that were broken in other forks
        -  refactored the code to resemble an actual class, as opposed to one
           giant init function
        -  removed the performance killing import every time you write a sheet,
           xlwt is required. If you don’t like it use a CSV writer
        -  refactored the CSV writing portion of the code to actually use
           python’s csv class
        -  added width auto adjustment
        
        Usage
        =====
        
        ::
        
            from excel_response3 import ExcelResponse
        
            def excelview(request):
                objs = SomeModel.objects.all()
                return ExcelResponse(objs)
        
        or
        
        ::
        
            from excel_response3 import ExcelResponse
        
            def excelview(request):
                data = [
                    ['Column 1', 'Column 2'],
                    [1,2]
                    [23,67]
                ]
                return ExcelResponse(data, 'my_data')
        
        Constructor Kwargs
        ==================
        
        -  headers - an array containing column headers
        -  output\_name - maintaining this kwarg, but tries first to use the 2nd
           arg passed when defining the class
        -  force\_csv - forcibly respond with csv, defaults to False
        -  encoding - defaults to ‘utf8’
        -  sheet\_name - defaults to ‘Sheet 1’
        -  blanks\_for\_none - replace None values with ’’, defaults to True
        -  auto\_adjust\_width - adjust width of each column automatically,
           defaults to True
Keywords: excel,django
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Office/Business :: Financial :: Spreadsheet
Requires: xlwt
