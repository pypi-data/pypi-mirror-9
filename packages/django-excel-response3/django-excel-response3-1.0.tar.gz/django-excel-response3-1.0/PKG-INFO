Metadata-Version: 1.1
Name: django-excel-response3
Version: 1.0
Summary: A subclass of HttpResponse which will transform a QuerySet,
or sequence of sequences, into either an Excel spreadsheet or
CSV file formatted for Excel, depending on the amount of data.

http://github.com/danpetrikin/django-excel-response/

Home-page: http://github.com/danpetrikin/django-excel-response/
Author: Dan Petrikin
Author-email: dan@pydojo.com
License: UNKNOWN
Download-URL: https://github.com/danpetrikin/django-excel-response/tarball/1.0
Description: =====================
        django-excel-response
        =====================
        
        This is an overhaul of https://pypi.python.org/pypi/django-excel-response which was originally http://djangosnippets.org/snippets/1151/
        Author is Daniel Petrikin.
        
        A subclass of HttpResponse which will transform a QuerySet,
        or sequence of sequences, into either an Excel spreadsheet or
        CSV file formatted for Excel, depending on the amount of data.
        All of this is done in-memory and on-the-fly, with no disk writes,
        thanks to the StringIO library.
        
        Installation
        ============
        
        ::
        
            pip install excel_response xlwt
        
        
        Usage
        =====
        
        ::
        
            from excel_response3 import ExcelResponse
        
            def excelview(request):
                objs = SomeModel.objects.all()
                return ExcelResponse(objs)
        
        
        or::
        
            from excel_response import ExcelResponse
        
            def excelview(request):
                data = [
                    ['Column 1', 'Column 2'],
                    [1,2]
                    [23,67]
                ]
                return ExcelResponse(data, 'my_data')
        
        Constructor Kwargs
        ======
        headers - an array containing column headers
        
        output_name - maintaining this kwarg, but tries first to 
        use the 2nd arg passed when defining the class
        
        force_csv - forcibly respond with csv, defaults to False
        
        encoding - defaults to 'utf8'
        
        sheet_name - defaults to 'Sheet 1'
        
        blanks_for_none - replace None values with '', defaults to True
        
        auto_adjust_width - adjust width of each column automatically, defaults to True
        
Keywords: excel,django
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Office/Business :: Financial :: Spreadsheet
Requires: xlwt
