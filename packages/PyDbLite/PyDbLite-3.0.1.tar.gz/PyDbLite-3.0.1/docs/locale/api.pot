# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, Pierre Quentel, Bendik RÃ¸nning Opstad
# This file is distributed under the same license as the PyDbLite package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyDbLite 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-09 23:17+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/api.rst:4
# 45df6a3c79cc4f4c844b7fb2f5bed366
msgid "API"
msgstr ""

#: ../../source/api.rst:7
# 473180d85e6f4f369db4a6f4d78e1a38
msgid "PyDbLite.PyDbLite API"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite.Index:1
# 631e599de78b4d93bcf84dc9bc2ad012
msgid "Class used for indexing a base on a field. The instance of Index is an attribute of the Base instance"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base:1
#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.__init__:1
# d68ee43c01854f1797614ffa5ffa5d5a
# 1fa6b9aa7cc64bef8d11a900179eed2c
msgid "protocol as defined in pickle / pickle. Defaults to the highest protocol available. For maximum compatibility use protocol = 0"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.add_field:1
# 47a156dd06d549fdba8b432008f3f0ea
msgid "Adds a field to the database"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.commit:1
# 9ce9d71e07494e109367c945386173fb
msgid "Write the database to a file"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create:1
# 614834dadf36486b9a46ef11395235b5
msgid "Create a new base with specified field names."
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create:5
#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create_index:11
#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.delete:7
#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.insert:9
#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.update:4
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Database:6
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table:1
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__call__:7
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__init__:1
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.add_field:5
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:17
# 36128a31258d4dc08fcde33ee34374bf
# 8a3e17d2c42545aeb831d7daea52853d
# b0c89dd5221748b5825a5406512a8464
# 1254a8290de94d66934a94dbca646c09
# 4fbe3cc4ce5f4f38a4b7e3193b666aa9
# 7148279d0d164dc4a75ed3a4a6030397
# 6fd28c7a3ab54ac9bdf857bf31cff32b
# 19aba5a9f2514105841f7db37888fba7
# ccb51e1e338243099c237eef47a38bd2
# edade13588ec408e990ce4f697b70a64
# 8b5b21b8bd9246cf9b0c1f1d4fbd2481
msgid "Args:"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create:4
# 8943daa0706d4026a52c522344d3b0f6
msgid "\\*fields (str): The field names to create."
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create:5
# 9903c720767b4748b0fa929ec37da6c8
msgid "mode (str): the mode used when creating the database."
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create:7
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:15
# 9402b7d1d7ff431993db3097627983b2
# d2ea5da2e7614681a23e05a377411a1d
msgid "if mode = 'open' : open the existing base, ignore the fields"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create:8
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:16
# 75cc5fe5b6f14594b4ed93fcf2efcab9
# 1d9cd45c547346ada58068318ebeb2b1
msgid "if mode = 'override' : erase the existing base and create a new one with the specified fields"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create:11
#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.delete:9
#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.exists:1
#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.insert:11
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__call__:12
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:19
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.delete:6
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.insert:7
# 37d9c9c7ce894be0af106fe0c563b835
# 62dc90c4aead4190b49b4722f4e6225e
# a862b2f943644759908ce2ae024fccbb
# 7af5283355ec430287e3646408cd3742
# 6340a25d4cf74c9791610862b467f4a7
# 34139a9fd9bb4783aa5baf1444986e6e
# 8c059cfeafc94724b18bd11b8adeeced
# ee646ad266a14dee88c91961c40d2290
msgid "Returns:"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create:12
# e234634f93784e44b7c32cf3f5404fcd
msgid "Returns the database (self)."
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create_index:1
# 0d6e289b3bad42efa7ee817c13e067b8
msgid "Create an index on the specified field names"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create_index:3
# 9c890657236a4725900a7957bbf6977e
msgid "An index on a field is a mapping between the values taken by the field and the sorted list of the ids of the records whose field is equal to this value"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create_index:7
# d016cc324d044f099e846fd8508be890
msgid "For each indexed field, an attribute of self is created, an instance of the class Index (see above). Its name it the field name, with the prefix _ to avoid name conflicts"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create_index:12
# 44492ea8c8e940308861dfbb2a8a522a
msgid "fields (list): the fields to index"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.delete:1
# 6ea8e7520a6a44caa2ade5001d4c694e
msgid "Remove a single record, or the records in an iterable"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.delete:3
# 58a5da2db09d4f90bd36abb7ed4a5f78
msgid "Before starting deletion, test if all records are in the base and don't have twice the same __id__"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.delete:7
# 874b3b432b0441718fd9c21347449c76
msgid "remove (record or list of records): The record(s) to delete."
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.delete:10
# e89d8083ee9b49c5965a2f64f45e7c34
msgid "Return the number of deleted items"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.delete_index:1
# f0c1c397678044a9b57628249bb8054a
msgid "Delete the index on the specified fields"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.drop_field:1
# d27538e5de4e43ae9a86cd512d21a044
msgid "Removes a field from the database"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.exists:2
# 93c9043d3b3f4c5ca02a346247a67851
msgid "bool: if the database file exists"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.fields:1
# 35580df94a6d4ead91b1990193d05870
msgid "The list of the fields (does not include the internal fields __id__ and __version__)"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.get_indices:1
# 365c4ca05d694ba2a22404d86daaf06f
msgid "Returns the indices"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.get_unique_ids:1
# dbcedd402fae414a80e33deea090766f
msgid "Returns a set of unique values from column"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.group_by:1
# b7e5faebd1b54367860a822175f79cee
msgid "Returns the records grouped by column"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.insert:1
# b4e37ba6173c4f8c8d69ba3831ad4ad3
msgid "Insert one or more records in the database."
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.insert:3
# 7bf681d9400e4f798cd617784d2c9060
msgid "Parameters can be positional or keyword arguments. If positional they must be in the same order as in the create() method If some of the fields are missing the value is set to None"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.insert:8
# 6c33e6de63c840b38bd939da06c44671
msgid "args (the values to insert, or a list of values): The record(s) to delete."
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.insert:9
# 93a3f754341345358db052ed1def57e7
msgid "kw (dict): The field/values to insert"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.insert:12
# 29d12179693d4f9195c8afbe67505a9a
msgid "Returns the record identifier if inserting one item, else None."
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.name:1
# b9b7433f3e874d2b998a5c1e63091940
msgid "The basename of the path, stripped of its extension"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.open:1
# 1eba859865574398892e510628b67655
msgid "Open an existing database and load its content into memory"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.path:1
# 7252ec6f77ea4d41a7f9a60d50598f41
msgid "The path of the database in the file system"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.update:1
# c72071f292094069967db8a2218d999a
msgid "Update one record or a list of records with new keys and values and update indices"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.update:5
# d571563c0a004cbfb55b9d10a1587de7
msgid "records (record or list of records): The record(s) to update."
msgstr ""

#: ../../source/api.rst:19
# ded147e9cda24e40936d653c833ee7fe
msgid "PyDbLite.SQLite API"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite:1
# 9fe6c4c9fc924c46a735392f5d410316
msgid "Main differences from :mod:`pydblite.pydblite`:"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite:3
# 9b56856159214d8dbeba68240f3a30f2
msgid "pass the connection to the :class:`SQLite db <pydblite.sqlite.Database>` as argument to :class:`Table <pydblite.sqlite.Table>`"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite:5
# 958aafbda7b940abb08e423f0f9a25fd
msgid "in :func:`create() <pydblite.sqlite.Table.create>` field definitions must specify a type."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite:6
# 957795796ef9473d84d22e4de160380e
msgid "no `drop_field` (not supported by SQLite)"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite:7
# 6d5c936bfb3747e18880d5a432a66468
msgid "the :class:`Table <pydblite.sqlite.Table>` instance has a :attr:`cursor <pydblite.sqlite.Database.cursor>` attribute, so that raw SQL requests can be executed."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.SQLiteError:1
# 02fb52a49e1d4a12b8e46c0c0f8285ce
msgid "SQLiteError"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Database:1
# 3b08637370884a5bb7865304b136bbbe
msgid "To create an in-memory database provide ':memory:' as filename"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Database:4
# ece4225b07dd44c48a4893231c9b9022
msgid "filename (str): The name of the database file, or ':memory:'"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Database:5
# c8b3529eb4cc473591b9c53b1a7fb501
msgid "kw (dict): Arguments forwarded to sqlite3.connect"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Database.commit:1
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.commit:1
# 95e8c2bcf16e4470a84696b68196069a
# cd286656835c4f7590f5c314f25dbe99
msgid "Save any changes to the database"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Database.conn:1
# 8ed8866097684cad887548bf808a06df
msgid "The SQLite connection"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Database.cursor:1
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.cursor:1
# 5bffbd15b44c435e8507e50198d6c834
# 2277a21a0cb3452d97f7a9cda8b720c1
msgid "The SQLite connections cursor"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table:3
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__init__:3
# 68c2d87c777a4eda81abf6ff442887bc
# 058e5c6b1815456f8a120061cdf9038a
msgid "table_name (str): The name of the SQLite table."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table:4
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__init__:4
# 7354393cfff04410a01d0ef7fbfbc891
# 5de4079c79aa4ebfb9cec6a90dd511ad
msgid "db (:class:`Database <pydblite.sqlite.Database>`): The database."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__call__:1
# 2f4271103ccf443d81b9dd8da2fedfea
msgid "Selection by field values."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__call__:3
# ce4a6c398d18480eae1ccd39d698a2c5
msgid "db(key=value) returns the list of records where r[key] = value"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__call__:6
# d5ad32d04579440dafb0aa50f89af631
msgid "args (list): A field to filter on."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__call__:7
# bd99b603932345e5b76c17baa628cffc
msgid "kw (dict): pairs of field and value to filter on."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__call__:10
# e14d2f0eae534a00866e5bd336a53226
msgid "When args supplied, return a :class:`Filter <pydblite.common.Filter>` object that filters on the specified field."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__call__:12
# 057e9aae2f5b49d38824cdaec0b548db
msgid "When kw supplied, return all the records where field values matches the key/values in kw."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__delitem__:1
# e55eed3ecdd34a5eb9057ac22fd758ea
msgid "Delete by record id"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__getitem__:1
# df099a77a99e4e50a00e8af7e41c3d09
msgid "Direct access by record id."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__iter__:1
# d1b065947ba24d5da6e8af00cba01589
msgid "Iteration on the records"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.add_field:1
# 76621664cbf04915abf979caa2e8969c
msgid "Add a new column to the table."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.add_field:4
# 4d4ccc37675941b98d2d5bbad01106e2
msgid "name (string): The name of the field"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.add_field:5
# 48ebca73d4814b14956305e0c73cd786
msgid "column_type (string): The data type of the column (Defaults to TEXT)"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.add_field:6
# 6ad0187928c545e79578e18931c713c1
msgid "default (datatype): The default value for this field (if any)"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.conv:1
# c6192c90ed874b7fad645bed63f3ff80
msgid "When a record is returned by a SELECT, ask conversion of specified field value with the specified function."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:1
# f8e2379d6a43459091124ccd001efe25
msgid "Create a new table."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:4
# f7b95dcdaca041be9e5f41929fc011b3
msgid "fields (list of tuples): The fields names/types to create. For each field, a 2-element tuple must be provided:"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:7
# 435fc0ea44d04644b93530db7f790b09
msgid "the field name"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:8
# 575bff9bf38f4800a56241304dfca965
msgid "a string with additional information like field type + other information using the SQLite syntax eg  ('name', 'TEXT NOT NULL'), ('date', 'BLOB DEFAULT CURRENT_DATE')"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:13
# 3b0c6b8e5a5648a5ab9d365f460cf28a
msgid "mode (str): The mode used when creating the database."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:13
# 940bb4912df7422eb049b413672649e2
msgid "mode is only used if a database file already exists."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:20
# fab4acd895644120bc4cdfb879736e19
msgid "the database (self)."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.delete:1
# 2efd5929a35f4066a5e590790b37d160
msgid "Remove a single record, or the records in an iterable."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.delete:3
# c11b45bc7d934d40b3efc8b3db3d2666
msgid "Before starting deletion, test if all records are in the base and don't have twice the same __id__."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.delete:7
# 8019b76f8f6a4720a5312c6776527d1c
msgid "int: the number of deleted items"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.insert:1
# 96ef9945af154411905edc4bb162e3e8
msgid "Insert a record in the database."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.insert:3
# a5e0f5631d7241e5841942cd84103591
msgid "Parameters can be positional or keyword arguments. If positional they must be in the same order as in the :func:`create` method. If some of the fields are missing the value is set to None."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.insert:8
# 8556062948724c259c26ed8542fb9c2c
msgid "The record identifier"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.is_date:1
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.is_datetime:1
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.is_time:1
# 4658a37370bc4ab5b8cc311780d13da6
# dd81a28d012a44cc9f4f275dfffbf31c
# 5ba359dc90f74881a595457ffee81f4c
msgid "Ask conversion of field to an instance of datetime.date"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.open:1
# fe7b985faf6840798ebe1d28bbb51fb5
msgid "Open an existing database."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.update:1
# 738fce6f3e6b445cb8f517b2e4ef5b29
msgid "Update the record with new keys and values."
msgstr ""

#: ../../source/api.rst:34
# 91d710103af54c04b7ed1f9a27de283d
msgid "PyDbLite.common API"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter:1
# c8c209855f0c4db5b41eccd5764dbe19
msgid "A filter to be used to filter the results from a database query. Users should not have to use this class."
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__and__:1
# 437cfcde65e941e1b9fe4f4c2c3d7fd4
msgid "Returns a new filter that combines this filter with other_filter using AND."
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__eq__:1
# 936e418aad8245119b3645d81da240ab
msgid "Perform EQUALS operation When input value is an iterable, but not a string, it will match for any of the values on the iterable"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__ge__:1
# 8edc36b50665422a8b4f0db5330f57bf
msgid "Perform GREATER THAN OR EQUALS operation"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__gt__:1
# a9800ba5e9a240bc99f43cc07317b4ea
msgid "Perform GREATER THAN operation"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__iter__:1
# e361d4b1f7ab4cd99d89622421d097c5
msgid "Returns in iterator over the records for this filter"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__le__:1
# 048be7d9890c4dafbe2c6c9cec48bd05
msgid "Perform LESS THAN OR EQUALS operation"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__len__:1
# d1e8608fae6541848c82ba44bfaa1291
msgid "Returns the number of records that matches this filter"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__lt__:1
# 4080de15f86d4167ac93e251bd0cbf86
msgid "Perform LESS THAN operation"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__ne__:1
# 8293b8248e7c4189a5699529d81e5c38
msgid "Perform NOT EQUALS operation"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__or__:1
# eed136626b88417abff264daf583af66
msgid "Returns a new filter that combines this filter with other_filter using OR."
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__str__:1
# 70e8d0e9363145e0ac11f06baf4b9e18
msgid "Returns a string representation of the filter"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.filter:1
# cc460eb5ded845659b1d7b1be2ea7717
msgid "Returns the filter"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.ilike:1
# 4548169cd3034a8f96dd321d36e3afab
msgid "Perform ILIKE operation"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.is_filtered:1
# af32d266f1fc4fb8ac9b051a899f9133
msgid "If the filter contains any filters"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.like:1
# 3f543549018948c2996475365c16c8c6
msgid "Perform LIKE operation"
msgstr ""

