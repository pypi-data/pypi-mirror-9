Metadata-Version: 1.0
Name: phantomas
Version: 0.2
Summary: Python module for easy integration with phantomas
Home-page: https://github.com/macbre/phantomas-python
Author: Maciej Brencz
Author-email: maciej.brencz@gmail.com
License: MIT
Description: Python module for easy integration with `phantomas <https://github.com/macbre/phantomas>`__ - PhantomJS-based modular web performance metrics collector
        
        .. image:: https://pypip.in/version/phantomas/badge.svg?style=flat
            :target: https://pypi.python.org/pypi/phantomas/
            :alt: Latest Version
        .. image:: https://pypip.in/download/phantomas/badge.svg?period=week&style=flat
            :target: https://pypi.python.org/pypi/phantomas/
            :alt: Latest Version
        .. image:: https://pypip.in/py_versions/phantomas/badge.svg?style=flat
            :target: https://pypi.python.org/pypi/phantomas/
            :alt: Supported Python versions
        .. image:: https://travis-ci.org/macbre/phantomas-python.svg?branch=master
            :target: https://travis-ci.org/macbre/phantomas-python
        
        Install
        -------
        
        In order to use this module you need `phantomas` "binary" installed in your system.
        
        ::
        
            sudo make install
        
        This will run `npm install -g phantomas`.
        
        Module's API
        ------------
        
        ::
        
            import json
            from phantomas import Phantomas
            
            results = Phantomas(
                url="http://example.com",
                modules=['headers', 'requestsStats']
            ).run()
        
            print('Generator: ' + results.get_generator())   # phantomas v1.9.0
            print('\nMetrics: ' + json.dumps(results.get_metrics(), indent=True, sort_keys=True))
            print('\nDomains: ' + json.dumps(results.get_offenders('domains'), indent=True))
        
            # assertions
            assert results.get_metric('notFound') == 0
            assert results.get_metric('requests') < 5
        
        More docs coming soon! Meanwhile please refer to `example/example.py` script.
        
Keywords: high performance web sites,metrics,monitoring,phantomas,phantomjs,web development,webperf
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
