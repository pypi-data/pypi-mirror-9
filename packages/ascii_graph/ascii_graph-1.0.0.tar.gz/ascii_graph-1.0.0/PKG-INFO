Metadata-Version: 1.1
Name: ascii_graph
Version: 1.0.0
Summary: A simple python lib to print data as ascii histograms.
Home-page: https://github.com/kakwa/py-ascii-graph
Author: Pierre-Francois Carpentier
Author-email: carpentier.pf@gmail.com
License: Copyright (c) 2012 Pierre-Francois Carpentier <carpentier.pf@gmail.com> 

https://github.com/kakwa/py-ascii-graph/

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Description: py-ascii-graph
        ==============
        
        A simple python lib to print data as ascii histograms
        
        .. image:: https://secure.travis-ci.org/kakwa/py-ascii-graph.png?branch=master
                :target: http://travis-ci.org/kakwa/py-ascii-graph
                :alt: Travis CI
        
        .. image:: https://pypip.in/d/ascii_graph/badge.png
            :target: https://pypi.python.org/pypi/ascii_graph
            :alt: Number of PyPI downloads
        
        .. image:: https://badges.gitter.im/Join%20Chat.svg
           :alt: Join the chat at https://gitter.im/kakwa/py-ascii-graph
           :target: https://gitter.im/kakwa/py-ascii-graph?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge
        
        ----
        
        :PyPI: `Package <https://pypi.python.org/pypi/ascii_graph>`_
        :Doc: `Documentation <http://py-ascii-graph.readthedocs.org>`_
        :License: MIT
        :Author: Pierre-Francois Carpentier - copyright 2014
        
        ----
        
        License
        =======
        
        py-ascii-graph is released under the MIT License.
        
        Description
        ===========
        
        py-ascii-graph is a simple python library to build ascii histograms. 
        Just give it a label and a list of tuples (description, value) 
        and it will automaticaly creates a nice histogram, 
        with all the stuff aligned and fitting in a fixed width line (if possible).
        
        py-asciigraph although comes with a command line utility.
        
        Examples
        ========
        
        code:
        
        .. sourcecode:: python
        
            from ascii_graph import Pyasciigraph
        
            test = [('long_label', 423), ('sl', 1234), ('line3', 531), ('line4', 200), ('line5', 834)]
            graph = Pyasciigraph()
            for line in  graph.graph('test print', test):
                print(line)
        
        result:
        
        .. sourcecode:: none
        
            test print
            ###############################################################################
            ████████████████████                                            423  long_label
            █████████████████████████████████████████████████████████████  1234  sl        
            ██████████████████████████                                      531  line3     
            █████████                                                       200  line4     
            █████████████████████████████████████████                       834  line5
        
        command line:
        
        .. sourcecode:: bash
        
            $ asciigraph -h
            Usage: asciigraph [-l <label>] [-f file] [-s inc|dec] \
               [-c] [-t <first color threshold> [-T <second color threshold>] \
               [-w <number of char>] [-m <min len of char>]
            
            examples:
               printf 'label1:10\nlabel2:100\n' | asciigraph -l 'my graph'
               printf 'l1:10\nl2:100\n' > ./mf; asciigraph -l 'my graph' -f ./mf
               asciigraph -l 'my graph' -f mf -s inc
               asciigraph -l 'my graph' -f mf -s dec -w 60 -m 10
               asciigraph -l 'my graph' -f mf -c
               asciigraph -l 'my graph' -f mf -c -t 5 -T 50
            
            
            Options:
              -h, --help            show this help message and exit
              -f FILE, --file=FILE  import data from FILE (one data per line,
                                    format: <label>:<value>)
              -s SORT, --sort=SORT  sort type: inc (increasing) or dec (decreasing)
              -l LAB, --label=LAB   label of the graph
              -w WIDTH, --width=WIDTH
                                    width of the graph
              -m LEN, --min_graph=LEN
                                    minimum length of the graph bar
              -t TC1, --threshold-1=TC1
                                    first color threshold, only make sense if --color is
                                    passed
              -T TC2, --threshold-2=TC2
                                    second color threshold, only make sense if --color is
                                    passed
              -c, --color           Color the graph
        
            $ printf "ced:1000\nasd:123\nyu:890\n" | asciigraph -l test -s dec
            test
            ###############################################################################
            ██████████████████████████████████████████████████████████████████  1000.0  ced
            ██████████████████████████████████████████████████████████           890.0  yu 
            ████████                                                             123.0  asd
        
        
        See the examples/ directory for more examples.
        
        Installation
        ============
        
        .. sourcecode:: bash 
        
            $ pip install ascii_graph
        
        or
        
        .. sourcecode:: bash
        
            $ easy_install ascii_graph
        
        .. image:: https://d2weczhvl823v0.cloudfront.net/kakwa/py-ascii-graph/trend.png
           :alt: Bitdeli badge
           :target: https://bitdeli.com/free
        
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: System Administrators
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
