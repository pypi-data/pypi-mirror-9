/**
 * Djinn form richtext config
 */

if (djinn == undefined) {
  var djinn = {};
} 

if (djinn.forms == undefined) {
  djinn.forms = {};
} 

djinn.forms.richtext = {
  TINY_MINIMAL_BUTTONS: "bold,italic,underline,strikethrough,|,sub,sup,|,justifyleft,justifycenter,justifyright,justifyfull,|,bullist,numlist,|,cleanup,code",
  PGBUTTONS1: "bold,italic,underline,strikethrough,|,sub,sup,|,justifyleft,justifycenter,justifyright,justifyfull,|,indent,outdent,|,bullist,numlist,|,cleanup,code,|,table,|,internallink,unlink,image,anchor",
  TINYMCE_PLUGINS: "lists,pagebreak,table,paste,directionality,visualchars,nonbreaking",
}

/**
 * Add button to tiny for links.
 * @param ed editor instance
 */
djinn.forms.richtext._tiny_setup_links = function(ed) {

  ed.addButton('internallink', {
    title : 'Link',
    image : '/static/img/internallink.jpg',
    onclick : function() {
      
      document.cur_wysiwyg = ed;
      
      ed.windowManager.bookmark = ed.selection.getBookmark();
      
      elt = ed.selection.getNode();
      
      var parents = ed.dom.getParents(elt);
      var currlink = "";
      
      for (var i = 0; i < parents.length; i++) {
        
        if (parents[i].nodeName == "A") {
          currlink = ed.dom.getAttrib(parents[i], 'href');
          break;
        }
      }
      
      var remote_url = '/zoeken/zoekajaxlink/?callbackOnSelect=pg.insert_in_wysiwyg&currlink=' + encodeURIComponent(currlink);
      
      var modal = $('.modal').eq(0);

      modal.find('.modal-body').load(remote_url, function () {
        modal.trigger('loaded');
      });     
    }
  });
};

/**
 * Add button to tiny for images. This method must also pass any
 * attachments that have not yet been added to the content.
 * @param ed editor instance
 */
djinn.forms.richtext._tiny_setup_images = function(ed) {

  ed.addButton('image', {
    title : 'Afbeeldingen',
    image : '/static/img/images.gif',
    onclick : function() {
      document.cur_wysiwyg = ed;
      
      var image_ids = $(":hidden[name=images]").first().val() || "";
      
      var remote_url = '/content/gerelateerdeplaatjes/' + ctype_info['ctype'] + '/' + ctype_info['id'] + "?image_ids=" + image_ids;
      
      var modal = $('.modal').eq(0);
      
      modal.find('.modal-body').load(remote_url, function () {
        modal.trigger('loaded');
      });
      
    }});
};


djinn.forms.richtext.TINYMCE_CONFIG = {

    script_url : '/static/jquery.tinymce/jscripts/tiny_mce/tiny_mce.js',
    content_css : '/static/css/tinymce_custom.css',

    // General options
    theme : "advanced",
    language: "nl",
    plugins : djinn.forms.richtext.TINYMCE_PLUGINS,

    // Theme options
    theme_advanced_buttons1 : djinn.forms.richtext.PGBUTTONS1,
    theme_advanced_buttons2 : "",
    theme_advanced_buttons3 : "",
    theme_advanced_toolbar_location : "top",
    theme_advanced_toolbar_align : "left",
    theme_advanced_resizing : true,
    relative_urls : false,
    cleanup_on_startup : true,
    cleanup : true,
    setup : function(ed) {
      djinn.forms.richtext._tiny_setup_links(ed);
      djinn.forms.richtext._tiny_setup_images(ed);
    }
};

djinn.forms.richtext.TINYMCE_MAXCHARS_CONFIG = {

  theme_advanced_path : false,
  theme_advanced_statusbar_location : "bottom",
  setup : function(ed) {
    djinn.forms.richtext._tiny_setup_links(ed);
    djinn.forms.richtext._tiny_setup_images(ed);
    
    ed.onKeyUp.add(function(ed, e) {
      
      var chars = tinyMCE.activeEditor.getBody().textContent.length;
      
      // textcontent skips newlines, so let's find them
      var nls = tinyMCE.activeEditor.getBody().innerHTML.split("<br>").length - 1;
      
      chars = chars + nls;
      
      var text = chars + " tekens";
      tinymce.DOM.setHTML(tinymce.DOM.get(tinyMCE.activeEditor.id + '_path_row'), text);
    });
  }
};

/**
 *  Callback function (see above) specifically intended for tinymce editors.
 *  The selected item will be inserted as a link in the
 *  tinymce wysiwyg with title as the clickable text
 *
 * @param url
 * @param content_type
 * @param object_id
 * @param title
 * @param extra_args Associative array of options. 'target' is used, if given,
 * to insert link and add target for href.
 */
djinn.forms.richtext.insert_in_wysiwyg = function(url, content_type,
                                                  object_id, title,
                                                  extra_args) {

  var ed = document.cur_wysiwyg;
  
  ed.selection.moveToBookmark(ed.windowManager.bookmark);
  
  selectedtext = ed.selection.getContent({format : 'text'}) || title;
  
  html = '<a href="' + url + '" class="' + content_type + '"';
  
  if (extra_args['target']) {
    html += ' target="' + extra_args['target'] + '">' + selectedtext + '</a>';
  } else {
    html += '>' + selectedtext + '</a>';
  }
  
  ed.execCommand("mceInsertContent", false, html);
  
  ed.focus();
  
  var modal = $('.modal').eq(0);

  modal.hide();
};


/**
 * Insert image into current wysiwyg.
 * @param position One of left, right or center
 * @param img_url URL of full image
 * @param url URL of image.
 */
djinn.forms.richtext.insert_image_wysiwyg = function(position, img_url, url) {

  var ed = document.cur_wysiwyg;
  
  html = '<a data-target="#MyModal" data-toggle="modal" class="modal-image" href="' + img_url + '"><img style="float: ' + position + ';margin: 5px 20px 5px 0px" src="' + url + '"/></a>';
  
  if (position == "center") {
    html = '<div style="text-align: center"><a data-target="#MyModal" data-toggle="modal" class="modal-image" href="' + img_url + '"><img src="' + url + '"/></a></div>';
  }
  
  ed.execCommand("mceInsertContent", false, html);
  
  var modal = $('.modal').eq(0);
  
  modal.hide();
};


/**
 * Extend jQuery with richtext call.
 */
(function($) {
  $.fn.richtext = function(ctype, cid, options) {

    var settings = $.extend({
      // These are the defaults.
      maxchars: -1,
      hresize: false
    }, options);
    
    var plugins = pg.TINYMCE_PLUGINS;
    var config = pg.TINYMCE_CONFIG;

    console.log(ctype);
    console.log(cid);;

    if (settings.maxchars > -1) {
        plugins += ",maxlength";
        $.extend(config, djinn.forms.richtext.TINYMCE_MAXCHARS_CONFIG);
        $.extend(config, {maxlength_id_summary: maxchars});
    }

    if (settings.hresize) {
        $.extend(config, {theme_advanced_resize_horizontal: 'true'});
    }

    return this.tinymce(config);
    
  };
}( jQuery ));
