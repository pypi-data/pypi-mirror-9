from django.forms import Media
from django.forms.widgets import Widget
from django.utils.safestring import mark_safe
from django.template.loader import render_to_string


TPL = 'djinn_forms/snippets/richtextwidget.html'


class RichTextWidget(Widget):

    """ Widget that provides wysiwyg capabilities for fields """

    instance = None

    def _media(self):

        """ Add JS for TinyMCE """

        return Media(
            js=('/jquery.tinymce/jscripts/tiny_mce/jquery.tinymce.js',
                'js/djinn_forms_richtext.js')
        )

    media = property(_media)

    def render(self, name, value, attrs=None):

        """ Render the widget as HTML """

        context = {
            'name': name,
            'hint': self.attrs.get("hint", ""),
            'value': value or ""
        }

        if self.instance:
            context['ctype'] = self.instance.ct_name
            context['cid'] = self.instance.id

        html = render_to_string(TPL, context)

        return mark_safe(u"".join(html))
