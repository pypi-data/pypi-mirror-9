################################################################################
#    GIPPY: Geospatial Image Processing library for Python
#
#    Copyright (C) 2014 Matthew A Hanson
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program. If not, see <http://www.gnu.org/licenses/>
################################################################################

#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147.                      #
# Immediately after which, Ian Cooke deleted a bunch of random, automatically  #
# generated, empty targets and variables.                                      #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++

INC = -I./
CFLAGS = -std=c++0x -Wall -fexceptions -fPIC
LIBDIR =
LIB =
LDFLAGS =

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG =
OUT_DEBUG = bin/Debug/libgip.so

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE =
OUT_RELEASE = bin/Release/libgip.so

OBJ_DEBUG = $(OBJDIR_DEBUG)/GeoVector.o $(OBJDIR_DEBUG)/GeoRaster.o $(OBJDIR_DEBUG)/GeoImage.o $(OBJDIR_DEBUG)/GeoData.o $(OBJDIR_DEBUG)/GeoAlgorithms.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/GeoVector.o $(OBJDIR_RELEASE)/GeoRaster.o $(OBJDIR_RELEASE)/GeoImage.o $(OBJDIR_RELEASE)/GeoData.o $(OBJDIR_RELEASE)/GeoAlgorithms.o


#all: debug release
all: release

install:
	cp bin/Release/libgip.so /usr/lib/

develop: release
ifndef VIRTUAL_ENV
	$(error "Must be in virtual environment for develop")
endif
	mkdir -p $(VIRTUAL_ENV)/lib
	cp bin/Release/libgip.so $(VIRTUAL_ENV)/lib/

clean: clean_debug clean_release

before_debug:
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug:

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) -shared $(LIBDIR_DEBUG) $(OBJ_DEBUG)  -o $(OUT_DEBUG) $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/GeoVector.o: GeoVector.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c GeoVector.cpp -o $(OBJDIR_DEBUG)/GeoVector.o

$(OBJDIR_DEBUG)/GeoRaster.o: GeoRaster.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c GeoRaster.cpp -o $(OBJDIR_DEBUG)/GeoRaster.o

$(OBJDIR_DEBUG)/GeoImage.o: GeoImage.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c GeoImage.cpp -o $(OBJDIR_DEBUG)/GeoImage.o

$(OBJDIR_DEBUG)/GeoData.o: GeoData.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c GeoData.cpp -o $(OBJDIR_DEBUG)/GeoData.o

$(OBJDIR_DEBUG)/GeoAlgorithms.o: GeoAlgorithms.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c GeoAlgorithms.cpp -o $(OBJDIR_DEBUG)/GeoAlgorithms.o

clean_debug:
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)

before_release:
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release:

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) -shared $(LIBDIR_RELEASE) $(OBJ_RELEASE)  -o $(OUT_RELEASE) $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/GeoVector.o: GeoVector.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c GeoVector.cpp -o $(OBJDIR_RELEASE)/GeoVector.o

$(OBJDIR_RELEASE)/GeoRaster.o: GeoRaster.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c GeoRaster.cpp -o $(OBJDIR_RELEASE)/GeoRaster.o

$(OBJDIR_RELEASE)/GeoImage.o: GeoImage.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c GeoImage.cpp -o $(OBJDIR_RELEASE)/GeoImage.o

$(OBJDIR_RELEASE)/GeoData.o: GeoData.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c GeoData.cpp -o $(OBJDIR_RELEASE)/GeoData.o

$(OBJDIR_RELEASE)/GeoAlgorithms.o: GeoAlgorithms.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c GeoAlgorithms.cpp -o $(OBJDIR_RELEASE)/GeoAlgorithms.o

clean_release:
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

