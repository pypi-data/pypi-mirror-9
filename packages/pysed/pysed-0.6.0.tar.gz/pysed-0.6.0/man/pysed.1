.\"                                      -*- nroff -*-
.\" Copyright (C) 2014-2015 Dimitris Zlatanidis
.\"
.\" This program is free software: you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation, either version 3 of the License, or
.\" (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.TH pysed "10" "4 2015" "pysed"
.SH NAME
pysed is utility that parses and transforms text
.SH SYNOPSIS
Usage: pysed [-h] [-v]
             [[-r] [-f] [-s] [-m] [-l] [-g] [-s] --write]
.SH DESCRIPTION
\fBpysed\fP is utility that parses and transforms text
.PP
CLI utility that parses and transforms text written in Python.

Pysed is a Python stream editor, is used to perform basic text transformations 
from a file. It reads text, line by line, from a file and replace, insert or 
print all text or specific area. Actually pysed is a passage of Python module 're'
in terminal.
.SH EXAMPLES
Usage: pysed [OPTION] {pattern} {repl} {max} {flag} [input-file]

Options:
  -h, --help                   display this help and exit
  -v, --version                print program version and exit
  -r, --replace                search and replace text
  -f, --findall                find all from pattern in text
  -s, --search                 search for the first matching
  -m, --match                  pattern matching in the beginning
  -l, --lines                  search pattern and print lines
  -g, --highlight              highlight and print text
  -s, --stat                   print text statistics
      --write                  write changes to file

.SH COLORS
 black, red, green, yellow, blue, magenta, cyan
.PP
.SH FLAGS
 I or IGNORECASE
 M or MULTILINE
 S or DOTALL
 U or UNICODE
 L or LOCALE
 X or VERBOSE

.SH GLOBAL OPTIONS
.SS
\fB\-v\fP, \fB\-\-version\fP
Print the version of program and exit.

.SS -r, --replace, search and replace text
\fBpysed\fP \fB-r\fP \fB"pattern"\fP \fB"replace"\fP \fBmax\fP \fBflag\fP \fBinput-file\fP
.PP
Return the string obtained by replacing the leftmost non-overlapping 
occurrences of pattern in string by the replacement repl. If the pattern 
isnâ€™t found, string is returned unchanged. repl can be a string or a function; 
if it is a string, any backslash escapes in it are processed. That is, \n is 
converted to a single newline character, \r is converted to a carriage return, 
and so forth. Unknown escapes such as \j are left alone. Backreferences, 
such as \6, are replaced with the substring matched by group 6 in the pattern.
Source: https://docs.python.org/2.7/library/re.html#re.sub

.SS -f , --findall, find all from pattern in text
\fBpysed\fP \fB-f\fP \fB"pattern"\fP \fB""\fP \fB0\fP \fBflag\fP \fBinput-file\fP
.PP
Return all non-overlapping matches of pattern in string, as a list of strings. 
The string is scanned left-to-right, and matches are returned in the order found. 
Empty matches are included in the result unless they touch the beginning of another 
match. Source: https://docs.python.org/2.7/library/re.html#re.findall

.SS -s , --search, search for the first matching
\fBpysed\fP \fB-s\fP \fB"pattern"\fP \fB""\fP \fBgroup\fP \fBflag\fP \fBinput-file\fP
.PP
Scan through string looking for the first location where the regular expression 
pattern produces a match, and print text. 
the string. Source: https://docs.python.org/2.7/library/re.html#re.search

.SS -m , --match, pattern matching in the beginning
\fBpysed\fP \fB-m\fP \fB"pattern"\fP \fB""\fP \fBgroup\fP \fBflag\fP \fBinput-file\fP
.PP
If zero or more characters at the beginning of string match the regular expression 
pattern, print matching text.
Source: https://docs.python.org/2.7/library/re.html#re.match

.SS -l , --lines, search pattern and print lines
\fBpysed\fP \fB-l\fP \fB"pattern"\fP \fBinput-file\fP
.PP
Same argument as the '--search' except that facing the file line by line and prints
the line found in pattern.

.SS -g , --highlight, highlight and print text
\fBpysed\fP \fB-g\fP \fB"pattern"\fP \fB"color"\fP \fBinput-file\fP 
.PP
Print a file with an highlight on the pattern.

.SS -s , --stat, print text statistics
\fBpysed\fP \fB-s\fP \fBinput-file\fP
.PP
Print text statistics split in lines, words, chars, blanks.

.SS -w , --write, write changes to file
.PP
Add this argument last to write the changes to the file.

.SH HELP OPTION
Specifying the help option displays help for pysed itself, or a
command.
.br
For example:
  \fBpysed \-\-help\fP - display help for pysed

.SH AUTHOR
Dimitris Zlatanidis <d.zlatanidis@gmail.com>
.SH HOMEPAGE
https://github.com/dslackw/pysed
.SH COPYRIGHT
Copyright \(co 2014-2015 Dimitris Zlatanidis

.SH SEE ALSO
sed(1)
