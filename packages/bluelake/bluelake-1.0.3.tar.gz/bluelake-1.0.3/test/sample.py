# -*- coding: utf-8 -*-

### Generated Code. DO NOT Modify it manually!
### Generated by bluelake-gen-py. Generator version: v0.0.1
### Generated at 2015-03-13 12:02:16
### Original interface:  me.ele.bluelake.codegen.python.ISampleService

from bluelake.client import JsonService, JsonMethod

@JsonService(name=u'sample')
class ISampleService(object):

    def __init__(self, server):
        self.server = server

    @JsonMethod()
    def count(self, str):
        """
        
        :param str:    String
        :return type:	int
        """
        pass
        
        
    @JsonMethod()
    def throwException(self, additionalInfo, haha):
        """
        
        :param additionalInfo:    String
        :param haha:    BigDecimal
        :return type:	BigDecimal
        """
        pass
        
        
    @JsonMethod()
    def bean(self, a, b, c, d):
        """
        
        :param a:    int
        :param b:    String
        :param c:    SimpleBean
        :param d:    Map
        :return type:	List
        """
        pass
        
        
    @JsonMethod()
    def simpleMap(self, a):
        """
        
        :param a:    int
        :return type:	Map
        """
        pass
        
        
    @JsonMethod()
    def complexMap(self, a):
        """
        
        :param a:    String
        :return type:	Map
        """
        pass
        
        
    @JsonMethod()
    def complexBean(self, cb):
        """
        
        :param cb:    ComplexBean
        :return type:	ComplexBean
        """
        pass
        
        
    @JsonMethod()
    def returnNull(self):
        """
        :return type:	SimpleBean
        """
        pass
        
        
    @JsonMethod()
    def returnVoid(self):
        """
        :return type:	void
        """
        pass
        
        
    @JsonMethod()
    def runtimeException(self):
        """
        :return type:	SimpleBean
        """
        pass
        
        
    @JsonMethod()
    def generateUUID(self, str):
        """
        
        :param str:    String
        :return type:	int
        """
        pass
        
        
    @JsonMethod()
    def online2Offline(self, str):
        """
        
        :param str:    String
        :return type:	int
        """
        pass
        
        
    @JsonMethod()
    def isInBPMTeam(self, str):
        """
        
        :param str:    String
        :return type:	int
        """
        pass
        