# -*- coding: utf-8 -*-

### Generated Code. DO NOT Modify it manually!
### Generated by bluelake-gen-py. Generator version: v0.0.1
### Generated at 2015-03-05 16:00:37
### Original interface:  me.ele.coffee.hr.iservice.IUserBuRoleService

from bluelake.client import JsonService, JsonMethod

@JsonService(name=u'userBuRoleService')
class IUserBuRoleService(object):

    def __init__(self, server):
        self.server = server

    @JsonMethod()
    def getRoleMap(self, context):
        '''

        :param context:    Context
        :return:
        '''
        pass


    @JsonMethod()
    def listTransferableBuId(self, context, targetUserId):
        '''

        :param context:    Context
        :param targetUserId:    int
        :return:
        '''
        pass


    @JsonMethod()
    def createUserBuRole(self, context, userBURole):
        '''

        :param context:    Context
        :param userBURole:    UserBuRole
        :return:
        '''
        pass


    @JsonMethod()
    def transferUserBuRole(self, context, userBuRole):
        '''

        :param context:    Context
        :param userBuRole:    UserBuRole
        :return:
        '''
        pass


    @JsonMethod()
    def deleteUserBuRole(self, context, userId, pk):
        '''

        :param context:    Context
        :param userId:    int
        :param pk:    int
        :return:
        '''
        pass


    @JsonMethod()
    def listRoleIdByBuTypeId(self, context, buTypeId):
        '''

        :param context:    Context
        :param buTypeId:    int
        :return:
        '''
        pass


    @JsonMethod()
    def getOperRstBuIdList(self, context, createflag):
        '''

        :param context:    Context
        :param createflag:    boolean
        :return:
        '''
        pass


    @JsonMethod()
    def listUserBuRole(self, context, userId):
        '''

        :param context:    Context
        :param userId:    Integer
        :return:
        '''
        pass


    @JsonMethod()
    def listUserBu(self, context, userId):
        '''

        :param context:    Context
        :param userId:    Integer
        :return:
        '''
        pass

