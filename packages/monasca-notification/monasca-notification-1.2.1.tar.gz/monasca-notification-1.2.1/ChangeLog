CHANGES
=======

1.2.1
-----

* Fixed Kafka read error
* Exit with the signal number
* Email notifier returns false if self._smtp == None
* Updated documentation

1.2.0
-----

* Added retry engine to notification system
* Don't install kafka-python 0.9.3
* Notification engine refactored from many processes to one
* Refactored notification engine types

1.1.6
-----

* Added pagerduty support to notification_processor
* Force mysql_passwd to a string
* Fixes for statsd integration
* Webhook now passes alarm_id instead of alarm_name
* Added timeout to webhook
* Added test coverage for email and webhook notification

1.1.5
-----

* Added mysql ssl support

1.1.4
-----

* Updated email notification
* Implementing Webhook Notification type

1.1.3
-----

* Switch to using monasca-statsd
* Change timeouts so shutdown is quicker

1.1.2
-----

* Change alarm_id to alarm_definition_id in alarm_action

1.1.1
-----

* Changes for alarmed metrics

1.1.0
-----

* Move from using zookeeper to track partition offsets to kafka

1.0.3
-----

* Move to pbr based build
* Use hacking instead of flake8/pep8

1.0.2
-----

* Added wheel settings setup.cfg so the publish to pypi works correctly

1.0.1
-----

* bump version 1.0.1
* Log mysql connection failures better
* Added virtual env to the tox.ini so the push to pypi will work correctly

1.0.0
-----

* Rename to monasca, setup for tox, removed legacy bits
* Moved code out of __init__.py, minor pep8 fix
* Noted multiple hosts can be used
* Turn on mysql autocommit
* Cleaned up dependencies for easy_install
* Set to version 1.0.0 and setup for upload to pypi
* Update README.md
* Update README.md
* Added copyright header, LICENSE and HACKING.rst
* Fixed tests to match updated alarmtransition fields
* Added checking of the actionsEnabled field in the alarm transition message
* Added requirements files
* moved to a human readable date in the email
* Added first notification processor test
* Added some state tracker tests
* pep8/flake8 formatting fixes
* Fixed test on the build box
* Added some notification equality tests
* The build box is slow
* Added tests of the alarm processor
* Initial test using mock with the multiprocess setup
* Fixed some unraised exceptions
* Switched back to exiting on all mysql errors
* Updated to new sql schema for alarm actions
* Made default config more debug friendly
* Made _offsets a default dict to handle the first use of a partition
* Fixed pep8 violations that I used for testing the build job
* Added a simple unit test and the test framework
* Added mon_notification_offsets tool
* Removed get_offsets, it didn't make sense after making offsets a property
* Added test note about alarm_ttl needing to be updated
* logging options are now in the config
* Changed ttl to seconds, made both ttl and max_lag optional
* Minor flake8 + hacking code convention fix
* Added SIGINT to list of handled signals
* Implemented offset_max_lag
* Added ttl messages to the no_notification counter
* Added alarm ttl
* Implemented a clean shutdown that finished any work left in the queue
* Minor changes from inspection
* Added some ideas for better Fault Tolerance
* Adde zookeeper timer
* Added in statsd!
* I realized I am not sure what dependencies.txt is for, removing it
* Fixed notification.to_json broke when slots was added
* Changes after running the hacking open stack code checks, except line length
* Better handle child processes exiting
* Update column name
* Handle reconnecting to smtp servers without dropping an notifications
* Added better logging
* Revert "Moved main so imports are right both from the source directly and the package."
* Moved main so imports are right both from the source directly and the package
* Minor setup.py change
* Added a some sample tests, fixed misc bugs
* Misc spelling error Craig caught
* Fixed a directory structure issue
* Fixed module name to match what python likes
* Added __init__ to mon-notification
* Re-org for packing nicely
* Initial email implementation
* Updated sql queries and the alarm format parsing
* Added mysql section of the alarm processor
* Initial alarm processing and handling mutliple notifications per alarm
* Added in basic handling of our out of order commits
* Fixes from code inspection, mostly pep8
* Working offset tracking. I moved all Zookeeper bits to one class run by main
* Unfinished implementation of the commit tracker, alarm and notification processors
* Added zookeeper based locking so only one process runs at a time
* Initial test run of a kafka producer
* Initial reading from kafka
* Decided it is better to publish notifications to kafka rather than vertica
* Fixed readme ordered lists
* Initial structure
