#!/usr/bin/env python
"""
    Write JSON object to file system
    
    @author: Jean-Lou Dupont
"""
__version__="0.1"
import os, sys, argparse
op=os.path

try:
    import jldcmds #@UnusedImport
except:
    ### must be in dev mode then    
    this_dir=op.dirname(__file__)
    lib_path=op.abspath(op.join(this_dir, ".."))
    sys.path.insert(0, lib_path)
    import jldcmds #@UnusedImport

########################################################################

DESC="Write JSON object to file system - version %s" % __version__
DEFAULTS={
          }

def main():
    try:
        import jldcmds.common.do_setup #@UnusedImport
        import logging
        import jldcmds.do_checks #@UnusedImport
        
        parser=argparse.ArgumentParser(description=DESC, fromfile_prefix_chars='@')
        parser.add_argument('-d',  dest='debug', action='store_true', help="Debug Mode", default=False)
        
        parser.add_argument('-tp',  dest='target_path',     type=str, help="Target Path",      default="/tmp/objs")
        parser.add_argument('-fp',  dest='filename_pattern',type=str, help="Filename pattern", required = True)        
        
        parser.add_argument('-i',   dest='ignore_error', action='store_true', help="Ignore write error", default = False)
        parser.add_argument('-md5', dest='hash_md5',     action='store_true', help="Hash resulting filename with md5", default = False)
        
        args=parser.parse_args()
        
        from jldcmds.common.tools_sys import dnorm, info_dump
        from jldcmds.script_jwrite import run
        
        args=dnorm(vars(args))
        
        if args.get('debug', False):
            info_dump(args, 20)
                   
        run(**args)


    except KeyboardInterrupt:
        logging.info("... exiting")
        sys.exit(0)##no probs
        
    except Exception,e:
        logging.error(str(e))
        sys.exit(1)
        

sys.exit(main())