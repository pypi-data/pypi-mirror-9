import serial
import pins
import atexit
import p1.loader

binary=[
0x0,0xd8,0xb8,0x5,0x6f,0xd5,0x10,0x0,0x3c,0x4,0x9c,0x4,0x1c,0x0,0xa4,0x4,0x7c,0x1,0x2,0x1,0xc,0x0,0x4,0x0,0x7c,0x1,0x10,0x0,0x1,0x37,0x24,0x38,0x1e,0x35,0x3a,0x1,0xc2,0x0,0x6,0x2,0x1,0x3f,0x91,0x35,0xc0,0xec,0x23,0x1,0x38,0xe1,0x6,0x2,0x7,0x35,0x35,0x38,0x1d,0x3e,0xb6,0x35,0x35,0x38,0x1d,0x3e,0xb4,0x0,0x6,0x2,0x4,0x65,0x64,0x34,0xfa,0xa,0x80,0x58,0x64,0x89,0x0,0x88,0x0,0x38,0x5,0xe2,0x89,0x1,0x88,0x0,0x37,0x24,0xe8,0x89,0x2,0x88,0x1,0x37,0x1,0xe8,0x35,0xfa,0xa,0x8,0x1,0x38,0xe1,0x6,0x2,0x7,0x4,0x36,0x88,0x2,0x38,0x1e,0xf9,0xa,0x2a,0x88,0x1,0x36,0xe8,0x88,0x2,0x3d,0xb6,0x88,0x1,0x37,0x0,0xe8,0x36,0xe2,0x88,0x2,0x3d,0xb4,0x1,0x36,0x88,0x2,0x3d,0x96,0x37,0x1,0xe3,0xea,0x88,0x2,0x3d,0x94,0x37,0x21,0xe3,0xea,0x6,0x2,0x7,0x4,0x5,0x1,0x35,0x6,0x2,0x7,0x35,0x37,0x1,0x3e,0x92,0x35,0x37,0x1,0x3e,0x96,0x37,0x24,0xeb,0xe8,0x37,0x4,0xea,0x89,0x9,0x38,0x5,0x38,0x9,0x3e,0x92,0x38,0x5,0x38,0x9,0x3e,0x96,0x37,0x24,0xeb,0xe8,0x37,0x5,0xea,0x89,0xa,0x38,0xa,0x38,0xe,0x3e,0x92,0x38,0xa,0x38,0xe,0x3e,0x96,0x37,0x24,0xeb,0xe8,0x38,0x60,0xea,0x89,0xb,0x37,0x23,0x38,0x13,0x3e,0x92,0x37,0x23,0x38,0x13,0x3e,0x96,0x37,0x24,0xeb,0xe8,0x37,0x6,0xea,0x89,0xc,0x38,0x14,0x38,0x18,0x3e,0x92,0x38,0x14,0x38,0x18,0x3e,0x96,0x37,0x24,0xeb,0xe8,0x38,0xa0,0xea,0x89,0xd,0x38,0x19,0x38,0x1d,0x3e,0x92,0x38,0x19,0x38,0x1d,0x3e,0x96,0x37,0x24,0xeb,0xe8,0x38,0xc0,0xea,0x89,0xe,0x88,0x9,0x88,0x3,0xfb,0xa,0xa,0x1,0x88,0x9,0x6,0x2,0x7,0x88,0x9,0x89,0x3,0x88,0xa,0x88,0x4,0xfb,0xa,0xa,0x1,0x88,0xa,0x6,0x2,0x7,0x88,0xa,0x89,0x4,0x88,0xb,0x88,0x5,0xfb,0xa,0xa,0x1,0x88,0xb,0x6,0x2,0x7,0x88,0xb,0x89,0x5,0x88,0xc,0x88,0x6,0xfb,0xa,0xa,0x1,0x88,0xc,0x6,0x2,0x7,0x88,0xc,0x89,0x6,0x88,0xd,0x88,0x7,0xfb,0xa,0xa,0x1,0x88,0xd,0x6,0x2,0x7,0x88,0xd,0x89,0x7,0x88,0xe,0x88,0x8,0xfb,0xa,0xa,0x1,0x88,0xe,0x6,0x2,0x7,0x88,0xe,0x89,0x8,0x4,0xfe,0xb8,0x32,0x0,0x0,0xb0,0x2,0xc,0x0,0x80,0x1,0x0,0x0,0xa2,0x1,0x0,0x0,0xb0,0x1,0x0,0x0,0xba,0x1,0x0,0x0,0xcd,0x1,0x4,0x0,0xea,0x1,0x0,0x0,0xf6,0x1,0x0,0x0,0x17,0x2,0x0,0x0,0x24,0x2,0x8,0x0,0x70,0x2,0x0,0x0,0x98,0x2,0x0,0x0,0xf0,0xa9,0xbc,0xa0,0x10,0xa8,0xfc,0x80,0x54,0xaa,0xbc,0x8,0x1,0xb2,0xfc,0xa0,0x55,0xb2,0xbc,0x2c,0x4,0xa8,0xfc,0x80,0x54,0xaa,0xbc,0x8,0x1,0xbe,0xfc,0xa0,0x55,0xbe,0xbc,0x2c,0x4,0xa8,0xfc,0x80,0x54,0xae,0xbc,0x8,0x4,0xa8,0xfc,0x80,0x54,0xb0,0xbc,0x8,0x4,0xa8,0xfc,0x80,0x54,0xb4,0xbc,0x8,0x5a,0xc0,0xbc,0xa0,0x10,0xc0,0xfc,0x80,0x4,0xae,0x7c,0x62,0x2,0xae,0x7c,0x61,0x5f,0xe8,0x9b,0x68,0x5f,0xec,0xab,0x68,0x33,0xc8,0xfc,0xa0,0x64,0xbc,0xbc,0x5c,0x1,0xae,0x7c,0x62,0xf2,0xb3,0x3c,0x61,0x16,0x0,0x64,0x5c,0x9,0xb8,0xfc,0xa0,0x58,0xba,0xbc,0xa0,0x1,0xba,0xfc,0x28,0xf1,0xbb,0xbc,0x80,0x58,0xba,0xbc,0x80,0x64,0xbc,0xbc,0x5c,0x5d,0xa8,0xbc,0xa0,0xf1,0xa9,0xbc,0x84,0x0,0xa8,0x7c,0xc1,0x1f,0x0,0x4c,0x5c,0xf2,0xb3,0x3c,0x61,0x1,0xb6,0xfc,0x30,0x1e,0xb8,0xfc,0xe4,0x17,0xb6,0xfc,0x28,0xff,0xb6,0xfc,0x60,0x1,0xae,0x7c,0x62,0xff,0xb6,0xd4,0x6c,0xf0,0xab,0xbc,0x8,0x5a,0xaa,0xbc,0x80,0x55,0xb6,0x3c,0x0,0x5a,0xaa,0xbc,0x84,0x1,0xaa,0xfc,0x80,0xf,0xaa,0xfc,0x60,0xf0,0xab,0x3c,0x8,0x16,0x0,0x7c,0x5c,0x5e,0xc8,0xbc,0x5c,0xf0,0xa9,0xbc,0xa0,0x8,0xa8,0xfc,0x80,0x54,0xaa,0xbc,0x8,0x4,0xa8,0xfc,0x80,0x54,0xac,0xbc,0x8,0x56,0xaa,0x3c,0x86,0x33,0x0,0x68,0x5c,0x60,0xac,0xbc,0x80,0x56,0xc2,0xbc,0x0,0x60,0xac,0xbc,0x84,0x1,0xac,0xfc,0x80,0xf,0xac,0xfc,0x60,0x54,0xac,0x3c,0x8,0x0,0xc3,0xfc,0x68,0x2,0xc2,0xfc,0x2c,0x1,0xc2,0xfc,0x68,0xb,0xc4,0xfc,0xa0,0xf1,0xc7,0xbc,0xa0,0x4,0xae,0x7c,0x62,0x2,0xae,0x7c,0x61,0x1,0xc2,0xe0,0x6c,0x1,0xc2,0xfc,0x29,0x5f,0xe8,0xab,0x70,0x5f,0xec,0x97,0x74,0x58,0xc6,0xbc,0x80,0x5e,0xc8,0xbc,0x5c,0x63,0xa8,0xbc,0xa0,0xf1,0xa9,0xbc,0x84,0x0,0xa8,0x7c,0xc1,0x4d,0x0,0x4c,0x5c,0x46,0xc4,0xfc,0xe4,0x33,0x0,0x7c,0x5c,0x1,0x5,0x2,0x47,0x35,0x37,0x1,0x1a,0x57,0x67,0x37,0x21,0x1e,0x35,0xc0,0x70,0xf6,0xc9,0x20,0x8b,0x28,0xc9,0x24,0x34,0xc7,0x30,0x47,0x28,0x36,0xec,0x42,0x80,0x61,0x32,0x40,0xa,0x5,0x42,0x98,0x36,0xed,0x21,0x47,0x35,0x38,0x9,0x1a,0x32,0x0,0x5,0x4,0x35,0xfe,0xa,0x2,0x4,0x77,0x32,0x62,0x3e,0x48,0x44,0xfb,0xa,0xb,0x48,0x98,0x28,0x61,0x48,0x36,0xec,0x37,0x23,0xe8,0x49,0x32,0x3f,0x91,0x69,0x0,0x5,0x4,0x62,0x80,0x35,0xfe,0x3f,0x91,0x68,0xed,0x35,0xc0,0x39,0x3,0xe8,0xf6,0xf6,0x64,0xfa,0xf2,0xb,0x2,0x4,0x67,0x32,0x0,0x5,0x4,0x62,0x80,0x35,0xf9,0xa,0x2,0x4,0x75,0x32,0x50,0x4c,0x36,0xec,0x37,0x23,0xe8,0xfb,0xb,0x2,0x4,0x74,0x64,0x4c,0x99,0x38,0x4c,0x36,0xec,0x37,0x23,0xe8,0x4d,0x5c,0x37,0x2,0xe8,0xa,0x3,0x1,0x5,0x6,0x32,0x64,0x16,0x8,0x8,0x1,0x66,0xae,0x80,0x5,0x7,0x9,0x78,0x32,0x64,0x37,0x1e,0xfc,0x6d,0x64,0x35,0xf9,0xa,0xa,0x64,0x6c,0xec,0xe9,0x65,0x1,0x38,0x2d,0x5,0x7,0x3b,0x3b,0x9a,0xca,0x0,0x69,0x38,0xa,0x8,0x2d,0x64,0x68,0xfe,0xa,0x16,0x1,0x64,0x68,0xf6,0x38,0x30,0xec,0x6c,0x68,0x36,0xfc,0xf4,0xec,0x5,0x7,0x68,0x66,0x57,0x62,0x1c,0x4,0xc,0x60,0x68,0x36,0xfc,0xf2,0xa,0x5,0x1,0x38,0x30,0x5,0x7,0x38,0xa,0x6a,0x56,0x9,0x53,0x32,0x37,0x2,0x68,0xed,0x37,0x0,0xe3,0x66,0x43,0x68,0x8,0x1b,0x1,0x35,0x39,0x2,0x93,0x37,0x1,0x66,0xc1,0x37,0x23,0xe8,0x38,0x30,0x38,0x39,0x12,0x38,0x41,0x38,0x46,0x12,0xf,0x5,0x7,0x9,0x65,0x32,0x37,0x4,0x68,0xed,0x66,0x43,0x68,0x8,0xd,0x1,0x36,0x66,0xc1,0x36,0xe8,0x38,0x30,0xec,0x5,0x7,0x9,0x73,0x32,0x0
]

print('Setting up Propeller HAT')
l = p1.loader.Loader('/dev/ttyAMA0',17)
l.upload(code=''.join(map(chr,binary)),progress=p1.loader.print_status)

dev = serial.Serial('/dev/ttyAMA0',baudrate=115200, timeout=0)

_CMD_MODE  = 0
_CMD_WRITE = 1

OUTPUT = 1
INPUT  = 0
HIGH   = 1
LOW    = 0

ina = [0]*30

fw_version = None

def _poll():
    result = dev.read()
    if result != '':
        result = ord(result)
        #print bin(result).replace('0b','').rjust(8, '0')
        
        cmd  = result >> 5
        data = result & 0b00011111
        if cmd == 0: # CMD status message
            if data & 1: # Pin Okay
                direction = (data & 0b0010000) > 0
                value     = (data & 0b00001000) > 0
                #print("OK:  Dir: {} Value: {}".format(direction, value))
                return True
            else:       # Range Err
                #print("ERR: Pin out of range!")
                return False
        elif cmd == 7:
            #print("Got FW version {}".format(data))
            fw_version = data
        else: # CMD pin update
            offset = (cmd-1)*5
            ina[offset:offset+5] = (int(x) for x in list(bin(data).replace('0b','').rjust(5,'0')))
            #print(ina)
        
        return True

def mode(pin, value):
    cmd = pin
    cmd = cmd | (_CMD_MODE << 6)
    cmd = cmd | (value << 5)
    dev.write(chr(cmd))

def write(pin, value):
    cmd = pin
    cmd = cmd | (_CMD_WRITE << 6)
    cmd = cmd | (value << 5)
    dev.write(chr(cmd))

def read(pin):
    return ina[pin]

t = pins.AsyncWorker(_poll)
t.start()

atexit.register(lambda: t.stop())
