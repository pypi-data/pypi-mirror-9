<?xml version="1.0"?>
<wsdl:definitions 
 xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
 xmlns:tns="http://www.cbs.dtu.dk/ws/WSLipoP_1_0_ws0" 
 xmlns:common="http://www.cbs.dtu.dk/ws/ws-common" 
 xmlns:lipop="http://www.cbs.dtu.dk/ws/ws-lipop" 
 xmlns:soapenv="http://schemas.xmlsoap.org/wsdl/soap/" 
 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" 
 xmlns="http://schemas.xmlsoap.org/wsdl/" 
 targetNamespace="http://www.cbs.dtu.dk/ws/WSLipoP_1_0_ws0">
	<wsdl:types>
    <!-- AJP: fixed this for schema SUDS by adding targetNamespace below -->
		<xsd:schema targetNamespace="http://www.cbs.dtu.dk/ws/WSLipoP_1_0_ws0">
			<!-- XSD -->
			<xsd:import 
			 namespace="http://www.cbs.dtu.dk/ws/ws-common" 
			 schemaLocation="http://www.cbs.dtu.dk/ws/common/ws_common_1_0b.xsd"
			 />
			<!-- XSD -->
			<xsd:import 
			 namespace="http://www.cbs.dtu.dk/ws/ws-lipop" 
			 schemaLocation="http://www.cbs.dtu.dk/ws/LipoP/ws_lipop_1_0_ws0.xsd"
			/>
		</xsd:schema>
	</wsdl:types>

	<wsdl:types>
		<schema targetNamespace="http://www.cbs.dtu.dk/ws/WSLipoP_1_0_ws0" 
		 xmlns="http://www.w3.org/2001/XMLSchema" 
		 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" 
		 xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
			<xsd:element name="runService" type="lipop:runService"/>
			<xsd:element name="runServiceResponse" type="common:runServiceResponse"/>
			<xsd:element name="fetchResult" type="common:fetchResult"/>
			<xsd:element name="fetchResultResponse" type="lipop:fetchResultResponse"/>
			<xsd:element name="pollQueue" type="common:pollQueue"/>
			<xsd:element name="pollQueueResponse" type="common:pollQueueResponse"/>
		</schema>
	</wsdl:types>

	<!-- ==================================================================== -->

	<message name="runServiceRequest">
		<part name="parameters" element="tns:runService"/>
	</message>
	<message name="runServiceResponse">
		<part name="parameters" element="tns:runServiceResponse"/>
	</message>

	<message name="fetchResultRequest">
		<part name="parameters" element="tns:fetchResult"/>
	</message>
	<message name="fetchResultResponse">
		<part name="parameters" element="tns:fetchResultResponse"/>
	</message>

	<message name="pollQueueRequest">
		<part name="job" element="tns:pollQueue"/>
	</message>
	<message name="pollQueueResponse">
		<part name="queueentry" element="tns:pollQueueResponse"/>
	</message>

	<!-- ==================================================================== -->

	<portType name="WSLipoP_1_0_ws0">
		<operation name="runService">
			<input name="runServiceRequest" message="tns:runServiceRequest"/>
			<output name="runServiceResponse" message="tns:runServiceResponse"/>
		</operation>
		<operation name="pollQueue">
			<input name="pollQueueRequest" message="tns:pollQueueRequest"/>
			<output name="pollQueueResponse" message="tns:pollQueueResponse"/>
		</operation>
		<operation name="fetchResult">
			<input name="fetchResultRequest" message="tns:fetchResultRequest"/>
			<output name="fetchResultResponse" message="tns:fetchResultResponse"/>
		</operation>
	</portType>

	<!-- ==================================================================== -->

	<binding name="WSLipoP_1_0_ws0" type="tns:WSLipoP_1_0_ws0">
		<soapenv:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		<operation name="pollQueue">
			<soapenv:operation soapAction="http://www.cbs.dtu.dk/ws/WSLipoP_1_0_ws0#pollQueue"/>
			<input>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSLipoP_1_0_ws0"/>
			</input>
			<output>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSLipoP_1_0_ws0"/>
			</output>
		</operation>
		<operation name="runService">
			<soapenv:operation soapAction="http://www.cbs.dtu.dk/ws/WSLipoP_1_0_ws0#runService"/>
			<input>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSLipoP_1_0_ws0"/>
			</input>
			<output>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSLipoP_1_0_ws0"/>
			</output>
		</operation>
		<operation name="fetchResult">
			<soapenv:operation soapAction="http://www.cbs.dtu.dk/ws/WSLipoP_1_0_ws0#fetchResult"/>
			<input>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSLipoP_1_0_ws0"/>
			</input>
			<output>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSLipoP_1_0_ws0"/>
			</output>
		</operation>
	</binding>

	<!-- ==================================================================== -->

	<service name="WSLipoP_1_0_ws0">
	<documentation>
  	INTRODUCTION
    
    This Web Service implements LipoP v. 1.0 ws0. It predicts lipoproteins
    and discriminates between lipoprotein signal peptides, other signal 
    peptides and n-terminal membrane helices in Gram negative bacteria.
    The method is described in detail in the following article:
    
    Prediction of lipoprotein signal peptides in Gram-negative bacteria.
    A. S. Juncker, H. Willenbrock, G. von Heijne, H. Nielsen, S. Brunak and A. Krogh.
    Protein Sci. 12(8):1652-62, 2003 
    
    Alongside this Web Service the LipoP method is also implemented as
		a traditional click-and-paste WWW server at:
    
    	http://www.cbs.dtu.dk/services/LipoP/
      
    
    WEB SERVICE OPERATION
    
    This Web Service is fully asynchronous; the usage is split into the
		following three operations:
    
    1. runService    

    Input:  The following parameters and data:

            * 'sequencedata'   [containing mulitple 'sequence' element]
              * 'sequence'
                * 'id'         Unique identifier for the sequence
                * 'comment'    Optional comment
                * 'seq'        protein sequences, with unique identifiers (mandatory) 
                               The sequences must be written using the one letter amino acid
                               code: `acdefghiklmnpqrstvwy' or `ACDEFGHIKLMNPQRSTVWY'. Other
                               letters will be converted to `X' and treated as unknown amino
                               acids. Other symbols, such as whitespace and numbers, will be
                               ignored. All the input sequences are truncated to 70 aa from
                               the N-terminal. Currently, at most 2,000 sequences are allowed
                               per submission.

    Output: Unique job identifier

    2. pollQueue

    Input:  Unique job identifier

    Output: 'jobstatus' - the status of the job
                Possible values are QUEUED, ACTIVE, FINISHED, WAITING,
                REJECTED, UNKNOWN JOBID or QUEUE DOWN

    3. fetchResult

    Input :  Unique job identifier of a FINISHED job

    Output: 
            * 'annsource'
                'method'      : Name of the method
                'version'     : Version of the methods

            * 'ann'             (array of annotations - one element per input sequence)
                'sequence'      (standard sequence object)
                 'id'        : Sequence identifier
                 'comment'   : Sequence comment
                 'seq'       : Sequence
               'annrecords'    (array of predicted features for this sequence)
                 'annrecord'   (annotation record)
                 'feature    : feature name
                 'range'
                   'begin'   : Begin position
                   'end'     : End position
                 'score'
                   'key'     : Key describing the nature of this score
                   'value    : The score value
                 'comment    : Answer.

	</documentation>
		<port name="WSLipoP_1_0_ws0" binding="tns:WSLipoP_1_0_ws0">
		<soapenv:address location="http://ws.cbs.dtu.dk:80/cgi-bin/soap/ws/quasi.cgi?log"/>
		</port>
	</service>

</wsdl:definitions>
