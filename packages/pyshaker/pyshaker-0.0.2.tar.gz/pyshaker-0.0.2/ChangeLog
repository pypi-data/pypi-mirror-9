CHANGES
=======

0.0.2
-----

* Add bandwidth support for iperf command
* Update readme file
* Remove legacy scripts from bin/ folder
* Ignore messages from unexpected agents
* Fix density processing
* Refactor server and extract lib entry-point
* Renamed: program instead of method for shell-executer
* Added script support to shell-executer
* Allow to specify how many compute nodes need to be used
* VM density feature
* Added netperf-wrapper test suite and aggregate report
* Generate docs for console tools
* Make polling interval configurable
* Use arrays instead of tuples in samples data
* Minor cleanup in the report
* Added aggregator for traffic stats post-processing
* Move executors to separate package
* Split out report entry-point
* Refactoring of traffic stats processing
* Allow to store and read execution results in JSON format
* Move static agents sample scenario
* Use relative paths in scenario files
* Refactor agents processing and add unit tests
* Make all params configurable via system env
* Fix config processing for oslo.log
* Use oslo.log lib instead of incunator code
* Move resources into separate folder
* Push agent_id from the deployment engine
* Fix the script in image installer
* Refactor executors build command lines
* Cleanup in topology templates
* Use keystone session for modern clients
* Enable iperf auto-run in the image
* Avoid Keystone token expiration att. #2
* Avoid Keystone token expiration
* Configure smaller MTU in the image (for Neutron GRE case) att. #2
* Configure smaller MTU in the image (for Neutron GRE case)
* Fix reference in L2 scenario
* Cleanup iperf graph reporting
* Added iperf executor with chart feature
* Added network scenario with VMs in different nets
* Added network scenario with 2 routers topology
* Structured HTML report based on bootstrap template
* Implement image builder in Python
* Move OpenStack clients to separate package
* Add external_net config option
* Make os-region-name configurable
* Auto-detect public network
* Add iperf executor
* Implemented agent selection
* Add more options into netperf executor
* Show agent list in the report
* Refactor agent processing and filter alive
* Remove key_name param from same_net scenario
* Apply bootstrap styles to the report template
* Implemented draft report generation
* Schedule VMs on active compute nodes only
* Added result processing
* Remove unused code
* Deployment refactring
* Remove key_name parameter from the template
* Introduce pure netperf executor
* Refactor templating and add more samples
* Do not install numpy on agent machines
* Install numpy, change the way agent starts
* Introduce executors that convert test definition into commands
* Do not reload cloud image if it already exists in Glance
* Update readme regarding NETWORK_NAME param
* Install requirements by pip then run setup.py
* Update prepare script and demo template
* Change oslo imports to namespaceless ones
* Updates in prepare script
* Add sample conf file and generator tox target
* Correct calculation of agent ids
* End-to-end topology deployment and test launching
* Extract deployment code and merge main and server
* Base server-agent communication protocol is implemented
* Draft of client-server communication
* Install pbr into the image
* Install shaker into the image
* Make instance-id as external parameter
* Cleanup image prepare script
* Agent executes commands
* Base agent code
* Added ZMQ communication wireframe
* Add security group for VM access
* Base deployment via Heat template
* Add nova client and compute nodes retrieval
* Sync requirements with global list
* Wireframe for Heat usage
* Initial commit
