Summary
-------

This cubes enables a purge mechanism for a cubicweb website that is
sitting behind a varnish cache.

Internals
---------

The purge mechanism consists of sending purge commands to the
administration backend of varnish (by default
localhost:6082). Generally it is recommended to protect this
management port with a secret file which can be configured in this
cube. Multiple backends can be controlled in this manner in a
distributed setup.

Out of the box, this cube will not purge any URLs. The logic of which
pages should be "purged" has to be implemented in content cubes.

To configure which urls to purge, you have to implement an
`IVarnishAdapter`, for example ::

.. sourcecode:: python

   from cubes.varnish.entities import IVarnishAdapter

   class BlogEntryVarnishAdapter(IVarnishAdapter):
     __select__ = is_instance('BlogEntry')

     def urls_to_purge(self):
         return ('/', #frontpage
                 self.entity.absolute_url(), #URL of blog post
                 '/BlogEntry' # list of blog entries)

Debugging : cubicweb-varnish will not crash when it cannot connect to
the administrative port, it will silently log an error in the log.

Dependencies
------------

http://www.varnish-cache.org/

or apt-get install varnish (for debian derived distributions)
