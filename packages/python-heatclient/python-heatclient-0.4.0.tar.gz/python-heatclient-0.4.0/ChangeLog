CHANGES
=======

0.4.0
-----

* Parse nested files if they are template
* Add wildcard support to hook-clear
* Add options for setting and clearing of hooks
* Fix test class names
* Add option for heatclient to accept parameter value from file
* Sync with oslo_incubator
* Migrate to new oslo_xxx namespace
* Updated from global requirements
* Implement deployment-create
* Implement deployment-output-show
* Make ; parsing optional in format_parameters
* Updated from global requirements
* Fix SessionClient error when endpoint=None
* Fix non-working endpoint type argument
* Updated from global requirements
* Updates heat.rst with 'service-list
* Sort event-list by oldest first

0.3.0
-----

* Adds CLI heat service-list
* Add adopt/abandon description to heat manual
* Fix different behavior in python3.4 json module
* Updated from global requirements
* Add CLI commands to interact with software-config
* output-show format by json or raw
* CLI: Add --all option to output-show command
* Removed http proxy environment variable so that httpretty can work
* Updated from global requirements
* Replace httpretty with requests-mock
* Fix passing an object url to the heat CLI
* Cleanup shell tests
* Format attributes as JSON in resource-show output
* Updated from global requirements
* Add transtlation markers for log messages
* Add transtlation markers for error messages
* Add transtlation markers for help messages
* Initial setup for i18n support
* Show the creation_time for stack snapshot list
* Workflow documentation is now in infra-manual
* Remove remaining deprecated oslo-incubator modules
* Convert importutils to oslo.utils
* Updated from global requirements
* Fix H302 errors
* Curl statements to include globoff for IPv6 URLs
* Add support for parameter_defaults in environment
* Updated from global requirements
* Convert strutils to oslo.utils.encodeutils
* Move to oslo.serialization
* Implement restore operation
* Implement snapshot operations
* Tests work fine with random PYTHONHASHSEED
* Updated from global requirements
* Remove _ from builtins
* Fix template_utils tests for Python 3.4
* Fix event tests for Python 3.4
* Fix shell tests for Python 3.4
* Allow mock-based patching in shell tests
* Make sure the --heat-url option is respected
* Put a cap on our cyclomatic complexity
* Pass auth_url if os_no_client_auth specified
* Updated from global requirements
* Remove extraneous vim editor configuration comments
* Updated from global requirements
* Fixed null str returned for incorrect parameter

0.2.12
------

* Add a required 'args' to do_list()
* Client supports check action
* Fix stack update for Python API
* Updated from global requirements

0.2.11
------

* Add 'cancel_update' action and command
* Updated from global requirements
* Add stack-update argument for reset parameters
* Add stack-update argument for patching parameters
* Display stack owner info on stack-list
* Add support for OSprofiler
* Reuse existing disable_rollback in stack-update
* Stop using intersphinx
* Add --show-nested option to stack-list
* warn against sorting requirements
* handles keyboard interrupt
* Re-add keystone v3 auth with fixes
* Template is not required on stack-adopt
* output-file option in stack-abandon
* Handle upper cased endpoints
* Updated from global requirements
* Remove unused/mutable default args
* Update stack-preview usage text
* Removed undefined method in install_env.py file
* Add support for multiple environment files
* Add nested-depth option to resource-list
* Added timeout and rollback params in stack-preview
* Revert "Add keystone v3 auth support"
* Don't expose X-Auth-Token in heat CLI
* Update theme for docs
* Add a tox job for generating docs
* Add rel field to links display
* Implement events pagination, sorting and filtering
* Add keystone v3 auth support
* Deprecate misleading cli command 'resource-template'
* Show physical_resource_id in resource-list
* Fix the section name in CONTRIBUTING.rst

0.2.10
------

* Improve --debug logging output
* Do not set up logging handler in http
* Updated from global requirements
* Fix unicode display in parameters
* Append extra space after command in bash_completion
* Add shell arguments for stack update
* Removed now unnecesary workaround for PyPy
* Don't allow "propagate" of heatclient logger
* Add option to show soft-deleted stacks in stack-list
* Client should support stack-list for global scope
* Mark heatclient as being a universal wheel
* Remove no use option parameters for template-validate
* Let server order event-list
* fixed typos found by RETF rules
* Heat client does not support OS_CACERT option
* Fix empty resource list index out of range error
* Add code coverage in resource list test
* Remove unused arguments for stack-preview command
* Use correct order of arguments to assertEqual

0.2.9
-----

* Updated from global requirements
* Add a description of how stack-abandon works
* Process provider templates for included files
* Deprecate preview --create-timeout in favor of --timeout
* Support Python 3
* Sync oslo incubator
* Python 3: fix test_template_utils.py
* Skip timeout_mins when not specify
* get_file: encode non utf-8 encoding files via base64
* get_file: do not read same url once again
* Resolve files in resource types
* Do not use the '+' operation with dict_items()
* Python3: fix a bytes/str issue
* Updated from global requirements
* Using common methods from oslo cliutils
* Python 3: decode bytes before feeding them to jsonutils.loads()
* Output warnings for deprecated commands
* Add stack-preview support
* Workaround failing pypy gate job
* Remove dependent module py3kcompat
* Python 3: Fix YamlEnvironmentTest tests
* Oslo: sync strutils
* Add new tests to cover most of the requests port
* Modify stack ID lookup to only use stacks:lookup
* Add timeout option to stack-update
* Deprecate create/adopt --create-timeout in favor of --timeout
* Remove unused versions define in template_format.py
* Rename --timeout global option and make it work
* Python3: fix test_stack_list_with_args()
* Pass bytes to NamedTemporaryFile.write()
* Enable --help for each command

0.2.8
-----

* Sort requirement files in alphabetical order
* Expand get_file using to template scope
* "version" section should be required in template
* Updated from global requirements
* add output-list and output-show
* Improve help strings
* Do not use the '+' operation dict_items()
* Remove None for dict.get()
* Support the native signal API
* Update apiclient.base and reuse new functional
* Python3: fix bytes/str issues
* Adding stack-adopt support to python-heatclient
* Fixed incorrect indentation in the tests

0.2.7
-----

* Don't use request builtin redirect for any methods
* REST method to fetch deployments metadata for a server
* Only call decode() on bytes
* Replace try...except with assertRaises
* Add support for software config resources
* Make POST/PUT redirects use original methods
* Do not use the '+' operation dict_items()
* Decode all headers before logging curl commands
* normalise_file_path_to_url: use urlutils.pathname2url
* get_file_contents: use six.itervalues() instead of dict.itervalues()
* Python3: use six.iteritems() rather than dict.iteritems()
* Fixes environment file using correct YAML format
* Improve help strings
* Add optional args arg back to do_list
* python-heatclient stack-abandon support
* Add more default CA paths
* Port to python requests
* Enable default in bash completion
* Allow environment to not have resource_registry
* Add filter option to stack-list
* Add pagination (limit and marker) to stack-list
* Populate files with content from get_file function calls
* Enable hacking H233 rule
* Configure logging regardless of debug flag
* Fix order of arguments in assertEqual
* Added missed files to create venv with run_tests.sh
* Pass empty dict not None for empty environment
* Refactor environment functions in preparation for get_file
* Updated from global requirements
* Add support for build info API
* Remove unused method 'string_to_bool' from utils
* Raise traceback on error when using CLI and -debug
* Remove dependencies on pep8, pyflakes and flake8
* Sync strutils from oslo
* Add to_dict() method to Resource class
* Fix comparison with singletons
* Copy run_test.sh from heat repo
* Improve and unit-test template contents fetching
* Test coverage of empty environment
* Move environment and template file functions to own module
* reconcile prepare_environment_file/url into one funtion
* Use template_format.parse for local stack parsing
* Fetch environment from fields rather than function arg
* Move template_format from heat to heatclient
* Update variable name in test_shell.py
* Use assertRaises instead of try/except/else
* Remove unused common.base module
* Fix some trivial py3 errors
* Remove ununsed httplib2 requirement
* Added API reference document
* Wrapped some long lines
* Fixed typo error OS_IMAGE_URL
* Sort resource-type-list output
* Fix help formatting for resource-template
* Fix inappropriate error message on event-list
* Remove vim header
* Enable deleting multiple stacks with single call
* Increase test_resources coverage
* Show better error when json fail to parse template
* Updates .gitignore
* Misc typos in Heat client
* Supports bash_completion for heatclient
* Reuse BaseManager and Resource from oslo
* Sync base and exceptions from oslo
* Allow the environment file to be specified via URL
* Use jsonutils from oslo incubator
* Updates tox.ini to use new features
* Add support for resource_types
* Updated from global requirements
* Replace inheritance hierarchy with composition
* Deprecate mox in favor of mox3
* Change ID column of Event table to UUID

0.2.6
-----

* Add back --token-only for invocation compatibility
* Add --include-pass option for grizzly backwards compat
* Revert "Don't call credentials_headers() twice"
* Make tokens work with --os-no-client-auth
* test_shell test current not deprecated options
* Fix shell operation with --os-auth-token
* Don't call credentials_headers() twice
* Use fixtures for all shell environment variables
* Cleanup exc.verbose after tests
* Pass only tenant name or ID to keystoneclient
* use correct url on Windows platform
* Fix i18n error when resource-name is non-english
* Remove --token-only option, it does nothing
* Honor endpoint_type when requesting keystone for a token
* Revert "heatclient is not working with os-auth-token"
* Updated from global requirements
* Encode output for fixing UnicodeDecodeError
* Add a basic man page for heat
* Returning the json body after a stack-create or stack-update
* heatclient is not working with os-auth-token
* Add a top level introduction to the index
* Add a contibuting section to index.rst
* Remove the release notes as it is not maintained here
* Resync doc/source/conf.py from heat for consistency
* Add doc/Makefile to help with building docs
* Print a more correct error with event-show
* Fix the testname of scenario
* remove python 2.5 support for parse_sql
* align the order of parameters for urlencode()
* Replace urllib/urllib2 with urlutils
* Transform print statement to print function
* Use the six library for compatability
* Import urlutils from openstack common
* Updated from global requirements
* Import httplib from six.moves
* Replace mox with mox3
* Allow env registry paths to be relative to env file
* Updated from global requirements

0.2.5
-----

* Allow -P to be invoked multiple times
* Replace OpenStack LLC with OpenStack Foundation
* Add handler for heatclient.common.http
* Support --version for heatclient
* Stack instance identifier property
* Added support for running the tests under PyPy with tox
* Fix and enable Hacking H501 warning
* Be backward compatible after a renaming in API
* Rename event logical_resource_id to resource_name
* Add X-Region-Name parameter in HTTP request
* Apply OS_REGION_NAME for endpoint selection
* Do not obscure Unauthorized error messages
* Fix heat event list sorted order incorrect
* Updated from global requirements
* Generate a template from a resource

0.2.4
-----

* Remove unused Stack data method
* Do not paginate stack list unless page_size is set
* Custom Stack get method to avoid lookup redirects
* Fix Stack instance delete method
* Add mock as a test requirement
* Sync with global requirements
* Implement Stack status and action properties
* Parse error object (in json format) returned by heat-api
* Set credentials headers if there is no auth token
* Validate heat url is supplied for --os-no-client-auth

0.2.3
-----

* Cleanup in preperation for release
* Display yaml format for stack deployed via hot template
* Make the parameter checking consistent
* Rename README.md to README.rst
* Raise requirements to be in sync with OpenStack/Requirements
* Update upper bound of keystoneclient version
* Fix "heat validate" (add needed environment option)
* Only set X-Auth-User, X-Auth-Key on stack create/update
* Format resource required_by in resource-show
* Unit tests for pretty table special formatters
* Add support for suspend/resume actions
* Upload provider templates referenced in the environment
* Fix all but H302 hacking rules
* Fix all the pep8 E* and F* errors
* Fix various smaller pep8 issues
* flake8 ignore build directory
* Stop passing path to VerifiedHTTPSConnection
* Remove explicit distribute depend
* Include .testr.conf in source tarball
* Use Python 3.x compatible except: construct
* Fixes text split for parameters
* Add support for environment files
* Migrate to testr from nose
* Migrate test base classes to testtools
* Move tests into package dir
* Move requirements files to standard names
* Add CONTRIBUTING file
* Migrate to pbr
* Fix some "H" pep errors
* Migrate to flake8
* Cleaned up code in anticipation of flake8
* Restore compatibility with PrettyTable < 0.7.2

0.2.2
-----

* "heat stack-create" doesn't return the error message from server
* Display resource metadata as indented json
* Don't use human readable heading labels in tables
* Return the body as a string instead of an iterable
* Always pass username, even for --token-only
* Allow for prettytable 0.7.x as well
* Remove warlock from pip-requires as it is not used
* Change --disable-rollback option to --enable-rollback

0.2.1
-----

* Don't add 'dev' to tag_build

0.2.0
-----

* heatclient : Add --disable-rollback option
* heatclient : correct timeout parameter name
* Return the exit code from tox to callers of run_tests.sh
* Add switch to disable token authentication
* Don't log at all if debugging is not turned on
* Fixes required for packaging
* Relax the required version of prettytable
* Switch to using version.canonical_version_string
* Update to latest oslo-incubator
* Display a better error message on HTTP exception

0.1.0
-----

* Fix git repo url
* Deprecate commands and add unified cli replacements
* remove some glanceisms from the docs
* add some pypi meta info
* Update .gitreview for org move
* Support for events list and details
* Use python-keystoneclient 0.2 series
* Pass template as a string if it is not JSON
* Ignore heatclient/versioninfo
* Implement client resource support
* adding test coverage for common/http, improving the redirect handling
* Support name or id for stack operations
* Pass username and password as well as token
* Add .gitreview file
* pep8 and more tests
* - Comment out commands that don't yet have a REST API equivalent - Use Name/ID when specifying a stack
* Feature parity with REST API - Give a nice message for 404 for non-existent stack id - implement delete, gettemplate, validate - run do_list after create, delete - don't encode the json template as a json string
* set up default logging even when not debugging
* Allow sort column to be specified
* An error response shouldn't be logged as an error, since it is part of the REST API
* Implement describe, and format the results
* Allow pretty_dict to take optional formatters
* Shell unit tests, remove unused code, display real results from REST API
* Allow labels to be specified separately from field keys
* resolve test template file path no matter where it is run from
* Some slightly more realistic mock responses. Regexp asserts to check pretty print is printing something
* pass the dict to print_dict
* Properly configure debug logging
* Mock at the json request level instead of the http connection level. Test create
* setup tweaks
* Get fakes and mox working so that any http request/response sequence can be test scripted
* pyc files should not have been committed
* Format parameters for create call
* add some more non-functioning skeleton code
* fix readme path
* Swap readme files
* Define CLI commands and arguments for entire API
* initial version
* Initial import
* first commit
