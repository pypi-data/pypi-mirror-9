// Generated by CoffeeScript 1.8.0
(function() {
  angular.module('ajenti.plugins', ['core']);

}).call(this);

// Generated by CoffeeScript 1.8.0
(function() {
  angular.module('core').config(function($routeProvider) {
    return $routeProvider.when('/view/plugins', {
      templateUrl: '/plugins:resources/partial/index.html',
      controller: 'PluginsIndexController'
    });
  });

}).call(this);

// Generated by CoffeeScript 1.8.0
(function() {
  angular.module('ajenti.plugins').controller('PluginsIndexController', function($scope, $http, notify, pageTitle, messagebox, core) {
    pageTitle.set('Plugins');
    $scope.selectedInstalledPlugin = null;
    $scope.selectedRepoPlugin = null;
    $scope.coreUpgradeAvailable = null;
    $scope.refresh = function() {
      $http.get('/api/plugins/list/installed').success(function(data) {
        $scope.installedPlugins = data;
        return $http.get('/api/plugins/repo/list').success(function(data) {
          var x;
          $scope.repoList = data;
          return $scope.notInstalledRepoList = (function() {
            var _i, _len, _ref, _results;
            _ref = $scope.repoList;
            _results = [];
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              x = _ref[_i];
              if (!$scope.isInstalled(x)) {
                _results.push(x);
              }
            }
            return _results;
          })();
        }).error(function(err) {
          return notify.error('Could not load plugin repository', err.message);
        });
      }).error(function(err) {
        return notify.error('Could not installed plugin list', err.message);
      });
      $http.get('/api/plugins/pypi/list').success(function(data) {
        return $scope.pypiList = data;
      });
      return $http.get('/api/plugins/core/check-upgrade').success(function(data) {
        return $scope.coreUpgradeAvailable = data;
      });
    };
    $scope.refresh();
    $scope.upgradeCore = function() {
      var msg;
      msg = messagebox.show({
        progress: true,
        title: 'Upgrading'
      });
      return $http.get("/api/plugins/core/upgrade/" + $scope.coreUpgradeAvailable).success(function() {
        return messagebox.show({
          title: 'Done',
          text: 'Upgrade complete. A panel restart is absolutely required.',
          positive: 'Restart now'
        }).then(function() {
          return core.forceRestart();
        });
      }).error(function(err) {
        return notify.error('Upgrade failed', err.message);
      })["finally"](function() {
        return msg.close();
      });
    };
    $scope.isInstalled = function(plugin) {
      var p, _i, _len, _ref;
      if (!$scope.isInstalled) {
        return false;
      }
      _ref = $scope.installedPlugins;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        p = _ref[_i];
        if (p.name === plugin.name) {
          return true;
        }
      }
      return false;
    };
    $scope.getUpgrade = function(plugin) {
      var p, _i, _len, _ref;
      if (!$scope.repoList || !plugin) {
        return null;
      }
      _ref = $scope.repoList;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        p = _ref[_i];
        if (p.name === plugin.name && p.version !== plugin.version) {
          return p;
        }
      }
      return null;
    };
    $scope.installPlugin = function(plugin) {
      var msg;
      $scope.selectedRepoPlugin = null;
      $scope.selectedInstalledPlugin = null;
      msg = messagebox.show({
        progress: true,
        title: 'Installing'
      });
      return $http.get("/api/plugins/pypi/install/" + plugin.name + "/" + plugin.version).success(function() {
        $scope.refresh();
        return messagebox.show({
          title: 'Done',
          text: 'Installed. A panel restart is required.',
          positive: 'Restart now',
          negative: 'Later'
        }).then(function() {
          return core.forceRestart();
        });
      }).error(function(err) {
        return notify.error('Install failed', err.message);
      })["finally"](function() {
        return msg.close();
      });
    };
    $scope.uninstallPlugin = function(plugin) {
      var _ref;
      if ((_ref = plugin.name) === 'plugins' || _ref === 'settings') {
        return messagebox.show({
          title: 'Warning',
          text: 'This will remove the Plugins plugin. You can reinstall it later using PIP.',
          positive: 'Continue',
          negative: 'Cancel'
        }).then(function() {
          return doUninstallPlugin(plugin);
        });
      } else {
        return doUninstallPlugin(plugin);
      }
    };
    $scope.doUninstallPlugin = function(plugin) {
      $scope.selectedRepoPlugin = null;
      $scope.selectedInstalledPlugin = null;
      return messagebox.show({
        title: 'Uninstall',
        text: "Uninstall " + plugin.name + "?",
        positive: 'Uninstall',
        negative: 'Cancel'
      }).then(function() {
        var msg;
        msg = messagebox.show({
          progress: true,
          title: 'Uninstalling'
        });
        return $http.get("/api/plugins/pypi/uninstall/" + plugin.name).success(function() {
          $scope.refresh();
          return messagebox.show({
            title: 'Done',
            text: 'Uninstalled. A panel restart is required.',
            positive: 'Restart now',
            negative: 'Later'
          }).then(function() {
            return core.forceRestart();
          });
        }).error(function(err) {
          return notify.error('Uninstall failed', err.message);
        })["finally"](function() {
          return msg.close();
        });
      });
    };
    return $scope.restart = function() {
      return core.restart();
    };
  });

}).call(this);

