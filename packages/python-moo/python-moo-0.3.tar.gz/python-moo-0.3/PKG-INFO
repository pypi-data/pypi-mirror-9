Metadata-Version: 1.1
Name: python-moo
Version: 0.3
Summary: Easy way how to run the same query in multiple SQL databases
Home-page: https://github.com/idxxx23/moo
Author: GNU Knight
Author-email: idxxx23@gmail.com
License: UNKNOWN
Description: ==========================
        moo - agile descendant foo
        ==========================
        
        Return to the goals of foo (implemented)
        ========================================
        
        * SSH connector for execution remote Unix/Linux shell commands
        
        What is moo
        ===========
        
        * Easy way how to run the same query in multiple SQL databases
        * Python_ object created for accessing SQL databases (used internally SQLAlchemy_)
        * Simplification of the existing project called foo by using an agile approach to programming
        
        What is foo
        ===========
        
        * One of my first projects in Python_ (the best way how to learn programming in any language is, that you try to create something useful)
        * A project with big ambitions (to be universal interface between the database administrator and the rest of the world, foo has connectors to many SQL databases, connectors for SSH, FTP, etc.)
        * A project with a very low quality of source code
        * Still and probably never finished project
         
        Why the name moo
        ================
        
        * It is similar to foo, you need only change one letter
        * Mnemonically: results from the database are moo-ed you
        * It is my favorite Linux `Easter egg`_ ;)
        
        .. code:: shell
        
            root@work:~# apt-get moo
                             (__) 
                             (oo) 
                       /------\/ 
                      / |    ||   
                     *  /\---/\ 
                        ~~   ~~   
            ..."Have you mooed today?"...
        
        How to use moo.database
        =======================
        
        .. code:: python
        
            #!/usr/bin/env python3
        
            import moo.database
            execute = moo.database.execute(config='./examples/oracle.moo', script_directory='./examples/')
        
            execute('select host_name from v$instance')
            execute.script('hostname.sql') # or: execute(script='hostname.sql')
        
        How to use moo.ssh
        ==================
        
        .. code:: python
        
            #!/usr/bin/env python3
        
            import moo.ssh
            execute = moo.ssh.execute(config='./examples/ssh.moo', script_directory='./examples/')
        
            execute('df -h')
            execute.script('freespace.sh') # or: execute(script='freespace.sh')
        
        Any ideas are welcome
        
        idxxx23
        
        .. _Python: http://www.python.org/
        .. _SQLAlchemy: http://www.sqlalchemy.org/
        .. _Easter egg: http://en.wikipedia.org/wiki/Easter_egg_%28media%29
        
        Changelog
        =========
        
        0.3 (2015 Jan 16)
        
        * create 'moo' package
        * bugfix: new version of paramiko
        * add ssh connector
        
        0.2 (2014 May 27)
        
        * several attempts to resolve the crashes on encfs
        * add multiprocessing support
        
        0.1 (2014 Apr 17)
        
        * initial release ~> basic functionality
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: Topic :: Database
Classifier: Topic :: Software Development
Classifier: Topic :: System
