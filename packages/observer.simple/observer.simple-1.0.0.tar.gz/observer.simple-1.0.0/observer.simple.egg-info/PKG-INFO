Metadata-Version: 1.1
Name: observer.simple
Version: 1.0.0
Summary: A very simple implementation of the observer pattern
Home-page: http://github.com/cooper-software/observer
Author: Elisha Fitch-Cook
Author-email: elisha@cooper.com
License: MIT
Description: observer
        ==========
        
        |PyPI| |Build Status| |Coverage Status|
        
        A simple implementation of the observer pattern.
        
        .. code-block:: python
        
        	import observer
        	# Create a subject and list the events it might fire
        	foo = observer.Subject('bar', 'baz')
        
        	# Add a listener
        	def foo_bar_listener(*args):
        	   print("heard 'bar'", args)
        	   
        	foo('bar', foo_bar_listener)
        
        	# fire events
        	foo.fire('bar', 1, 2, 3)
        	# -> heard 'bar' (1, 2, 3)
        
        	# Trying to listen to an unregistered event throws an error
        	foo('snorble', lambda: None)
        	# -> AssertionError: snorble is not a valid event for this subject
        
        	# Same with trying to fire an unregistered event
        	foo.fire('snorble')
        	# -> AssertionError: snorble is not a valid event for this subject
        
        
        .. |PyPI| image:: https://pypip.in/version/observer/badge.svg?style=flat
           :target: https://pypi.python.org/pypi/observer/
        
        .. |Build Status| image:: https://travis-ci.org/cooper-software/observer.svg
           :target: https://travis-ci.org/cooper-software/observer
        
        .. |Coverage Status| image:: https://img.shields.io/coveralls/cooper-software/observer.svg
           :target: https://coveralls.io/r/cooper-software/observer
        
Keywords: events,patterns,observer
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Environment :: MacOS X
Classifier: Environment :: Web Environment
Classifier: Environment :: Win32 (MS Windows)
Classifier: Environment :: X11 Applications
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.4
