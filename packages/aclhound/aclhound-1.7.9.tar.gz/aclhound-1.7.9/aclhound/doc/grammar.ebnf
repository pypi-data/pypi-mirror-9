(*
This grammar defines the aclhound normalised syntax

1 rule per line

< allow | deny > \
< tcp | udp | any > \
src < prefix | $ip | @hostgroup | any > [ port number | range | @portgroup | any ]
dst < prefix | $ip | @hostgroup | any > [ port number | range | @portgroup | any ]
[ stateful ] \
[ expire 20140504 ] [ log ] \
[ # comment ]

< allow | deny > < icmp > < any | type <code|any> >
src < prefix | $ip | @hostgroup | any > 
dst < prefix | $ip | @hostgroup | any >
[ expire 20140504 ] [ log ] \
[ # comment ]


Valid examples:

    allow tcp src 10.0.0.0/8 port any dst 2.2.2.2 port 80 stateful # test
    deny tcp src 2.2.2.2 dst 2.2.2.2
    allow tcp src 2.2.2.2 dst 10.0.0.0/8 port 15-20 # allow port 15 upto port 20
    allow tcp src 2.2.2.2 dst 10.0.0.0/8 port 15- # allow port 15 upto 65535
    allow tcp src 2.2.2.2 dst 10.0.0.0/8 port -15 # allow upto port 15
    allow tcp src 2.2.2.2 dst 10.0.0.0/8 port 5-10 expire 20140504
    allow tcp src @mp-servers dst 10.0.0.0/8
    deny tcp src @bgp-peers port any dst @mp-servers port @webports # another comment
    allow tcp src 2.2.2.2 port 1 dst 10.0.0.0/8 port 2,1-2,4
    allow tcp src 2.2.2.2 port 1 dst 10.0.0.0/8 port 2,2,3,4
    allow icmp 128 0 src any dst 192.0.2.0/24 # icmpv6 echo request
    allow icmp 129 0 src 192.0.2.0/24 dst any # icmpv6 echo reply

*)

start
    =
    @:{rule}+
    $
    ;

options
    =
    state:state_expr
    | log:log_expr
    | expire:expire_expr
    | comment:comment_expr
    ;

optional_keywords =
    {>options}*
    ;

rule
    =
    action:action_expr ~ protocol:protocol_expr ~
    source:source_expr ~ destination:dst_expr ~ keywords:optional_keywords
    ;

state_expr
    =
    "stateful" ~
    ;

log_expr
    =
    "log" ~
    ;

expire_expr
    =
    "expire" @:date ~
    ;

date
    =
    ?/[0-9]{8}/?
    ;

action_expr
    =
    "allow" | "deny"
    ;

protocol_expr
    =
    @:"udp" ~
    | @:"tcp" ~
    | @:"any" ~
    | icmp:icmp_expr ~
    ;

icmp_expr
    =
    "icmp" @:icmp_term
    ;

icmp_term
    =
    @:"any" ~
    | icmp_type:number icmp_code:icmp_code
    | include:group_expr ~
    ;

icmp_number
    =
    number
    ;

icmp_code
    =
    icmp_number
    | "any"
    ;

comment_expr
    =
    "#" @:?/.*$/?
    ;

string
    =
    ?/[a-zA-Z0-9_-]+/?
    ;

STRING
    =
    string
    ;

address_string
    =
    ?/[a-fA-F0-9\.:\/]+/?
    ;

source_expr
    =
    "src" ~ @:endpoint_tuple
    ;

dst_expr
    =
    "dst" ~ @:endpoint_tuple
    ;

endpoint_tuple
    =
    l3:endpoint_expr l4:portgroup_expr ~
    ;

endpoint_list
    =
    @:{prefix}+
    $
    ;

endpoint_expr
    =
    ip+:"any"
    | ip+:prefix
    | include:group_expr
    ;

group_expr
    =
    "@" ~ @:string
    ;

portgroup_expr
    =
    [ "port" @:port_term ]
    ;

port_term
    =
    ports+:"any" ~
    | include:group_expr ~
    | ports:{port_atoms} ~
    ;

port_atoms
    =
    @+:port_expr { "," @+:port_expr}* ~
    ;

port_expr
    =
    range:port_range ~
    | single:port_number ~
    ;

port_range
    =
    @:NUMBER "-" @:NUMBER ~
    | @:"-" @:NUMBER ~
    | @:NUMBER @:"-" ~
    ;

port_number
    =
    NUMBER ~
    ;

number
    =
    NUMBER ~
    ;

prefix
    =
    address_string ~
    ;

NUMBER
    =
    ?/[0-9]+/?
    ;


