Metadata-Version: 1.1
Name: fortran-magic
Version: 0.5
Summary: An extension for IPython that help to use Fortran in your interactive session.
Home-page: https://github.com/mgaitan/fortran_magic
Author: Martin Gaitan
Author-email: gaitan@gmail.com
License: BSD
Description: =============
        Fortran magic
        =============
        
        .. image:: https://pypip.in/v/fortran-magic/badge.png
           :target: https://pypi.python.org/pypi/fortran-magic
           :alt: Latest PyPI version
        
        .. image:: https://pypip.in/d/fortran-magic/badge.png
           :target: https://pypi.python.org/pypi/fortran-magic
           :alt: Number of PyPI downloads
         
        
        Compile and import symbols from a cell with Fortran code, using f2py.
        
        The contents of the cell are written to a `.f90` file in the
        directory `IPYTHONDIR/fortran` using a filename with the hash of the
        code. This file is then compiled. The resulting module
        is imported and all of its symbols are injected into the user's
        namespace.
        
        
        :author: Martín Gaitán <gaitan@gmail.com>
        :homepage: https://github.com/mgaitan/fortran_magic
        :documentation: see `this notebook`__
        
        __ documentation_
        .. _documentation:  http://nbviewer.ipython.org/urls/raw.github.com/mgaitan/fortran_magic/master/documentation.ipynb
        
        
        Install
        =======
        
        You can install or upgrade via pip
        
            pip install -U fortran-magic
        
        or directly from the repository using the `%install_ext` magic command::
        
            In[1]: %install_ext https://raw.github.com/mgaitan/fortran_magic/master/fortranmagic.py
        
        
        Basic usage
        ===========
        
        Once it's installed, you can load it with `%load_ext fortranmagic`. Then put your Fortran code in a cell started with the cell magic `%%fortran``.
        For example::
        
            In[2]: %load_ext fortranmagic
        
        
            In[3]: %%fortran
        
                   subroutine f1(x, y, z)
                        real, intent(in) :: x,y
                        real, intent(out) :: z
        
                        z = sin(x+y)
        
                   end subroutine f1
        
        
        Every symbol is automatically imported. So `f1` is already available::
        
            In[4]:  f1(1.0, 2.1415)
            Out[4]: 9.26574066397734e-05
        
        
        See the documentation_ for details.
        
        
        
        Changelog
        =========
        
        0.5 / 2015-01-21
        ----------------
        
        - Call f2py via subprocess. It fixes problems finding fortran compilers under Windows. (Thanks to `David Powell`_ )
        
        .. _David Powell: https://github.com/DavidPowell
        
        0.4.3 / 2013-12-09
        -------------------
        
        - Fix two python3.2+ incompatibilities (Thanks `Ramon Crehuet`_ for the report)
        
        .. _Ramon Crehuet: https://github.com/rcrehuet
        
        0.4.2 / 2013-10-08
        ------------------
        
        - Implement the ``--extra`` option (Thanks to `Denis Vasilyev`_ for the help)
        - Include ``%%fortran``'s args in the hashing, so the same cell are
          recompiled with the same code but different arguments
        
        .. _Denis Vasilyev: https://github.com/Vutshi
        
        0.3 / 2013-10-03
        ------------------
        
        - Added ``%fortran_config`` to set and persist default arguments
          for ``%%fortran``
        - Improve documentation
        
        0.2.1 / 2013-09-24
        ------------------
        
        - Packaged and registered in pypi
        - Starting a version's changelog
        
        0.2 / 2013-09-19
        ----------------
        
        - Fortran highlighting in a ``%%fortran`` cell
        - Works (or it should) in any platform (linux/windows/osx)
          and with py3 (thanks to `Bradley Froehle`_)
        - Many f2py's arguments exposed as magic arguments
        - Verbosity handling
        - Improved documentation
        
        .. _Bradley Froehle: https://github.com/bfroehle
        
        0.1 / 2013-09-08
        ----------------
        
        - First public release
Keywords: ipython notebook fortran f2py science
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Framework :: IPython
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Fortran
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Scientific/Engineering
