Metadata-Version: 1.1
Name: django-tidings
Version: 1.0
Summary: Framework for asynchronous email notifications from Django
Home-page: http://github.com/erikrose/django-tidings
Author: Erik Rose
Author-email: erik@mozilla.com
License: BSD
Description: ==============
        django-tidings
        ==============
        
        django-tidings is a framework for sending email notifications to users who have
        registered interest in certain events, such as the modification of some model
        object. Used by support.mozilla.com, it is optimized for large-scale
        installations. Its features include...
        
        * Asynchronous operation using the ``celery`` task queue
        * De-duplication of notifications
        * Association of subscriptions with either registered Django users or anonymous
          email addresses
        * Optional confirmation of anonymous subscriptions
        * Hook points for customizing any page drawn and any email sent
        
        Please see the full documentation at http://packages.python.org/django-tidings/
        
        Version History
        ===============
        
        1.0 (2015-03-03)
          * Support Django 1.6.
          * Fix a bug in reconstituting models under (perhaps) Django 1.5.x and up.
          * Remove rate limit on ``claim_watches`` task.
          * Add tox to support testing against multiple Django versions.
        
        0.4
          * Fix a deprecated celery import path.
          * Add support for newer versions of Django, and drop support for older ones.
            We now support 1.4 and 1.5.
          * Add an initial South migration.
        
        .. warning::
        
          If you're already using South in your project, you need to run the following
          command to create a "fake" migration step in South's migration history::
        
              python path/to/manage.py migrate tidings --fake
        
        0.3
          * Support excluding multiple users when calling
            ``fire()``.
        
        0.2
          * API change: ``_mails()`` now receives,
            in each user/watch tuple, a list of ``Watch``
            objects rather than just a single one. This enables you to list all
            relevant watches in your emails or to make decisions from an
            ``EventUnion``'s ``_mails()`` method based on
            what kind of events the user was subscribed to.
          * Expose a few attribute docs to Sphinx.
        
        0.1
          * Initial release. In production on support.mozilla.com. API may change.
        
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Communications :: Email
Classifier: Topic :: Software Development :: Libraries :: Python Modules
