Metadata-Version: 1.1
Name: Marnadi
Version: 0.2.5
Summary: Yet another WSGI web framework
Home-page: https://github.com/renskiy/marnadi
Author: Rinat Khabibiev
Author-email: srenskiy@gmail.com
License: MIT
Description: marnadi
        =======
        
        Yet another WSGI Web Framework, the simplest and fastest ever written.
        
        Has no dependencies. Works both with **Python 2** and **Python 3**.
        
        Features
        --------
        * Support both of functional and object-oriented programming styles
        * Dynamic routes, e.g. "/path/{param}/"
        * Headers, query, data, cookies descriptors
        * Rich extending abilities
        
        Installation
        ------------
        Simply execute following line::
        
            pip install marnadi
        
        "Hello World"
        -------------
        Run this script and open http://localhost:8000 on your browser:
        
        .. code-block:: python
        
            from marnadi.wsgi import App
            from marnadi import Response
            
            application = App()
            
            
            @application.route('/')
            @Response.provider
            def hello():
                return "Hello World"
            
            if __name__ == '__main__':
                from wsgiref.simple_server import make_server
                make_server('', 8000, application).serve_forever()
        
        More complex example
        --------------------
        Script below will respond to http://localhost:8000/foo/bar/ and http://localhost:8000/foo/ requests:
        
        .. code-block:: python
        
            import re
            from marnadi.wsgi import App
            from marnadi import Response, Route
            
            
            class MyResponse(Response):
            
                # HTTP GET request handler
                def get(self, foo, bar=None):
                    return 'foo is {foo}, bar is {bar}'.format(foo=foo, bar=bar)
            
            routes=(
                Route('/{foo}'), (
                    Route('/', MyResponse),
                    Route('/{bar}/', MyResponse),
                )),
            )
            
            application = App(routes=routes)
            
            if __name__ == '__main__':
                from wsgiref.simple_server import make_server
                make_server('', 8000, application).serve_forever()
        
Keywords: WSGI,HTTP,REST
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Environment :: Web Environment
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Internet :: WWW/HTTP :: WSGI
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Topic :: Software Development :: Libraries :: Python Modules
