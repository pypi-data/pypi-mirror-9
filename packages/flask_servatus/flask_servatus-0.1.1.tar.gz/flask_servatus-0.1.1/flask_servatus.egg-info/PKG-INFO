Metadata-Version: 1.1
Name: flask-servatus
Version: 0.1.1
Summary: A port of djangos storages framework for use with flask applications
Home-page: https://github.com/mikeywaites/Flask-Servatus
Author: Mikey Waites, Jack Saunders
Author-email: mikey.waites@gmail.com
License: UNKNOWN
Download-URL: https://github.com/mikeywaites/Flask-Servatus/releases/tag/0.1.1
Description: Quickstart
        ==========
        
        .. include:: header.rst
        
        
        **1** :ref:`Install Flask-Servatus <installation>` via pip
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        .. sourcecode:: shell
        
            $ pip install Flask-Servatus
        
        
        **2** :ref:`Initialise <initialise>` and :ref:`configure <configuration>` the ``Servatus`` application object
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        .. sourcecode:: python
        
            from flask import Flask
            from flask.ext.servatus import Servatus
        
            app = Flask(__name__)
            servatus = Servatus(app)
        
            #.init_app() interface is also availble..
        
            def factory(arg, arg2):
        
                app = Flask(__name__)
                servatus = Servatus()
                servatus.init_app(app)
        
                return app
        
        
        
        **3** Use your prefered :ref:`storages <storages>` object to save files.
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        .. sourcecode:: python
        
            from flask import Flask
            from flask.ext.servatus import Servatus
            from flask.ext.servatus.files import ContentFile
            from flask.ext.servatus.storages import get_default_storage
        
            app = Flask(__name__)
            servatus = Servatus(app)
        
            storage = get_default_storage()
        
            @app.route('/uploads', methods=['GET', 'POST'])
            def handle_upload():
                # handle uploaded file from user subitted form..
        
                storage.save('foo.txt', request.files['file'])
        
        
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
