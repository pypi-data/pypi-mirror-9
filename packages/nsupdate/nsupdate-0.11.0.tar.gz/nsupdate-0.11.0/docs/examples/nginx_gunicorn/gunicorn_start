#!/bin/bash

export MPLCONFIGDIR="/srv/nsupdate/run/"
 
NAME="nsupdate.info"                               # Name of the application
DJANGODIR=/srv/nsupdate/nsupdate/nsupdate          # Django project directory
SOCKFILE=/srv/nsupdate/run/gunicorn.sock           # communication socket
PIDFILE=/srv/nsupdate/run/gunicorn.pid
USER=www-data                                      # the user to run as
GROUP=www-data                                     # the group to run as
NUM_WORKERS=1                                      # how many worker processes should Gunicorn spawn
                                                   # note: use 1 for sqlite database, more for postgres
DJANGO_SETTINGS_MODULE=local_settings              # which settings file should Django use
DJANGO_WSGI_MODULE=nsupdate.wsgi                   # WSGI module name
 
echo "Starting $NAME"
 
# Activate the virtual environment
cd $DJANGODIR
source /srv/nsupdate/bin/activate
export DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE
export PYTHONPATH=$DJANGODIR:$PYTHONPATH
 
# Create the run directory if it doesn't exist
RUNDIR=$(dirname $SOCKFILE)
test -d $RUNDIR || mkdir -p $RUNDIR
 
# Start your Django Unicorn
# Programs meant to be run under supervisor should not daemonize themselves (do not use --daemon)
exec /srv/nsupdate/bin/gunicorn ${DJANGO_WSGI_MODULE}:application \
  --name $NAME \
  --workers $NUM_WORKERS \
  --user=$USER --group=$GROUP \
  --log-level=debug \
  --bind=unix:$SOCKFILE \
  --pid $PIDFILE

