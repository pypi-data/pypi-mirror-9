Metadata-Version: 1.1
Name: python-ironicclient
Version: 0.5.1
Summary: OpenStack Bare Metal Provisioning API Client Library
Home-page: http://www.openstack.org/
Author: OpenStack
Author-email: openstack-dev@lists.openstack.org
License: UNKNOWN
Description: Python bindings for the Ironic API
        ==================================
        
        This is a client for the OpenStack `Ironic
        <https://wiki.openstack.org/wiki/Ironic>`_ API. It provides a Python API (the
        ``ironicclient`` module) and a command-line interface (``ironic``).
        
        Development takes place via the usual OpenStack processes as outlined in the
        `developer guide <http://docs.openstack.org/infra/manual/developers.html>`_. The master
        repository is on `git.openstack.org
        <https://git.openstack.org/cgit/openstack/python-ironicclient>`_.
        
        ``python-ironicclient`` is licensed under the Apache License like the rest
        of OpenStack.
        
        
        .. contents:: Contents:
           :local:
        
        Python API
        ----------
        
        Quick-start Example::
            >>> from ironicclient import client
            >>>
            >>> kwargs = {'os_auth_token': '3bcc3d3a03f44e3d8377f9247b0ad155'
            >>>           'ironic_url': 'http://ironic.example.org:6385/'}
            >>> ironic = client.get_client(1, **kwargs)
        
        
        Command-line API
        ----------------
        
        This package will install the ``ironic`` command line interface that you
        can use to interact with the ``ironic`` API.
        
        In order to use the ``ironic`` CLI you'll need to provide your OpenStack
        tenant, username, password and authentication endpoint. You can do this with
        the ``--os-tenant-name``, ``--os-username``, ``--os-password`` and
        ``--os-auth-url`` parameters, though it may be easier to set them
        as environment variables::
        
            export OS_TENANT_NAME=project
            export OS_USERNAME=user
            export OS_PASSWORD=pass
            export OS_AUTH_URL=http://auth.example.com:5000/v2.0
        
        To use a specific Ironic API endpoint::
        
            export IRONIC_URL=http://ironic.example.com:6385
        
        An example of how to create a basic node with the pxe_ipmitool driver::
        
            ironic node-create -d pxe_ipmitool
        
        An example of creating a port on a node::
        
            ironic port-create -a AA:BB:CC:DD:EE:FF -n nodeUUID
        
        An example of updating driver properties for a node::
        
            ironic node-update nodeUUID add driver_info/ipmi_address=<IPaddress>
            ironic node-update nodeUUID add driver_info/ipmi_username=<username>
            ironic node-update nodeUUID add driver_info/ipmi_password=<password>
        
        
        For more information about the ``ironic`` command and the subcommands
        available, run::
        
            ironic help
        
        For more information, see:
        
            `<http://docs.openstack.org/developer/python-ironicclient/>`_.
        
        Change logs with information about specific versions (or tags) are
        available at:
        
            `<http://git.openstack.org/cgit/openstack/python-ironicclient/>`_.
        
        
Platform: UNKNOWN
Classifier: Environment :: OpenStack
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
