Metadata-Version: 1.1
Name: pi-sht1x
Version: 1.0.3
Summary: Python 3 library for Sensirion SHT1x series of temperature & humidity sensors for the Raspberry Pi.
Home-page: https://bitbucket.org/drohm/pi-sht1x
Author: Doug Rohm
Author-email: pypi@drohm.sent.com
License: MIT
Description: # pi-sht1x #
        ------------
        
        The pi-sht1x package is a Python 3 library used to communicate and
        control the Sensirion SHT1x series of temperature and humidity sensors.
        It was designed to be used primarily with the Raspberry Pi and depends
        on the `RPi.GPIO <http://pypi.python.org/pypi/RPi.GPIO>`_ library.
        
        SHT1x (including SHT10, SHT11 and SHT15) is Sensirion’s family of
        surface mountable relative humidity and temperature sensors. The sensors
        integrate sensor elements plus signal processing on a tiny foot print
        and provide a fully calibrated digital output. A unique capacitive
        sensor element is used for measuring relative humidity while temperature
        is measured by a band-gap sensor.
        
        The package was tested using the Raspberry Pi B+ and Raspberry Pi 2.
        There shouldn't be issues running this on the older models, but no
        guarantees. If you do run into any problems, please let me know or
        create an
        `issue <https://bitbucket.org/drohm/pi-sht1x/issues?status=new&status=open>`_
        on the Bitbucket project page:
        
        ::
        
            https://bitbucket.org/drohm/pi-sht1x
        
        The data sheet for the SHT1x series of sensors can be found here:
        
        ::
        
            http://bit.ly/1Pafs6j
        
        This library provides the following functionality:
        
        -  Taking temperature measurements
        -  Taking humidity measurements
        -  Make dew point calculations
        -  Change the supplied voltage (5V, 4V, 3.5V, 3V, 2.5V)
        -  Enable or disable CRC checking
        -  Reading the Status Register
        -  Writing to the Status Register, provides the following functionality:
        
           -  Turn ``otp_no_reload`` on (will save about 10ms per measurement)
           -  Turn on the internal heater element (for functionality analysis,
              refer to the data sheet list above for more information)
           -  Change the resolution of measurements, High (14-bit temperature
              and 12-bit humidity) or Low (12-bit temperature and 8-bit
              humidity)
        
        +------------+
        | ##         |
        | Installati |
        | on         |
        | ##         |
        | Installati |
        | on         |
        | is pretty  |
        | simple:    |
        +------------+
        | pip3       |
        | install    |
        | pi-sht1x   |
        +------------+
        | > Note     |
        | that to    |
        | install    |
        | packages   |
        | into the   |
        | system-wid |
        | e          |
        | PATH and   |
        | site-packa |
        | ges,       |
        | elevated   |
        | privileges |
        | are often  |
        | required   |
        | (sudo).    |
        | Use        |
        | ``install  |
        | –user``    |
        | or         |
        | `virtualen |
        | v <https:/ |
        | /pypi.pyth |
        | on.org/pyp |
        | i/virtuale |
        | nv>`_      |
        | to do      |
        | unprivileg |
        | ed         |
        | installs.  |
        +------------+
        | ## Usage   |
        | ## When    |
        | instantiat |
        | ing        |
        | a SHT1x    |
        | object,    |
        | the        |
        | following  |
        | default    |
        | values are |
        | used if    |
        | not        |
        | specified: |
        +------------+
        | gpio\_mode |
        | :          |
        | GPIO.BOARD |
        | vdd: 3.5V  |
        | resolution |
        | :          |
        | High       |
        | (14-bit    |
        | temperatur |
        | e          |
        | & 12-bit   |
        | humidity)  |
        | heater:    |
        | False      |
        | otp\_no\_r |
        | eload:     |
        | False      |
        | crc\_check |
        | :          |
        | True       |
        +------------+
        | ###        |
        | Command    |
        | Line ###   |
        | You can    |
        | invoke the |
        | SHT1x      |
        | class      |
        | directly   |
        | from the   |
        | REPL. In   |
        | order to   |
        | use the    |
        | library    |
        | you need   |
        | to import  |
        | the        |
        | package:   |
        +------------+
        | from       |
        | pi\_sht1x  |
        | import     |
        | SHT1x      |
        +------------+
        | Now you    |
        | can create |
        | the sensor |
        | object and |
        | take       |
        | measuremen |
        | ts:        |
        +------------+
        | with       |
        | SHT1x(18,  |
        | 23,        |
        | gpio\_mode |
        | =GPIO.BCM) |
        | as sensor: |
        | temp =     |
        | sensor.rea |
        | d\_tempera |
        | ture()     |
        | humidity = |
        | sensor.rea |
        | d\_humidit |
        | y(temp)    |
        | sensor.cal |
        | culate\_de |
        | w\_point(t |
        | emp,       |
        | humidity)  |
        | print(sens |
        | or)        |
        +------------+
        | This will  |
        | create the |
        | SHT1x      |
        | object     |
        | using      |
        | ``data_pin |
        | =18``,     |
        | ``sck_pin= |
        | 23``,      |
        | ``gpio_mod |
        | e=GPIO.BCM |
        | ``,        |
        | and        |
        | default    |
        | values for |
        | ``vdd``    |
        | (3.5V),    |
        | ``resoluti |
        | on``       |
        | (High),    |
        | ``heater`` |
        | (False),   |
        | ``otp_no_r |
        | eload``    |
        | (False),   |
        | and        |
        | ``crc_chec |
        | k``        |
        | (True).    |
        +------------+
        | The output |
        | will look  |
        | something  |
        | like this: |
        +------------+
        | Temperatur |
        | e:         |
        | 24.05\ *C  |
        | [75.25*\ F |
        | ]          |
        | Humidity:  |
        | 22.80% Dew |
        | Point:     |
        | 1.38\*C    |
        +------------+
        | > Note     |
        | that this  |
        | library    |
        | should be  |
        | used with  |
        | a context  |
        | manager    |
        | like the   |
        | ``with``   |
        | statement. |
        | Using it   |
        | with a     |
        | context    |
        | manager    |
        | will allow |
        | the        |
        | program to |
        | properly   |
        | clean up   |
        | after      |
        | itself and |
        | reset the  |
        | GPIO pins  |
        | back to    |
        | default    |
        | states. >  |
        | ###        |
        | examples.p |
        | y          |
        | ### This   |
        | script,    |
        | located in |
        | the        |
        | examples   |
        | folder,    |
        | includes   |
        | several    |
        | ways to    |
        | use the    |
        | SHT1x      |
        | class to   |
        | take       |
        | temperatur |
        | e,         |
        | humidity,  |
        | and dew    |
        | point      |
        | measuremen |
        | ts.        |
        | In order   |
        | to use the |
        | script, be |
        | sure to    |
        | update the |
        | ``DATA_PIN |
        | ``         |
        | and        |
        | ``SCK_PIN` |
        | `          |
        | constants  |
        | near the   |
        | top of the |
        | file with  |
        | the pin    |
        | numbers    |
        | you're     |
        | using      |
        | locally in |
        | your       |
        | setup:     |
        +------------+
        | DATA\_PIN  |
        | = 18       |
        | SCK\_PIN = |
        | 23         |
        +------------+
        | Based on   |
        | the data   |
        | sheet, the |
        | recommende |
        | d          |
        | voltage    |
        | for the    |
        | SHT1x      |
        | sensor is  |
        | 3.3V.      |
        | Based on   |
        | that the   |
        | default    |
        | voltage,   |
        | if not     |
        | specified, |
        | is 3.5V.   |
        | If you're  |
        | using 5V   |
        | to power   |
        | the        |
        | sensor, be |
        | sure to    |
        | set that   |
        | value when |
        | creating   |
        | the        |
        | object. To |
        | run the    |
        | script:    |
        +------------+
        | sudo       |
        | python3    |
        | examples/e |
        | xamples.py |
        +------------+
        | Running    |
        | the script |
        | exercises  |
        | all of the |
        | functional |
        | ity        |
        | for the    |
        | sensor. Be |
        | sure to    |
        | look       |
        | through    |
        | the script |
        | to see     |
        | what you   |
        | can do and |
        | how to     |
        | customize  |
        | using the  |
        | sensor.    |
        | Sample     |
        | output:    |
        +------------+
        | $ sudo     |
        | python3    |
        | examples/e |
        | xamples.py |
        | Test:      |
        | using      |
        | default    |
        | values:    |
        | 3.5V, High |
        | resolution |
        | ,          |
        | no heater, |
        | otp\_no\_r |
        | eload      |
        | off, CRC   |
        | checking   |
        | enabled... |
        | Temperatur |
        | e:         |
        | 24.49\ *C  |
        | [76.04*\ F |
        | ]          |
        | Humidity:  |
        | 20.68% Dew |
        | Point:     |
        | 0.47\*C    |
        +------------+
        | Temperatur |
        | e:         |
        | 24.48\ *C  |
        | [76.02*\ F |
        | ]          |
        | Humidity:  |
        | 20.68% Dew |
        | Point:     |
        | 0.46\*C    |
        +------------+
        | Temperatur |
        | e:         |
        | 24.47\ *C  |
        | [76.01*\ F |
        | ]          |
        | Humidity:  |
        | 20.68% Dew |
        | Point:     |
        | 0.45\*C    |
        +------------+
        | Temperatur |
        | e:         |
        | 24.51\ *C  |
        | [76.06*\ F |
        | ]          |
        | Humidity:  |
        | 20.68% Dew |
        | Point:     |
        | 0.47\*C    |
        +------------+
        | Temperatur |
        | e:         |
        | 24.51\ *C  |
        | [76.06*\ F |
        | ]          |
        | Humidity:  |
        | 20.68% Dew |
        | Point:     |
        | 0.47\*C    |
        | Test       |
        | complete.  |
        +------------+
        | Test:      |
        | reading    |
        | all        |
        | measuremen |
        | ts         |
        | using      |
        | GPIO.BCM   |
        | mode, 3V,  |
        | High       |
        | resolution |
        | ,          |
        | heater     |
        | off,       |
        | otp\_no\_r |
        | eload      |
        | off, and   |
        | CRC check  |
        | on.        |
        | Temperatur |
        | e:         |
        | 24.48\ *C  |
        | [76.02*\ F |
        | ]          |
        | Humidity:  |
        | 20.61% Dew |
        | Point:     |
        | 0.42\*C    |
        +------------+
        | Temperatur |
        | e:         |
        | 24.46\ *C  |
        | [75.98*\ F |
        | ]          |
        | Humidity:  |
        | 20.61% Dew |
        | Point:     |
        | 0.40\*C    |
        +------------+
        | Temperatur |
        | e:         |
        | 24.46\ *C  |
        | [75.98*\ F |
        | ]          |
        | Humidity:  |
        | 20.61% Dew |
        | Point:     |
        | 0.40\*C    |
        +------------+
        | Temperatur |
        | e:         |
        | 24.48\ *C  |
        | [76.02*\ F |
        | ]          |
        | Humidity:  |
        | 20.68% Dew |
        | Point:     |
        | 0.46\*C    |
        +------------+
        | Temperatur |
        | e:         |
        | 24.48\ *C  |
        | [76.02*\ F |
        | ]          |
        | Humidity:  |
        | 20.65% Dew |
        | Point:     |
        | 0.44\*C    |
        | Test       |
        | complete.  |
        | . . .      |
        +------------+
        | > The      |
        | `RPi.GPIO  |
        | <http://py |
        | pi.python. |
        | org/pypi/R |
        | Pi.GPIO>`_ |
        | module     |
        | requires   |
        | root       |
        | privileges |
        | in order   |
        | to         |
        | communicat |
        | e          |
        | with the   |
        | GPIO pins  |
        | on the     |
        | Raspberry  |
        | Pi so you  |
        | need to    |
        | run your   |
        | scripts as |
        | root       |
        | (sudo).    |
        +------------+
        | ###        |
        | sensor.py  |
        | ### This   |
        | script is  |
        | callable   |
        | from the   |
        | terminal   |
        | and the    |
        | sensor     |
        | parameters |
        | are passed |
        | into the   |
        | script.    |
        +------------+
        | sudo       |
        | python3    |
        | sensor.py  |
        | 18 23 -g   |
        | 'BCM'      |
        +------------+
        | This       |
        | executes   |
        | the sensor |
        | script     |
        | using      |
        | ``data_pin |
        | =18``,     |
        | ``sck_pin= |
        | 23``,      |
        | and        |
        | ``gpio_mod |
        | e=GPIO.BCM |
        | ``.        |
        | The script |
        | will then  |
        | create an  |
        | instance   |
        | of the     |
        | SHT1x      |
        | class and  |
        | read in    |
        | the        |
        | temperatur |
        | e,         |
        | humidity,  |
        | and        |
        | calculate  |
        | the dew    |
        | point five |
        | times,     |
        | sleeping 2 |
        | seconds in |
        | between    |
        | each       |
        | measuremen |
        | t.         |
        | The output |
        | will looks |
        | something  |
        | like this: |
        +------------+
        | $ sudo     |
        | python3    |
        | examples/s |
        | ensor.py   |
        | 18 23 -g   |
        | 'BCM'      |
        | Temperatur |
        | e:         |
        | 24.05\ *C  |
        | [75.25*\ F |
        | ]          |
        | Humidity:  |
        | 22.79% Dew |
        | Point:     |
        | 1.37\*C    |
        +------------+
        | Temperatur |
        | e:         |
        | 24.03\ *C  |
        | [75.21*\ F |
        | ]          |
        | Humidity:  |
        | 22.79% Dew |
        | Point:     |
        | 1.36\*C    |
        +------------+
        | Temperatur |
        | e:         |
        | 24.01\ *C  |
        | [75.16*\ F |
        | ]          |
        | Humidity:  |
        | 22.79% Dew |
        | Point:     |
        | 1.33\*C    |
        +------------+
        | Temperatur |
        | e:         |
        | 24.01\ *C  |
        | [75.17*\ F |
        | ]          |
        | Humidity:  |
        | 22.86% Dew |
        | Point:     |
        | 1.38\*C    |
        +------------+
        | Temperatur |
        | e:         |
        | 24.02\ *C  |
        | [75.19*\ F |
        | ]          |
        | Humidity:  |
        | 22.86% Dew |
        | Point:     |
        | 1.39\*C    |
        +------------+
        | To get a   |
        | listing of |
        | all the    |
        | parameters |
        | you can    |
        | provide to |
        | the        |
        | script,    |
        | use        |
        | ``python3  |
        | sensor.py  |
        | -h``       |
        | for help:  |
        +------------+
        | $ sudo     |
        | python3    |
        | examples/s |
        | ensor.py   |
        | -h usage:  |
        | sensor.py  |
        | [-h] [-g   |
        | {BCM,BOARD |
        | }]         |
        | [-v        |
        | {5V,4V,3.5 |
        | V,3V,2.5V} |
        | ]          |
        | [-r        |
        | {HIGH,LOW} |
        | ]          |
        | [-e] [-o]  |
        | [-c]       |
        | data-pin   |
        | sck-pin    |
        +------------+
        | Reads the  |
        | temperatur |
        | e          |
        | and        |
        | relative   |
        | humidity   |
        | from the   |
        | SHT1x      |
        | series of  |
        | sensors    |
        | using the  |
        | pi\_sht1x  |
        | library.   |
        +------------+
        | positional |
        | arguments: |
        | data-pin   |
        | Data pin   |
        | used to    |
        | connect to |
        | the        |
        | sensor.    |
        | sck-pin    |
        | SCK pin    |
        | used to    |
        | connect to |
        | the        |
        | sensor.    |
        +------------+
        | optional   |
        | arguments: |
        | -h, --help |
        | show this  |
        | help       |
        | message    |
        | and exit   |
        | -g         |
        | {BCM,BOARD |
        | },         |
        | --gpio-mod |
        | e          |
        | {BCM,BOARD |
        | }          |
        | RPi.GPIO   |
        | mode used, |
        | either     |
        | GPIO.BOARD |
        | or         |
        | GPIO.BCM.  |
        | Defaults   |
        | to         |
        | GPIO.BCM.  |
        | -v         |
        | {5V,4V,3.5 |
        | V,3V,2.5V} |
        | ,          |
        | --vdd      |
        | {5V,4V,3.5 |
        | V,3V,2.5V} |
        | Voltage    |
        | used to    |
        | power the  |
        | sensor.    |
        | Defaults   |
        | to 3.5V.   |
        | -r         |
        | {HIGH,LOW} |
        | ,          |
        | --resoluti |
        | on         |
        | {HIGH,LOW} |
        | Resolution |
        | used by    |
        | the        |
        | sensor,    |
        | 14/12-bit  |
        | or         |
        | 12-8-bit.  |
        | Defaults   |
        | to High.   |
        | -e,        |
        | --heater   |
        | Used to    |
        | turn the   |
        | internal   |
        | heater on  |
        | (used for  |
        | calibratio |
        | n).        |
        | -o,        |
        | --otp-no-r |
        | eload      |
        | Used to    |
        | enable OTP |
        | no reload, |
        | will save  |
        | about 10ms |
        | per        |
        | measuremen |
        | t.         |
        | -c,        |
        | --no-crc-c |
        | heck       |
        | Performs   |
        | CRC        |
        | checking.  |
        +------------+
        
        Credits
        -------
        
        This module was done for fun and to learn how to communicate with serial
        devices using Python and the Raspberry Pi. I referred to the following
        projects from time to time when I hit a stumbling block (there were
        many...):
        
        -  `Jonathan Oxer <https://github.com/practicalarduino/SHT1x>`_
        -  `Luca Nobili <https://bitbucket.org/lunobili/rpisht1x>`_
        
        
Keywords: sht,sensor,sht1x,sensirion,T,temperature,humidity,RH,dew point,celsius,measurement,gpio,serial,2-wire,crc,crc-8hardware,driver,ic
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: End Users/Desktop
Classifier: Intended Audience :: Manufacturing
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: Home Automation
Classifier: Topic :: Scientific/Engineering :: Atmospheric Science
Classifier: Topic :: System :: Hardware :: Hardware Drivers
Classifier: Topic :: System :: Monitoring
Classifier: Topic :: System :: Operating System Kernels :: Linux
Classifier: Topic :: Software Development
Classifier: Topic :: Utilities
