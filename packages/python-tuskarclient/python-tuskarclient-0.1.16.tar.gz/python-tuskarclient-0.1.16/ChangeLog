CHANGES
=======

0.1.16
------

* Update documentation to match parameter rename
* Updated URLs to remove version string
* Rename Attributes to Parameters to match Tuskar API
* Trim down the output of plan-show to be more useful
* Strenghten tests in {Plan,Role}ManagerTest
* Replaces _create calls with _post in PlanManager
* Add Plan Role-Flavors manage methods
* Remove unused exc file
* Add Plan Scale manage methods
* Updated from global requirements
* Default service_type for endpoint lookup
* Rename command tuskar plan-patch to plan-update
* Fix invocation of _get()
* Increase test coverage
* Remove unneeded HTTPClient used by v1 API
* Migrate from the Manager in Tuskar common to oslo
* Remove marshal_association utility
* Removes openstack/common from test coverage report
* Reimplement print_dict and print_list formatters
* Updated from global requirements
* Remove Python 2.6 from the tox.ini
* Remove Python 2.6 support
* Remove unused methods
* Remove extra CLI formatters
* Remove the unneeded coverage omit for the tests
* Remove bindings for the unsupported V1 API
* Sync with oslo-incubator
* Remove unused strutils module
* Remove unused importutils module
* Workflow documentation is now in infra-manual
* Updated from global requirements
* Updated from global requirements
* Moves test_http.py under tests/common directory
* Updated from global requirements
* Removes legacy Exception for 300 HTTP status
* Add a --debug option
* Move utils arg/env to oslo cliutils
* Sync oslo-incubator
* Add --version option

0.1.15
------

* Updated from global requirements
* Enable gating on H405 and fix exiting violations
* Enable gating on H904 and fix existing violations
* Update the default version to use the new API

0.1.14
------

* Fix the homepage url in setup.cfg

0.1.13
------

* Docs for CLI usage with API version 2
* Updated from global requirements
* Stop using intersphinx
* Adds plan-templates command to CLI

0.1.12
------

* Adds Templates class and use it

0.1.11
------

* Adds plan-patch command to CLI
* Adds role-list command to CLI
* Adds plan-remove-role command to CLI
* Adds plan-add-role command to CLI
* Adds plan-create to CLI
* Adds plan-delete to CLI
* Adds plan-show command to CLI
* Adds plan-list command to CLI
* Work toward Python 3.4 support and testing

0.1.10
------

* Roles in Plan are now instances of Role class
* Adds binding for GET /v2/plans/:uuid/templates
* Fix for plan patch

0.1.9
-----

* Adds binding for GET /v2/roles
* Adds binding DELETE /v2/plans/:plan/roles/:role
* Adds binding for POST /v2/plans/:plan_uuid/roles
* Adds empty RoleManager to v2 client
* Adds binding for DELETE /v2/plans/:plan_uuid
* Adds binding for PATCH /v2/plans/:plan_uuid
* Implements _patch() method for Manager class
* Remove Python 2.4 compatability for all()
* Adds binding for POST /v2/plans endpoint
* Adds binding for GET /v2/plans endpoint
* Adds binding for GET /v2/plans/:plan_uuid endpoint
* Adds empty PlanManager to v2 client
* Adds empty client for version 2 of Tuskar API

0.1.8
-----

* Bump hacking to 0.9.x series

0.1.7
-----

* Pass the requests.Response object to from_response(

0.1.6
-----

* replaced e.message

0.1.5
-----

* Implement finding by name

0.1.4
-----

* Revert "Use HTTPClient from common apiclient code"
* Remove py3kcompat module

0.1.3
-----

* Changed role count assignment to use role name

0.1.2
-----

* Remove multivalue attributes and roles from CLI
* Removed unreachable code
* Add docstrings to the CLI actions
* Add CLI support for the template_parameters action
* Add trove classifiers for specific versions of Python
* Add API binding for the template_parameters action

0.1.1
-----

* Add initial Sphinx layout and documentation
* Use six.StringIO/BytesIO instead of StringIO.StringIO
* Using tox instead of tuskar_with_venv.sh script

0.1.0
-----

* Add CLI support for Overclouds and Overcloud Roles
* Update common apiclient from Oslo
* Remove tox locale overrides
* Add bindings for Overcloud Role API entrypoints
* Add bindings for overcloud API entrypoints
* Remove concepts that no longer exist in the API

0.0.8
-----

* Adds help for subcommands
* Use implicit dependencies of Hacking for pep8, pyflakes, flake8
* Corrected the project name in a comment
* Sync with global requirements
* Use HTTPClient from common apiclient code
* Adds default logging for tuskarclient.common.http

0.0.7
-----

* Use exceptions from common Oslo code
* Fixes in do_flavor_delete() method
* Use Resource() class from common Olso code
* Sync common client code from Oslo

0.0.6
-----

* Remove inheritance from HTTPClient in tuskarclient
* Set hacking version to match global requirements
* Do not use locals() for string formatting
* Use python 3.x compatible print function

0.0.5
-----

* Revert "Support building wheels (PEP-427

0.0.4
-----

* Support building wheels (PEP-427

0.0.3
-----

* Remove empty CLI source files
* Add bindings for overcloud entrypoints
* Fix handling of values obtained from Keystone

0.0.2
-----

* Fix response code 301 processing

0.0.1
-----

* Fixes bad StringIO call in common/http.py
* Racks CRUD commands
* Print functions take output file parameter
* Adds Flavor CRUD CLI commands
* Fix all python3 test failures
* Disable H302 check for importing modules only
* Add function to marshal resource associations
* Don't print stack trace when resource not found
* Use the python in the virtualenv for everything
* Remove pbr setup hook from setup.cfg
* Update .gitreview file following repository move
* Update 'stackforge' references to 'openstack'
* Remove coveralls
* Add python bindings for Nodes
* Remove d2to1 dependency
* Set default Tuskar port to 8585
* A few tweaks for readme
* Populates README file
* Advanced print formatting for CLI
* Adds tests for client module and refactors
* Adds test for tuskarclient/client._get_ksclient()
* Implement a rough CLI foundation
* Remove Travis and Coveralls badges from README.rst
* Adds py26 and py33 to tox.ini
* Makes code pep8 and hacking suitable
* Add .gitreview
* Adds tests for _get_endpoint in client submodule
* Changes tox.ini in favor of tox and envs
* Set default service type to 'management'
* Argument parsing and checking - allow token authentication
* Add a trigger for provisioning the data center
* Allow keystoneclient 0.3
* Flavors CRUD
* Adds update method to ResourceClassManager
* Racks create and update
* Adds delete method to ResourceClassManager
* Use _single_path in managers' get methods
* Rack delete
* Add _single_path method for single resources path
* Adds create method to ResourceClassManager
* Gitignore coverage temp files
* Rename v1_0 module to v1
* Python API v1 entrypoint
* Adds ResourceClass and ResourceClassManager (list, get)
* RackManager class
* Rack class
* Add _get function to base.Manager
* Adds tests for HTTPClient.raw_client
* Changes badges to tuskar owner
* Adds coveralls.io config
* Adds .coveragerc and modify tox.ini for coverage
* Add top level client wrapper module
* Add API client code from ceilometerclient
* Add exceptions from ceilometerclient
* Add keystoneclient dependency
* Add common utils
* Add importutils
* Changes url to TravisCI badge to jistr
* Adds TravisCI badge to README.rst
* Adds TravisCI config file
* Omits tests dir in coverage command in tox.ini
* Modifies envlist in tox.ini
* Updates .gitignore with coverage and *.egg
* Shortcut script for running the CLI in virtualenv
* Top level argument parser with auth info assertion
* Shell test stub
* Shell class stub
* Basic project structure
* Initial commit
