Metadata-Version: 1.1
Name: jose
Version: 0.2.2
Summary: An implementation of the JOSE draft
Home-page: https://github.com/Demonware/jose
Author: Demian Brecht
Author-email: dbrecht@demonware.net
License: UNKNOWN
Description: JOSE
        ====
        
        JOSE is a framework intended to provide a method to securely transfer
        claims (such as authorization information) between parties. The JOSE framework
        provides a collection of specifications to serve this purpose. A JSON Web
        Token (JWT) contains claims that can be used to allow a system to apply access
        control to resources it owns.
        
        JWTs can be represented as either JSON Web Signature (JWS) or a JSON Web
        Encryption (JWE) objects. Claims within a JWS can be read as they are simply
        base64-encoded (but carry with them a signature for authentication). Claims
        in a JWE on the other hand, are encrypted and as such, are entirely opaque
        to clients using them as their means of authentication and authorization.
        
        This library implements JWS and JWEs along with a subset of the
        encryption / authentication algorithms recommended by the JOSE framework.
        
        Documentation
        =============
        http://jose.readthedocs.org/en/latest
        
        Builds
        ======
        https://travis-ci.org/Demonware/jose
        
        
        CHANGES
        =======
        
        0.2.2 (2015-01-07)
        ------------------
        - RFC compliance fixes (patch contributed by jaimeperez)
        
        Important: This change introduces a temporarily injected key (__v) in order to
        distinguish between legacy and newly issued tokens. This allows for the use
        of either token as to not break backwards compatibility and (possibly)
        degrade user experience. This will be removed for v1.0.
        
        In order to verify whether or not clients are using a legacy token, the
        application code can verify whether or not the key "__v" is contained in the
        headers (this can be done after deserialize_compact). The existence of the key
        identifies a newly created token.
        
        0.2.1 (2014-11-24)
        ------------------
        - Unpinned pycrypto dependency (patch contributed by kuba)
        - Added CLI exposing "decrypt" command
        - Added custom exceptions, making client error handling easier
        
        0.1 (2014-04-16)
        ----------------
        - Initial release
        
        
        Contributors
        ============
        
        Demian Brecht (demianbrecht)
        Nick Murtagh (nmurtagh)
        Jakub Warmuz (kuba)
        Jaime PÃ©rez (jaimeperez)
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2 :: Only
Classifier: Topic :: Security
Classifier: Topic :: Software Development :: Libraries
