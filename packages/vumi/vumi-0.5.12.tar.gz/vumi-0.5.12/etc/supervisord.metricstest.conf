[unix_http_server]
file=./tmp/supervisor.sock   ; (the path to the socket file)

[inet_http_server]         ; inet (TCP) server disabled by default
port=localhost:7010        ; (ip_address:port specifier, *:port for all iface)

[supervisord]
logfile=./logs/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB       ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10          ; (num of main logfile rotation backups;default 10)
loglevel=info               ; (log level;default info; others: debug,warn,trace)
pidfile=./tmp/pids/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=false              ; (start in foreground if true;default false)
minfds=1024                 ; (min. avail startup file descriptors;default 1024)
minprocs=200                ; (min. avail process descriptors;default 200)

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=http://127.0.0.1:7010 ; use an http:// url to specify an inet socket

# Metric collection system:
# RandomMetricGenerator
# -> 2x MetricTimeBucket
# -> 3x MetricAggregators
# -> GraphiteMetricsCollector
# Time buckets are 5s large.

[program:metric_bucket]
numprocs=2
numprocs_start=1
process_name=%(program_name)s_%(process_num)s
command=twistd -n
    --pidfile=./tmp/pids/%(program_name)s_%(process_num)s.pid
    vumi_worker
    --worker-class=vumi.blinkenlights.MetricTimeBucket
    --set-option=buckets:3
    --set-option=bucket_size:5
    --vhost=/develop
stdout_logfile=./logs/%(program_name)s_%(process_num)s.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=10
stderr_logfile=./logs/%(program_name)s_%(process_num)s.err
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=10
autorestart=true

[program:metric_aggregators]
numprocs=3
# buckets start at zero
numprocs_start=0
process_name=%(program_name)s_%(process_num)s
command=twistd -n
    --pidfile=./tmp/pids/%(program_name)s_%(process_num)s.pid
    vumi_worker
    --worker-class=vumi.blinkenlights.MetricAggregator
    --set-option=bucket:%(process_num)s
    --set-option=bucket_size:5
    --vhost=/develop
stdout_logfile=./logs/%(program_name)s_%(process_num)s.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=10
stderr_logfile=./logs/%(program_name)s_%(process_num)s.err
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=10
autorestart=true

[program:metrics_collector]
numprocs=1
numprocs_start=1
process_name=%(program_name)s_%(process_num)s
command=twistd -n
    --pidfile=./tmp/pids/%(program_name)s_%(process_num)s.pid
    vumi_worker
    --worker_class=vumi.blinkenlights.GraphiteMetricsCollector
    --vhost=/develop
stdout_logfile=./logs/%(program_name)s_%(process_num)s.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=10
stderr_logfile=./logs/%(program_name)s_%(process_num)s.err
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=10
autorestart=true

[program:metrics_generator]
numprocs=1
numprocs_start=1
process_name=%(program_name)s_%(process_num)s
command=twistd -n
    --pidfile=./tmp/pids/%(program_name)s_%(process_num)s.pid
    vumi_worker
    --worker-class=vumi.blinkenlights.metrics_workers.RandomMetricsGenerator
    --vhost=/develop
stdout_logfile=./logs/%(program_name)s_%(process_num)s.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=10
stderr_logfile=./logs/%(program_name)s_%(process_num)s.err
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=10
autorestart=true

[program:graphite_carbon]
numprocs=1
numprocs_start=1
process_name=%(program_name)s_%(process_num)s
command=carbon-cache.py
    --config ./etc/carbon.metricstest.conf
    --debug
    start
stdout_logfile=./logs/%(program_name)s_%(process_num)s.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=10
stderr_logfile=./logs/%(program_name)s_%(process_num)s.err
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=10
autorestart=true
