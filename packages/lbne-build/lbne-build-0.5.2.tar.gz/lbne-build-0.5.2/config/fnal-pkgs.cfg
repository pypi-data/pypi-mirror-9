[group fnalgroup]
packages = fnalcore, fnalart, nutools, artdaqcore
build_cmd = make VERBOSE=1
ups_qualifiers = {ups_compiler_taint}


[package fnalcore]
version = {fnalcore_version}
environment = group:buildtools, group:compiler, group:externals
features = vcs, cmake, makemake, upsprod
depends = unpack:cmake_install,build:boost_install,build:sqlite_install
source_url = https://github.com/LBNE/FNALCore.git
# branch: master
vcs_tag = master
vcs_flavor = git
unpacked_target = README.md
prepare_cmd_options = -DBOOST_ROOT={boost_install_dir} -DCMAKE_C_COMPILER={gcc_install_dir}/bin/gcc -DCMAKE_CXX_COMPILER:STRING={gcc_install_dir}/bin/g++ -DCMAKE_INSTALL_LIBDIR=lib -DFNALCore_ENABLE_TESTING=ON -DSQLite3_INCLUDE_DIR={sqlite_install_dir}/include -DSQLite3_LIBRARY={sqlite_install_dir}/lib/libsqlite3.{soext} 
build_target = BuildProducts/lib/libFNALCore.{soext}
# needed for "make test"
buildenv_PATH = prepend:{install_dir}/bin
buildenv_LD_LIBRARY_PATH = prepend:{install_dir}/lib
#install_cmd = make install test
install_target = lib/libFNALCore.{soext}
buildenv_CMAKE_PREFIX_PATH = prepend:{install_dir}
buildenv_FHICL_FILE_PATH = prepend:../../sources/fnalcore-1.0.0-/FNALCore/messagefacility/test/Integration/


[package fnalart]
version = {fnalart_version}
environment = group:buildtools, group:compiler , group:externals
depends = prepare:fnalcore_install
features = vcs, cmake, makemake, upsprod
source_url = https://github.com/LBNE/fnal-art.git
# branch remove-ups-1.11.3
vcs_tag = remove-ups-1.11.3
vcs_flavor = git
unpacked_target = README.md
prepare_cmd_options = -DCMAKE_C_COMPILER={gcc_install_dir}/bin/gcc -DCMAKE_CXX_COMPILER:STRING={gcc_install_dir}/bin/g++ -DCMAKE_INSTALL_LIBDIR=lib -DSQLite3_INCLUDE_DIR={sqlite_install_dir}/include -DSQLite3_LIBRARY={sqlite_install_dir}/lib/libsqlite3.{soext} 
build_target = BuildProducts/lib/libart_Version.{soext}
install_target = lib/libart_Version.{soext}
buildenv_CMAKE_PREFIX_PATH = prepend:{clhep_install_dir}:{root_install_dir}:{tbb_install_dir}:{boost_install_dir}:{fnalcore_install_dir}
#buildenv_TBB_ROOT = {tbb_install_dir}

[package nutools]
version = {nutools_version}
environment = group:buildtools, group:compiler, package:cry,package:libxml2,package:geant, package:pythia,package:genie,package:lhapdf,package:log4cpp,package:xercesc,package:root,package:python,package:fnalart
features = vcs, patch, cmake, makemake, modulesfile, upsprod
depends = prepare:boost_install, prepare:postgresql_install,prepare:genie_install, prepare:fnalart_install
source_url = http://cdcvs.fnal.gov/subversion/nusoftsvn/tags/{version}/nutools
vcs_flavor = svn
source_unpacked = {package}-{version}
unpacked_target = CMakeLists.txt
patch_url = lbne/{package}-{version}.patch
patch_cmd_options = -d {package}-{version} -p0
prepare_cmd_options = -DCMAKE_C_COMPILER={gcc_install_dir}/bin/gcc -DCMAKE_CXX_COMPILER:STRING={gcc_install_dir}/bin/g++ -DCMAKE_INSTALL_LIBDIR=lib -DXERCESCROOT={xercesc_install_dir} -DG4LIB={geant_install_dir}/lib -DGENIE_LIB={genie_install_dir}/lib -DPYLIB={pythia_install_dir}/lib -DLHAPDF_FQ_DIR={lhapdf_install_dir} -DLOG4CPP_FQ_DIR={log4cpp_install_dir} -DLIBXML2_FQ_DIR={libxml2_install_dir} -DCRYHOME={cry_install_dir} -DGENIE_INC={genie_install_dir}/include -DGEANT4_FQ_DIR={geant_install_dir} -DXERCES_C_INC={xercesc_install_dir}/include -DLOG4CPP_INC={log4cpp_install_dir}/include
build_target = BuildProducts/lib/libSimulationBase.{soext}
install_target = lib/libSimulationBase.{soext}
buildenv_CMAKE_PREFIX_PATH = prepend:{clhep_install_dir}:{root_install_dir}:{tbb_install_dir}:{boost_install_dir}:{fnalcore_install_dir}:{fnalart_install_dir}:{geant_install_dir}
buildenv_LD_LIBRARY_PATH = prepend:{fnalart_install_dir}/lib:{fnalcore_install_dir}/lib:{clhep_install_dir}/lib:{tbb_install_dir}/lib:{boost_install_dir}/lib:{geant_install_dir}/lib
buildenv_CRYHOME = {cry_install_dir}
export_NUTOOLS_INC = prepend:{install_dir}/include
export_NUTOOLS_LIB = prepend:{install_dir}/lib

[package artdaqcore]
version = {artdaqcore_version}
environment = group:buildtools,group:compiler,package:fnalcore,package:fnalart,package:root
features = vcs, patch, cmake, makemake, modulesfile
depends = prepare:boost_install, prepare:fnalcore_install, prepare:fnalart_install
source_url = http://cdcvs.fnal.gov/projects/artdaq-core
vcs_flavor = git
vcs_tag = v{version_underscore}
unpacked_target = CMakeLists.txt
patch_url = lbne/{package}-{version}.patch
patch_cmd_options = -d {package}-{version} -p1
prepare_cmd_options = -DCMAKE_C_COMPILER={gcc_install_dir}/bin/gcc -DCMAKE_CXX_COMPILER:STRING={gcc_install_dir}/bin/g++ -DCMAKE_INSTALL_LIBDIR=lib 
build_target = BuildProducts/lib/libartdaq-core_Utilities.{soext}
install_target = lib/libartdaq-core_Utilities.{soext}
buildenv_CMAKE_PREFIX_PATH = prepend:prepend:{root_install_dir}:{clhep_install_dir}:{tbb_install_dir}:{boost_install_dir}:{fnalcore_install_dir}:{fnalart_install_dir}
buildenv_LD_LIBRARY_PATH = prepend:{fnalart_install_dir}/lib:{fnalcore_install_dir}/lib:{clhep_install_dir}/lib:{tbb_install_dir}/lib:{boost_install_dir}/lib:{geant_install_dir}/lib

