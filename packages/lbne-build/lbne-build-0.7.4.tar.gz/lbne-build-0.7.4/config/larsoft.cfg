[group larsoft]
packages = nutools, larcore, lardata, larevt, larsim, lareventdisplay, larexamples, larreco, larana, larpandora, artdaqcore, lbnecode
build_cmd = make VERBOSE=1 -j 4
version = {larsoft_version}
features = vcs, cmake, makemake, upsprod
vcs_tag = larsoft-build
vcs_flavor = git
unpacked_target = CMakeLists.txt
prepare_cmd_options = -DALT_CMAKE=yes -DCMAKE_C_COMPILER={gcc_install_dir}/bin/gcc -DCMAKE_CXX_COMPILER:STRING={gcc_install_dir}/bin/g++ -DCMAKE_INSTALL_LIBDIR=lib -DSQLite3_INCLUDE_DIR={sqlite_install_dir}/include -DSQLite3_LIBRARY={sqlite_install_dir}/lib/libsqlite3.{soext} -DPostgreSQL_INCLUDE_DIRS={postgresql_install_dir}/include -DPostgreSQL_LIBRARIES={postgresql_install_dir}/lib/libpq.{soext} -DG4_LIB={geant_install_dir}/lib -DGEANT4_FQ_DIR={geant_install_dir} -DGENIE={genie_install_dir} -DGENIE_LIB={genie_install_dir}/lib -DGENIE_INC={genie_install_dir}/include -DPANDORA_FQ_DIR={pandora_install_dir} -DPANDORA_LIB={pandora_install_dir}/lib -DCRY_HOME={cry_install_dir} -DCRYDATAPATH={cry_install_dir}/data -DLOG4CPP_INC={log4cpp_install_dir}/include -DLOG4CPP_FQ_DIR={log4cpp_install_dir} -DNUTOOLS_LIB={nutools_install_dir}/lib -DNUTOOLS_INC={nutools_install_dir}/include 
buildenv_LD_LIBRARY_PATH = prepend:{fnalart_install_dir}/lib:{fnalcore_install_dir}/lib:{root_install_dir}/lib:{clhep_install_dir}/lib:{boost_install_dir}/lib:{tbb_install_dir}/lib
buildenv_NUTOOLS_INC = {nutools_install_dir}/include
buildenv_NUTOOLS_LIB = {nutools_install_dir}/lib
ups_qualifiers = {ups_compiler_taint}
buildenv_CXXFLAGS=-O3 -g -DNDEBUG -fno-omit-frame-pointer -std=c++1y

[package nutools]
version = {nutools_version}
environment = group:buildtools, group:compiler, package:cry,package:libxml2,package:geant, package:pythia,package:genie,package:lhapdf,package:log4cpp,package:xercesc,package:root,package:python,package:fnalart
features = vcs, patch, cmake, makemake, modulesfile, upsprod
depends = prepare:boost_install, prepare:postgresql_install,prepare:genie_install, prepare:fnalart_install
source_url = http://cdcvs.fnal.gov/subversion/nusoftsvn/tags/{version}/nutools
vcs_tag = {nutools_version}
vcs_flavor = svn
vcs_tag =
source_unpacked = {package}-{version}
unpacked_target = CMakeLists.txt
patch_url = lbne/{package}-{version}.patch
patch_cmd_options = -d {package}-{version} -p0
prepare_cmd_options = -DALT_CMAKE=yes -DCMAKE_C_COMPILER={gcc_install_dir}/bin/gcc -DCMAKE_CXX_COMPILER:STRING={gcc_install_dir}/bin/g++ -DCMAKE_INSTALL_LIBDIR=lib -DXERCESCROOT={xercesc_install_dir} -DG4LIB={geant_install_dir}/lib -DGENIE_LIB={genie_install_dir}/lib -DPYLIB={pythia_install_dir}/lib -DLHAPDF_FQ_DIR={lhapdf_install_dir} -DLOG4CPP_FQ_DIR={log4cpp_install_dir} -DLIBXML2_FQ_DIR={libxml2_install_dir} -DCRYHOME={cry_install_dir} -DGENIE_INC={genie_install_dir}/include -DGEANT4_FQ_DIR={geant_install_dir} -DXERCES_C_INC={xercesc_install_dir}/include -DLOG4CPP_INC={log4cpp_install_dir}/include
build_target = BuildProducts/lib/libSimulationBase.{soext}
install_target = lib/libSimulationBase.{soext}
buildenv_CMAKE_PREFIX_PATH = prepend:{clhep_install_dir}:{root_install_dir}:{tbb_install_dir}:{boost_install_dir}:{fnalcore_install_dir}:{fnalart_install_dir}:{geant_install_dir}
buildenv_LD_LIBRARY_PATH = prepend:{fnalart_install_dir}/lib:{fnalcore_install_dir}/lib:{clhep_install_dir}/lib:{tbb_install_dir}/lib:{boost_install_dir}/lib:{geant_install_dir}/lib
buildenv_CRYHOME = {cry_install_dir}
export_NUTOOLS_INC = prepend:{install_dir}/include
export_NUTOOLS_LIB = prepend:{install_dir}/lib
export_CMAKE_PREFIX_PATH = prepend:{install_dir}

[package larcore]
environment = group:buildtools, group:compiler , group:fnalgroup, group:externals, package:nutools
depends = prepare:fnalcore_install, prepare:fnalart_install
source_url =  https://github.com/LBNE/larcore.git
build_target = BuildProducts/lib/libGeometry.{soext}
install_target = lib/libGeometry.{soext}
buildenv_CMAKE_PREFIX_PATH = prepend:{install_dir}:{fnalart_install_dir}:{fnalcore_install_dir}:{root_install_dir}:{tbb_install_dir}:{boost_install_dir}:{clhep_install_dir}:{gccxml_install_dir}

[package lardata]
environment = group:buildtools, group:compiler , group:fnalgroup, group:externals, package:larcore
depends = prepare:fnalcore_install, prepare:fnalart_install, prepare:larcore_install, prepare:nutools_install
source_url =  https://github.com/LBNE/lardata.git
build_target = BuildProducts/lib/libUtilities.{soext}
install_target = lib/libUtilities.{soext}
buildenv_CMAKE_PREFIX_PATH = prepend:{install_dir}:{fnalart_install_dir}:{fnalcore_install_dir}:{root_install_dir}:{tbb_install_dir}:{boost_install_dir}:{clhep_install_dir}:{gccxml_install_dir}:{larcore_install_dir}:{nutools_install_dir}

[package larevt]
environment = group:buildtools, group:compiler , group:fnalgroup, group:externals, package:larcore, package:lardata
depends = prepare:fnalcore_install, prepare:fnalart_install,prepare:larcore_install, prepare:lardata_install,prepare:nutools_install
source_url =  https://github.com/LBNE/larevt.git
build_target = BuildProducts/lib/libFilters.{soext}
install_target = lib/libFilters.{soext}
buildenv_CMAKE_PREFIX_PATH = prepend:{install_dir}:{fnalart_install_dir}:{fnalcore_install_dir}:{root_install_dir}:{tbb_install_dir}:{boost_install_dir}:{clhep_install_dir}:{gccxml_install_dir}:{larcore_install_dir}:{lardata_install_dir}:{nutools_install_dir}

[package larsim]
environment = group:buildtools, group:compiler , group:fnalgroup, package:cry,package:libxml2, package:geant, package:pythia, package:genie, package:lhapdf,package:log4cpp,package:xercesc,package:root, package:larcore, package:lardata, package:larevt
depends = prepare:fnalcore_install, prepare:fnalart_install, prepare:larcore_install, prepare:lardata_install, prepare:larevt_install
source_url =  https://github.com/LBNE/larsim.git
build_target = BuildProducts/lib/libSimulation.{soext}
install_target = lib/libSimulation.{soext}
buildenv_CMAKE_PREFIX_PATH = prepend:{install_dir}:{fnalart_install_dir}:{fnalcore_install_dir}:{root_install_dir}:{tbb_install_dir}:{boost_install_dir}:{clhep_install_dir}:{gccxml_install_dir}:prepend:{larcore_install_dir}:{lardata_install_dir}:{larevt_install_dir}:{nutools_install_dir}

[package lareventdisplay]
environment = group:buildtools, group:compiler , group:fnalgroup,package:cry,package:libxml2, package:geant, package:pythia, package:genie,package:lhapdf,package:log4cpp,package:xercesc,package:root,package:larcore,package:lardata, package:larevt, package:larsim
depends = prepare:fnalcore_install, prepare:fnalart_install,prepare:larcore_install, prepare:lardata_install, prepare:larevt_install, prepare:larsim_install
source_url =  https://github.com/LBNE/lareventdisplay.git
build_target = BuildProducts/lib/libEventDisplay.{soext}
install_target = lib/libEventDisplay.{soext}
buildenv_CMAKE_PREFIX_PATH = prepend:{install_dir}:{fnalart_install_dir}:{fnalcore_install_dir}:{root_install_dir}:{tbb_install_dir}:{boost_install_dir}:{clhep_install_dir}:{gccxml_install_dir}:{larcore_install_dir}:{lardata_install_dir}:{larevt_install_dir}:{larsim_install_dir}:{nutools_install_dir}

[package larexamples]
environment = group:buildtools, group:compiler , group:fnalgroup,package:cry,package:libxml2, package:geant, package:pythia, package:genie,package:lhapdf,package:log4cpp,package:xercesc,package:root,package:larcore,package:lardata, package:larevt, package:larsim
depends = prepare:fnalcore_install, prepare:fnalart_install,prepare:larcore_install, prepare:lardata_install, prepare:larevt_install, prepare:larsim_install
source_url =  https://github.com/LBNE/larexamples.git
build_target = BuildProducts/lib/libAnalysisExample_module.{soext}
install_target = lib/libAnalysisExample_module.{soext}
buildenv_CMAKE_PREFIX_PATH = prepend:{install_dir}:{fnalart_install_dir}:{fnalcore_install_dir}:{root_install_dir}:{tbb_install_dir}:{boost_install_dir}:{clhep_install_dir}:{gccxml_install_dir}:{larcore_install_dir}:{lardata_install_dir}:{larevt_install_dir}:{larsim_install_dir}:{nutools_install_dir}

[package larreco]
environment = group:buildtools, group:compiler , group:fnalgroup,package:cry,package:libxml2, package:geant, package:pythia, package:genie,package:lhapdf,package:log4cpp,package:xercesc,package:root,package:larcore,package:lardata, package:larevt, package:larsim
depends = prepare:fnalcore_install, prepare:fnalart_install,prepare:larcore_install, prepare:lardata_install, prepare:larevt_install, prepare:larsim_install
source_url =  https://github.com/LBNE/larreco.git
build_target = BuildProducts/lib/libRecoAlg.{soext}
install_target = lib/libRecoAlg.{soext}
buildenv_CMAKE_PREFIX_PATH = prepend:{install_dir}:{fnalart_install_dir}:{fnalcore_install_dir}:{root_install_dir}:{tbb_install_dir}:{boost_install_dir}:{clhep_install_dir}:{gccxml_install_dir}:{larcore_install_dir}:{lardata_install_dir}:{larevt_install_dir}:{larsim_install_dir}:{nutools_install_dir}

[package larpandora]
environment = group:buildtools, group:compiler , group:fnalgroup,package:cry,package:libxml2, package:geant, package:pythia, package:genie,package:lhapdf,package:log4cpp,package:xercesc,package:root,package:larcore,package:lardata, package:larevt, package:larsim, package:pandora
depends = prepare:fnalcore_install, prepare:fnalart_install,prepare:larcore_install, prepare:lardata_install, prepare:larevt_install, prepare:larsim_install, prepare:larreco_install
source_url =  https://github.com/LBNE/larpandora.git
build_target = BuildProducts/lib/libLArPandoraAlgorithms.{soext}
install_target = lib/libLArPandoraAlgorithms.{soext}
buildenv_CMAKE_PREFIX_PATH = prepend:{install_dir}:{fnalart_install_dir}:{fnalcore_install_dir}:{root_install_dir}:{tbb_install_dir}:{boost_install_dir}:{clhep_install_dir}:{gccxml_install_dir}:{larcore_install_dir}:{lardata_install_dir}:{larevt_install_dir}:{larsim_install_dir}:{larreco_install_dir}:{nutools_install_dir}
buildenv_PANDORA_LIB={pandora_install_dir}/lib
buildenv_PANDORA_FQ_DIR={pandora_install_dir}

[package larana]
environment = group:buildtools, group:compiler , group:fnalgroup,package:cry,package:libxml2, package:geant, package:pythia, package:genie,package:lhapdf,package:log4cpp,package:xercesc,package:root,package:larcore,package:lardata, package:larevt, package:larsim, package:larreco
depends = prepare:fnalcore_install, prepare:fnalart_install,prepare:larcore_install, prepare:lardata_install, prepare:larevt_install, prepare:larsim_install,prepare:larreco_install
source_url =  https://github.com/LBNE/larana.git
build_target = BuildProducts/lib/libCosmicRemoval.{soext}
install_target = lib/libCosmicRemoval.{soext}
buildenv_CMAKE_PREFIX_PATH = prepend:{install_dir}:{fnalart_install_dir}:{fnalcore_install_dir}:{root_install_dir}:{tbb_install_dir}:{boost_install_dir}:{clhep_install_dir}:{gccxml_install_dir}:{larcore_install_dir}:{lardata_install_dir}:{larevt_install_dir}:{larsim_install_dir}:{larreco_install_dir}:{nutools_install_dir}


[package artdaqcore]
version = {artdaqcore_version}
environment = group:buildtools,group:compiler,package:fnalcore,package:fnalart,package:root,package:nutools
features = vcs, patch, cmake, makemake, modulesfile
depends = prepare:boost_install, prepare:fnalcore_install, prepare:fnalart_install
source_url = http://cdcvs.fnal.gov/projects/artdaq-core
vcs_flavor = git
vcs_tag = v{version_underscore}
unpacked_target = CMakeLists.txt
patch_url = lbne/{package}-{version}.patch
patch_cmd_options = -d {package}-{version} -p1
prepare_cmd_options = -DALT_CMAKE=yes -DCMAKE_C_COMPILER={gcc_install_dir}/bin/gcc -DCMAKE_CXX_COMPILER:STRING={gcc_install_dir}/bin/g++ -DCMAKE_INSTALL_LIBDIR=lib  -DSQLite3_INCLUDE_DIR={sqlite_install_dir}/include -DSQLite3_LIBRARY={sqlite_install_dir}/lib/libsqlite3.{soext} 
build_target = BuildProducts/lib/libartdaq-core_Utilities.{soext}
install_target = lib/libartdaq-core_Utilities.{soext}
buildenv_CMAKE_PREFIX_PATH =prepend:{root_install_dir}:{clhep_install_dir}:{tbb_install_dir}:{boost_install_dir}:{fnalcore_install_dir}:{fnalart_install_dir}
buildenv_LD_LIBRARY_PATH = prepend:{fnalart_install_dir}/lib:{fnalcore_install_dir}/lib:{clhep_install_dir}/lib:{tbb_install_dir}/lib:{boost_install_dir}/lib:{geant_install_dir}/lib

[package lbnecode]
environment = group:buildtools, group:compiler , group:fnalgroup,package:cry,package:libxml2, package:geant, package:pythia, package:genie,package:lhapdf,package:log4cpp,package:xercesc,package:root,package:larcore,package:lardata, package:larevt, package:larsim, package:larreco
depends = prepare:fnalcore_install,prepare:fnalart_install,prepare:larcore_install, prepare:lardata_install, prepare:larevt_install,prepare:larsim_install,prepare:larreco_install,prepare:larpandora_install,prepare:artdaqcore_install
source_url =  https://github.com/LBNE/lbnecode.git
build_target = BuildProducts/lib/liblbne_Geometry.{soext}
install_target = lib/liblbne_Geometry.{soext}
buildenv_CMAKE_PREFIX_PATH = prepend:{install_dir}:{fnalart_install_dir}:{fnalcore_install_dir}:{root_install_dir}:{tbb_install_dir}:{boost_install_dir}:{clhep_install_dir}:{gccxml_install_dir}:{larcore_install_dir}:{lardata_install_dir}:{larevt_install_dir}:{larsim_install_dir}:{larreco_install_dir}:{larpandora_install_dir}:{nutools_install_dir}:{artdaqcore_install_dir}

