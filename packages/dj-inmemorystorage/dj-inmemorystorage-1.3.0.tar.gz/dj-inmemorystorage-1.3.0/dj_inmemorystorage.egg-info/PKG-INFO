Metadata-Version: 1.1
Name: dj-inmemorystorage
Version: 1.3.0
Summary: A non-persistent in-memory data storage backend for Django.
Home-page: https://github.com/waveaccounting/dj-inmemorystorage
Author: Cody Soyland, Seán Hayes, Tore Birkeland, Nick Presta
Author-email: opensource@waveapps.com
License: Copyright (c) 2013, Cody Soyland, Seán Hayes, Tore Birkeland, Wave Accounting Inc.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of dj-inmemorystorage nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL CODY SOYLAND BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Description: ======================
        dj-inmemorystorage
        ======================
        
        .. image:: https://travis-ci.org/waveaccounting/dj-inmemorystorage.png?branch=master
           :target: https://travis-ci.org/waveaccounting/dj-inmemorystorage
        
        An in-memory data storage backend for Django.
        
        Compatible with Django's `storage API <https://docs.djangoproject.com/en/dev/ref/files/storage/>`_.
        
        ==================
        Supported Versions
        ==================
        
        Python 2.6/2.7 with Django 1.4+
        Python 3.2/3.3/3.4 with Django 1.5+
        
        =====
        Usage
        =====
        
        In your test settings file, add
        
        .. code:: python
        
            DEFAULT_FILE_STORAGE = 'inmemorystorage.InMemoryStorage'
        
        By default, the ``InMemoryStorage`` backend is non-persistant, meaning that
        writes to it from one section of your code will not be present when reading
        from another section of your code, unless both are sharing the same instance of
        the storage backend.
        
        If you need your storage to persist, you can add the following to your settings.
        
        .. code:: python
        
            INMEMORYSTORAGE_PERSIST = True
        
        ===========
        Differences
        ===========
        
        This library is based on `django-inmemorystorage <https://github.com/codysoyland/django-inmemorystorage>`_ by Cody Soyland,
        with `modifications <https://github.com/SeanHayes/django-inmemorystorage>`_ made by Seán Hayes with support for the ``url`` method,
        with `additional support <https://github.com/Vostopia/django-inmemorystorage>`_ from Tore Birkeland for writing to the file.
        
        Wave's modifications include packaging, and test modifications such that ``python setup.py test`` works. This version
        also bumps the version to ``1.0.0`` and renames it to dj-inmemorystorage such that it doesn't conflict on PyPI.
        
        The biggest difference is that this package works with Django 1.4 now (previously only 1.5+).
        It also supports Python 2.6/2.7 with Django 1.4+ and Python 3.2/3.3/3.4 with Django 1.5+.
        
        ============
        Contributing
        ============
        
        1. Ensure that you open a pull request
        2. All feature additions/bug fixes MUST include tests
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Topic :: Internet :: WWW/HTTP
