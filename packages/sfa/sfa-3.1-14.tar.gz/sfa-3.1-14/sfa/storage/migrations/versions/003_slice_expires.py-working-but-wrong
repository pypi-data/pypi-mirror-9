# this move is about adding a slice x users many to many relation ship for modelling 
# regular "membership" of users in a slice

from datetime import datetime, timedelta

from sqlalchemy import Table, MetaData, Column
from sqlalchemy import DateTime

import orm

# # set old slices valid for a totally arbitrary 2-weeks
# EXTENSION=timedelta(weeks=2)

def upgrade(migrate_engine):
    meta = MetaData(bind=migrate_engine)
    slices = Table('slices', meta, autoload=True)
    # void/None record fields cause issues 
    expiresc = Column('expires', DateTime, default=datetime.fromtimestamp(0))
    expiresc.create(slices)
    # initial idea was to set them valid for a totally arbitrary 2-weeks
    # extended=(datetime.now()+EXTENSION).strftime("%Y-%m-%d %H:%M:%S%Z")
    # sql_sentence="UPDATE slices SET expires='%s'"%extended
    # migrate_engine.execute(sql_sentence)
    # however it's not clear if that worked at all
    # moreover it will probably be wrong with testbeds that are not authoritative,
    # so hold it for now

def downgrade(migrate_engine):
    meta = MetaData(bind=migrate_engine)
    slices = Table('slices', meta, autoload=True)
    slices.c.expires.drop()
