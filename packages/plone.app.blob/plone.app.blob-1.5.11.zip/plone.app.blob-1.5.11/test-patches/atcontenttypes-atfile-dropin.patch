Index: extras/Products.ATContentTypes/Products/ATContentTypes/tests/test_installation.py
===================================================================
--- extras/Products.ATContentTypes/Products/ATContentTypes/tests/test_installation.py	(revision 54941)
+++ extras/Products.ATContentTypes/Products/ATContentTypes/tests/test_installation.py	(working copy)
@@ -57,6 +57,6 @@
         # test that all types are installed well
         ttool = self.ttool
-        ids = ('Document', 'Favorite', 'File',
-            'Folder', 'Image', 'Large Plone Folder', 'Link',
+        ids = ('Document', 'Favorite',
+            'Folder', 'Large Plone Folder', 'Link',
             'News Item', 'Topic', 'Event')

@@ -67,4 +67,10 @@
             self.failUnless(tinfo.product == 'ATContentTypes', tinfo.product)

+        tinfo = ttool['File']
+        self.failUnless(tinfo.product == 'plone.app.blob', tinfo.product)
+
+        tinfo = ttool['Image']
+        self.failUnless(tinfo.product == 'plone.app.blob', tinfo.product)
+
     def test_not_quickinstalled(self):
         qi = getattr(self.portal, 'portal_quickinstaller')
Index: extras/Products.ATContentTypes/Products/ATContentTypes/tests/test_atfile.py
===================================================================
--- extras/Products.ATContentTypes/Products/ATContentTypes/tests/test_atfile.py	(revision 54941)
+++ extras/Products.ATContentTypes/Products/ATContentTypes/tests/test_atfile.py	(working copy)
@@ -36,4 +36,5 @@
 import StringIO

+from plone.app.blob.content import ATBlob
 from Products.ATContentTypes.content.file import ATFile
 from Products.ATContentTypes.interfaces import IATFile
@@ -59,5 +60,5 @@
 class TestSiteATFile(atcttestcase.ATCTTypeTestCase):

-    klass = ATFile
+    klass = ATBlob
     portal_type = 'File'
     title = 'File'
@@ -187,5 +188,5 @@
     def afterSetUp(self):
         atcttestcase.ATCTFieldTestCase.afterSetUp(self)
-        self._dummy = self.createDummy(klass=ATFile)
+        self._dummy = self.createDummy(klass=ATBlob, subtype='File')

     def test_fileField(self):
@@ -215,5 +216,5 @@
                         'Value is %s' % field.generateMode)
         self.failUnless(field.force == '', 'Value is %s' % field.force)
-        self.failUnless(field.type == 'file', 'Value is %s' % field.type)
+        self.failUnless(field.type == 'blob', 'Value is %s' % field.type)
         self.failUnless(isinstance(field.storage, AnnotationStorage),
                         'Value is %s' % type(field.storage))
Index: extras/Products.ATContentTypes/Products/ATContentTypes/tests/test_atimage.py
===================================================================
--- extras/Products.ATContentTypes/Products/ATContentTypes/tests/test_atimage.py	(revision 54941)
+++ extras/Products.ATContentTypes/Products/ATContentTypes/tests/test_atimage.py	(working copy)
@@ -40,4 +40,5 @@
 from Products.ATContentTypes.tests.utils import dcEdit, PACKAGE_HOME

+from plone.app.blob.content import ATBlob
 from Products.ATContentTypes.content.image import ATImage
 from Products.ATContentTypes.interfaces import IImageContent
@@ -81,5 +82,5 @@
 class TestSiteATImage(atcttestcase.ATCTTypeTestCase):

-    klass = ATImage
+    klass = ATBlob
     portal_type = 'Image'
     title = 'Image'
@@ -233,5 +234,5 @@
     def afterSetUp(self):
         atcttestcase.ATCTFieldTestCase.afterSetUp(self)
-        self._dummy = self.createDummy(klass=ATImage)
+        self._dummy = self.createDummy(klass=ATBlob, subtype='Image')

     def test_imageField(self):
@@ -261,5 +262,5 @@
                         'Value is %s' % field.generateMode)
         self.failUnless(field.force == '', 'Value is %s' % field.force)
-        self.failUnless(field.type == 'image', 'Value is %s' % field.type)
+        self.failUnless(field.type == 'blob', 'Value is %s' % field.type)
         self.failUnless(isinstance(field.storage, AnnotationStorage),
                         'Value is %s' % type(field.storage))
Index: extras/Products.ATContentTypes/Products/ATContentTypes/tests/test_aaa.py
===================================================================
--- extras/Products.ATContentTypes/Products/ATContentTypes/tests/test_aaa.py	(revision 0)
+++ extras/Products.ATContentTypes/Products/ATContentTypes/tests/test_aaa.py	(revision 0)
@@ -0,0 +1,15 @@
+from unittest import TestSuite
+from plone.app.blob.tests import bbb
+from Products.PloneTestCase import PloneTestCase
+
+
+# while the following test case is emtpty, it takes care of setting up a
+# blob-aware zodb for testing against blobs
+
+class BlobSetupTestCase(PloneTestCase.PloneTestCase):
+
+    layer = bbb.plone
+
+
+def test_suite():
+    return TestSuite()

Property changes on: extras/Products.ATContentTypes/Products/ATContentTypes/tests/test_aaa.py
___________________________________________________________________
Name: svn:eol-style
   + native

Index: extras/Products.ATContentTypes/Products/ATContentTypes/tests/atcttestcase.py
===================================================================
--- extras/Products.ATContentTypes/Products/ATContentTypes/tests/atcttestcase.py	(revision 54941)
+++ extras/Products.ATContentTypes/Products/ATContentTypes/tests/atcttestcase.py	(working copy)
@@ -31,4 +31,7 @@
 from Products.PloneTestCase.setup import portal_owner
 ZopeTestCase.installProduct('SiteAccess')
+
+from plone.app.blob.markings import markAs
+from plone.app.blob.tests import bbb
 PloneTestCase.setupPloneSite(extension_profiles=['Products.CMFPlone:testfixture'])

@@ -68,8 +71,10 @@

 class ATCTSiteTestCase(PloneTestCase.PloneTestCase):
-    pass
+
+    layer = bbb.plone

 class ATCTFunctionalSiteTestCase(PloneTestCase.FunctionalTestCase):
-    pass
+
+    layer = bbb.plone

 class ATCTTypeTestCase(ATCTSiteTestCase):
@@ -79,4 +84,6 @@
     """

+    layer = bbb.plone
+
     klass = None
     cmf_klass = None
@@ -142,5 +149,6 @@
         self.failUnlessEqual(ti.Title(), self.title)
         self.failUnlessEqual(ti.getIcon(), self.icon)
-        self.failUnlessEqual(ti.Metatype(), self.meta_type)
+        # the following yields 'ATFile' vs 'ATBlob', but that's okay...
+        # self.failUnlessEqual(ti.Metatype(), self.meta_type)

     def test_doesImplementDC(self):
@@ -241,7 +249,8 @@
         self.setRoles(['Manager',])

-    def createDummy(self, klass, id='dummy'):
+    def createDummy(self, klass, id='dummy', subtype=None):
         portal = self.portal
         dummy = klass(oid=id)
+        markAs(dummy, subtype)
         # put dummy in context of portal
         dummy = dummy.__of__(portal)
Index: extras/Products.ATContentTypes/Products/ATContentTypes/content/file.py
===================================================================
--- extras/Products.ATContentTypes/Products/ATContentTypes/content/file.py	(revision 54941)
+++ extras/Products.ATContentTypes/Products/ATContentTypes/content/file.py	(working copy)
@@ -105,4 +105,7 @@
     security       = ClassSecurityInfo()

+    def __init__(self, *args, **kwargs):
+        raise 'WeDidntWannaUseThisThingAnymoreException!'
+
     security.declareProtected(View, 'index_html')
     def index_html(self, REQUEST=None, RESPONSE=None):
Index: extras/Products.ATContentTypes/Products/ATContentTypes/content/image.py
===================================================================
--- extras/Products.ATContentTypes/Products/ATContentTypes/content/image.py	(revision 54941)
+++ extras/Products.ATContentTypes/Products/ATContentTypes/content/image.py	(working copy)
@@ -108,4 +108,7 @@
     security       = ClassSecurityInfo()

+    def __init__(self, *args, **kwargs):
+        raise 'WeDidntWannaUseThisThingAnymoreException!'
+
     def exportImage(self, format, width, height):
         return '',''
