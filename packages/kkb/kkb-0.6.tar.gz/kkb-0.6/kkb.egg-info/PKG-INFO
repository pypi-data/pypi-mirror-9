Metadata-Version: 1.1
Name: kkb
Version: 0.6
Summary: Django package для работы с КазКоммерцБанк ePay
Home-page: http://www.decemberapp.com/kkb
Author: tukhfatov,sofaku
Author-email: info@decemberapp.com
License: Freely Distributable
Description: =====
        Django package для работы с КазКоммерцБанк ePay
        =====
        
        
        Установка
        ------------
        
        1.	Установка через pip::
        	
        		pip install kkb 
        
        		либо скачать файл по прямой ссылке 
        		https://pypi.python.org/packages/source/k/kkb/kkb-0.4.tar.gz
        
        2. Добавьте в `settings.py`::
        
        		INSTALLED_APPS += ('kkb', )
        		
        		MERCHANT_CERTIFICATE_ID = "" # Серийный номер сертификата Cert Serial Number
        		MERCHANT_NAME = "" # Название магазина (продавца) Shop/merchant Name
        		PRIVATE_KEY_FN = "" # Абсолютный путь к закрытому ключу Private cert path
        		PRIVATE_KEY_PASS = "" # Пароль к закрытому ключу Private cert password
        		PUBLIC_KEY_FN = "" # Абсолютный путь к открытому ключу Public cert path
        		MERCHANT_ID="" # Терминал ИД в банковской Системе
        
        
        
        Использование
        -----
        
        Отправка в систему авторизации::
        	
        	import kkb
        	context = kkb.get_context(order_id = '333',amount="666")
        	или
        	context = kkb.get_context(order_id = '333',amount="666",currency_id = "398") 
        	# currency_id  - 840-USD, 398-Tenge
        
        
        	<form name="SendOrder" method="post" action="https://epay.kkb.kz/jsp/process/logon.jsp">
        	<input type="hidden" name="Signed_Order_B64" value="{{context}}">
        	</form>
        	
        Обработка документа возвращаемого системой авторизации::
        	
        	import kkb
        
        	response = request.POST['response']
        
        	result = kkb.postlink(response)
        	if result.status:
        		# операция прошла успешно
        		# все данные в result.data 
        		# (result.data['ORDER_AMOUNT'],result.data['ORDER_ID'],....)
        	else:
        		print result.message
        	
        Данные в result.data::
        
        	result.data
        	
        		BANK_NAME
        		CUSTOMER_NAME
        		CUSTOMER_MAIL
        		CUSTOMER_PHONE
        		MERCHANT_CERT_ID
        		MERCHANT_NAME
        		ORDER_ID
        		ORDER_AMOUNT
        		ORDER_CURRENCY
        		DEPARTMENT_MERCHANT_ID
        		DEPARTMENT_AMOUNT
        		MERCHANT_SIGN_TYPE
        		CUSTOMER_SIGN_TYPE
        		RESULTS_TIMESTAMP
        		PAYMENT_MERCHANT_ID
        		PAYMENT_AMOUNT
        		PAYMENT_REFERENCE
        		PAYMENT_APPROVAL_CODE
        		PAYMENT_RESPONSE_CODE
        		BANK_SIGN_CERT_ID
        		BANK_SIGN_TYPE
        		LETTER
        		SIGN
        		RAWSIGN
        
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: Freely Distributable
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Topic :: Software Development :: Libraries :: Python Modules
