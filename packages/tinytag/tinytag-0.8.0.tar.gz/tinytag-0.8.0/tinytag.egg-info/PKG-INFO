Metadata-Version: 1.1
Name: tinytag
Version: 0.8.0
Summary: Read music meta data and length of MP3, OGG, FLAC and Wave files
Home-page: https://github.com/devsnd/tinytag/
Author: Tom Wallroth
Author-email: tomwallroth@gmail.com
License: GPLv3
Description: tinytag
        =======
        
        tinytag is a library for reading music meta data of MP3, OGG, FLAC and
        Wave files with python
        
        |Build Status| |Coverage Status|
        
        Installation
        ------------
        
        To install tinytag, simply:
        
        .. code:: shell
        
                pip install tinytag
        
        Features:
        
        -  Read tags, length and IDv3 cover images of music files
        -  supported formats
        
           -  MP3 (ID3 v1, v1.1, v2.2, v2.3+)
           -  Wave
           -  OGG
           -  FLAC
        
        -  pure python
        -  supports python 2 and 3 (without 2to3)
        -  is tested
        -  Just a few hundred lines of code (just include it in your project!)
        
        tinytag only provides the minimum needed for *reading* MP3, OGG, FLAC
        and Wave meta-data. It can determine track number, total tracks, title,
        artist, album, year, duration and more.
        
        ::
        
            from tinytag import TinyTag
            tag = TinyTag.get('/some/music.mp3')
            print('This track is by %s.' % tag.artist)
            print('It is %f seconds long.' % tag.duration)
        
        List of possible attributes you can get with TinyTag:
        
        ::
        
            tag.album         # album as string
            tag.artist        # artist name as string
            tag.audio_offset  # number of bytes before audio data begins
            tag.bitrate       # bitrate in kBits/s
            tag.duration      # duration of the song in seconds
            tag.filesize      # file size in bytes
            tag.samplerate    # samples per second
            tag.title         # title of the song
            tag.track         # track number as string
            tag.track_total   # total number of tracks as string
            tag.year          # year or data as string
        
        Additionally you can also get cover images from ID3 tags:
        
        ::
        
            tag = TinyTag.get('/some/music.mp3', image=True)
            image_data = tag.get_image()
        
        supported python versions:
        
        -  2.6+
        -  3.2+
        -  pypy
        
        and possibly more.
        
        .. |Build Status| image:: https://travis-ci.org/devsnd/tinytag.png?branch=master
           :target: https://travis-ci.org/devsnd/tinytag
        .. |Coverage Status| image:: https://coveralls.io/repos/devsnd/tinytag/badge.png
           :target: https://coveralls.io/r/devsnd/tinytag
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Multimedia
Classifier: Topic :: Multimedia :: Sound/Audio
