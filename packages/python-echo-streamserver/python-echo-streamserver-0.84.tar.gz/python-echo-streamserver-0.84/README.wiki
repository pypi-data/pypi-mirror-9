#summary Echo StreamServer API Overview

=Echo StreamServer API=

This is a Python version of the *Echo StreamServer API*. See the [http://echoplatform.com/streamserver/docs/rest-api/ Echo Documentation].

==Function Interface==

The _function_ interface provides each *API* as a simple _module_ or _package_. The *API* uses the *Default Account* to contact *Echo*. For example, the *Items API* is *echo.items* and has the *REST API* methods.

{{{
# Items API: Count EQL Query
from echo import items, StreamServerError

try:
    n = items.count("scope:http//example.com/*")
    print "EQL Count: %d" % n
except StreamServerError, e:
    print "Error: %s" % str(e)
}}}

===Default Account===

The *Default Account* is part of the *echo.settings* module. Set the *Echo* _appkey_ and _secret_ API Keys for your account there.

{{{
/usr/lib/python2.x/site-packages/echo/settings.py
}}}

== Client Interface==

The *Client* interface provides each *API* as a class _instance_. The *Client* uses an *Account* object to contact *Echo*, or the default. For example, the *Key-Value Store API* is *echo.kvs.Client* and has the *KVS API* methods.

{{{
# KVS Client API: Get a value for the key 'sample'.
from echo import kvs, StreamServerError

# Create a KVS client using the default account.
client = kvs.Client()
try:
    v = client.get('sample')
    print "KVS: %r" % v
except StreamServerError, e:
    print "Error: %s" % str(e)
}}}

===Account Objects===

Each *Client* _instance_ can use an *Account* object to contact *Echo*. This is required to support _multiple_ *Echo* accounts.

{{{
from echo import feeds, Account

# Non-default account: Login Account.BasicAuth with no secret
other_account = Account('test.echoenabled.com', '', Account.BasicAuth)

client = feeds.Client(account=other_account)
}}}

=MUX Requests=

The *Items API* supports *MUX*, or _multiplexed_ requests. Several *count* and *search* requests can be combined into one *REST* call. The *items.mux* method sends a list of *MuxRequest* objects to *Echo*. See the *Echo* [http://echoplatform.com/streamserver/docs/rest-api/other-api/mux/ documentation] for the output format.

{{{
from echo import items
from echo.items.mux_api import MuxRequest

# EQL Query String
query_eql = "scope:http://www.example.com/*"

# Search Query (default)
search = MuxRequest(query_eql)

# Count Query
count = MuxRequest(query_eql, api_method='count')

Form list of them for Mux API.
requests = [ search, count ]

# Send Mux API requests.
r = items.mux(requests)
}}}

