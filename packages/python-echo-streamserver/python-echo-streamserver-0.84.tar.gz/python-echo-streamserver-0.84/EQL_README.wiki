#summary Echo Query Language Builder API

=Echo Query Language Builder=

There is an _object-oriented_ *Echo Query Language API* to build query strings. An *echo.eql.Query* object may be passed to the *Items API* methods *eql.items.count* and *eql.items.search* rather than query text. Add *echo.eql.filters* to build on the query terms and produce a complete *EQL* query string.

==EQL Syntax Limitations==

This *EQL Builder* _does not guarantee_ that the _whole_ EQL text is valid. Each _term_ is valid alone but *Echo StreamServer* still may reject the EQL string. *EQL syntax* rules limit how a *Query* and its *filters* can be constructed. Print the *echo.eql.Query* object to inspect its query string and _reorder_ filter terms as necessary.

==Query Method API==

Build an *echo.eql.Query* object using method calls. Add *echo.eql.filters.QueryFilter* objects to limit the results. Most *QueryFilter* objects can be _negated_ to exclude the term.

{{{
from echo import eql
q = eql.Query("http://site.example.com/index.html", uri_filter='url')
q.add_filter(eql.filters.ChildrenDepth(3))
q.add_filter(eql.filters.TypeFilter('article'), negate=True)
print "EQL> ", q
EQL> "url:"http://site.example.com/index.html" children:3 -type:article"
}}}

==Query Operator API==

Add _filters_ to an *echo.eql.Query* object using boolean operators. Read the *echo.eql.filters* documentation for more details.

{{{
from echo import eql
q = eql.Query("http://www.example.com/movies//")
# Exclude articles and notes with (-).
q = q - eql.filters.TypeFilter(['article', 'note'])
# Allow children up to depth 2.
q + (eql.filters.ChildrenDepth(2))
}}}

===echo.eql.Query Operators===

|| operator || example || description ||
|| plus +   || q + r   || **Add** filter r to query q. ||
|| minus -  || q - r   || **Negate** filter r on query q. ||
|| and &    || q1 & q2 || Combine queries q1 **and** q2. ||
|| pipe \|  || q1 | q2 || Select query q1 **or** q2. ||

===echo.eql.filters Operators===

|| operator || example || description ||
|| minus -  || -r      || **Negate** filter r. ||
|| and &    || r1 & r2 || Combine filters r1 **and** r2. ||
|| pipe \|  || r1 | r2 || Apply filter q1 **or** q2. ||

