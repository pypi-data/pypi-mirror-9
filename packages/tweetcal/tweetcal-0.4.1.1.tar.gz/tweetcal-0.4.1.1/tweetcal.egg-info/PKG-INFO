Metadata-Version: 1.0
Name: tweetcal
Version: 0.4.1.1
Summary: Python utilities for twitter bots
Home-page: http://github.com/fitnr/tweetcal
Author: Neil Freeman
Author-email: contact@fakeisthenewreal.org
License: GPL
Description: <h1 id="tweetcal">Tweetcal</h1>
        <p>Tweetcal converts a Twitter feed into .ics (calendar) format.</p>
        <h2 id="install">Install</h2>
        <p>Install with <code>pip install tweetcal</code></p>
        <h2 id="how-to">How to</h2>
        <p>Tweetcal has two commands. The first converts a Twitter archive to <code>ics</code>, the second saves recent tweets to <code>ics</code>.</p>
        <h3 id="reading-an-archive">Reading an archive</h3>
        <p>Download your <a href="https://support.twitter.com/articles/20170160-downloading-your-twitter-archive">Twitter archive</a> and unzip it. Let's say it's in <code>~/Downloads/archive/</code>. Run this command:</p>
        <pre class="sh"><code>$ tweetcal read-archive ~/Downloads/archive calendar-file.ics</code></pre>
        <p>This will create <code>calendar-file.ics</code>. Test it by opening in your favorite calendaring program.</p>
        <h3 id="saving-recent-tweets">Saving recent tweets</h3>
        <p>For this section, you'll need <a href="https://dev.twitter.com/oauth/overview/application-owner-access-tokens">Twitter OAuth credentials</a>.</p>
        <p>Save those tokens to a yaml or json file. Use the <a href="sample-config.yaml">sample format in the repo</a> as a guide. Let's say you've saved the file to <code>~/tweetcal.yaml</code> and your username is 'screen_name1'. Once that's set up, run:</p>
        <pre class="sh"><code>$ tweetcal stream --config ~/tweetcal.yaml --user screen_name1</code></pre>
        <p>Tweetcal leaves a note in ics files it creates to tell it where in an account's stream to start downloading. Because of this, you should only use a file created by Tweetcal with tweetcal-stream.</p>
        
Platform: UNKNOWN
