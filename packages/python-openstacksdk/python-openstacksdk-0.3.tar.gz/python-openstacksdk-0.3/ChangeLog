CHANGES
=======

0.3
---

* Add status_code to HttpException
* Provide a better default user-agent string
* Get a stack
* Build up contributor documentation section
* Build up user documentation section
* Fix the example on the Usage page
* Fix telemetry resource paths
* Remove version from path
* Reorganize existing documentation files
* Convert the find method to use the page method rather than list
* Add six to requirements
* Remove iso8601 from dependencies
* Rename floatingip to floating_ip
* Allow examples.get call without data
* Resource.find should not raise ResourceNotFound
* Working script to create a jenkins server
* Add the capability for the user to get a page of data
* Server convenience methods wait and get IPs
* Remove flake/pep8 ignores
* Use the proper timeutils package name
* Adjust some parameters and return types
* Refactor auth plugin loading
* Get rid of some useless code
* Make better support of service versions
* Fix RuntimeError on Python 3 while listing objects
* Correct auth_plugin argument values
* Better exception in Auth plugins
* Implement Swift Proxy object and example
* Build Resource from either existing object or id
* Add image v2 proxy
* Complete the Resource class documentation
* Updated from global requirements
* Add image v2 tags
* Updated from global requirements
* Remove extra GET call when limit provided to list
* Workflow documentation is now in infra-manual
* Add object_store resource documentation
* Neutron apparently doesn't support PATCH
* compute/v2 server metadata and server meta resouce
* AttributeError trapped when it won't be raised
* Prepare for documentation of Resources
* Don't attempt to __get__ prop without instance
* Reswizzle proxy tests
* keystore proxy methods and tests
* Support regionless/global services
* Expand r_id to resource_id for more clarity
* identity/v2 extension resource
* identity version resource and version fixes
* Correct Resource.id deleter property

0.2.1
-----

* Correct the namespace for Server resource

0.2.0
-----

* Updated from global requirements
* Add members resource to image v2 api
* Add image resource to v2 images api
* Add image V2 service version
* remove id_only from keypair find
* Add the ability to set a new default for props
* Updated from global requirements
* Updated from global requirements
* Fixed a typo in a comment in the tests
* Have prop attribute access return None by default
* Get prop aliases through their type, not raw value
* Add getting started steps for novices
* Expand index toctree to two levels
* Add details to HttpException string
* Fixed a typo in a docstring
* Compute proxy methods
* Implement iterator paging
* Create a discoverable plugin
* Sample thin interface
* Rename keypairs to keypair to be more consistent
* keystore/v1 container resource
* keystore/v1 order resource
* Add keystore service and secret resource
* Minor docs updates to index, installation and usage
* Use project name to retrieve version info
* Initial "Getting Started" guide
* Identity v2 proxy methods
* Identity v3 proxy methods
* Telemetry proxy methods
* Orchestration proxy methods
* Network proxy methods
* Image proxy methods
* Database proxy methods
* base class for proxy tests
* Updated from global requirements
* Properly parse the keypair response and workaround issues
* Have resource CRUD return self to simplify the proxies
* The fixed ip format on the port may actually be an array
* Add resource CRUD to connection class
* Add an example for the connection class
* move examples to code use preference docs
* Move examples to code session docs
* Move examples service filter to code
* Move transport examples to code
* Create a method to handle the set_* method logic
* Fixed a number of typos
* Updated from global requirements
* High level interface
* identity v3 docs
* class linke for v2
* resource autodocs
* update :class references
* identity v2 docs
* auth plugin identity base docs
* base auth plugin docs
* Move the examples docs into the code
* remove pointless test
* service filter docs
* fix identity service comment
* User preference docs
* Add connection documentation
* Convert transport docs to autodoc
* Convert the session object to autodoc
* Change configuration for sphinx autodoc
* Reverse order of tests to avoid incompatibility
* Add ability to extract a list of versions
* Allow user to select different visibilities
* Add user preference and example CLI to build it
* Fix the v2 auth plugin to handle empty token
* Handle booleans that are strings in APIs
* Introduce the connection class
* Updated from global requirements
* Apply id_attribute to Ceilometer Meters
* Remove extraneous vim editor configuration comments

0.1.0.dev20141008
-----------------

* Update README requirements
* Updated from global requirements
* Use the now graduated oslo.utils
* Make user_id a higher priority for v2 auth
* Use stevedore to load authorization plugins
* Prepare for auth plugins
* Use meter_name as id for statistics
* compute/v2 limits_absolute resource
* Determines version from auth_url when not explicit
* Add ability to find an available floating ip
* Add support for Samples coming from Ceilometer
* Add support for telemetry sample Statistics
* Floating ip does not have an id
* Fix find for resources with id_attribute
* Add find command to the examples
* identity/v3 user resource
* Updated from global requirements
* Add database users for instances
* Apply id_attribute throughout resources
* compute/v2 keypairs resource
* Add databases to instances
* Move cacert/insecure awkwardness examples/common
* Updated from global requirements
* Add docs environement to testing interface
* identity/v3 policy resource
* identity/v3 domain resource
* identity/v3 project resource
* identity/v3 credential resource
* identity/v3 group resource
* identity/v3 endpoint resource
* identity/v3 service resource
* Add __init__ files to identity service
* Change example so CLI names match object arguments
* Remove unused os-url option
* Adding database flavor support
* Fixing path to generated documentation
* Implement the rest of Swift containers and objects
* Work toward Python 3.4 support and testing
* Sync up with latest keystoneclient changes
* Allow headers to be retreived with GET bodies
* Add domains for v3 authentication
* identity/v2 role resource
* network/v2 pool_member resource
* Fix the example authenticate
* compute/v2 limits_rate resource
* Add example update
* Add id_attribute and resource_name to resource
* Adding alarm history to telemetry
* Introduces example of running a method on a resource
* Add the Alarm resource to telemetry
* Updated from global requirements
* compute/v2 server_interface resource
* Fix os_region in example session
* orchestration version resource
* orchestration/v1 stack resource
* Change OS_REGION to OS_REGION_NAME
* Change the capabilities to capability
* Publicize resource_id property
* Add Meter resource to telemetry
* Add the Resource resource to telemetry
* Exception has wrong string for list
* Server IP resource
* Various standard server actions
* compute/v2 server resource
* identity/v2 tenant resource
* identity/v2 user resource
* Updated from global requirements
* Fixes for telemetry
* database/v1.0 instance resource
* Add support for Swift containers
* compute/v2 image resource
* compute/ version resource
* compute/v2 flavor resource
* Introducing telemetry service
* compute/v2 extension resource
* network/v2 network resource
* Add some factories
* network/v2 security_group_rule resource
* network/v2 quota resource
* Add support for interface add/remove to routers
* network/v2 metering_label_rule resource
* network/v2 port resource
* network/v2 load balancer healthmonitor resource
* network/v2 subnet resource
* network/v2 load balancer pool resource
* network/v2 loadbalancer resource
* network version resource
* network/v2 security_group resource
* Have examples handle snake case to camel case
* network/v2 load balancer listener resource
* network/v2 floatingip resource
* network/v2 extension resource
* network/v2 metering_label resource
* network/v2 router resource
* Separate head restrictions from get
* Make logging more efficient in transport
* Proper string formatting in exception messages
* Minor fixes to examples
* Full flavor CRUD
* Don't join None values in utils.urljoin
* Add example script for HEAD requests
* Keep id in _attrs
* Add find method to resource
* H405 activate
* Add parameters to the list for filtering
* Have exceptions print something by default
* Make these comments H405 compliant
* Allow --data option to pass UUID instead of json
* Add some comments to the examples
* Simple network resource
* Add support for HEAD requests of resources
* Change transport JSON handling
* Fixed a small grammatical mistake in a docstring
* Add example get
* Add example delete
* Example create command
* Add common method to find a resource
* The resource repr method should print id
* Have the service catalog ignore empty urls
* Add --data option to debug curl logging
* Make version parsing in examples more intelligent
* Important changes for service filtering
* Very basic image resource
* Updated from global requirements
* json default for transport and resource __repr__
* Make the session command a little more friendly
* Synced from global-requirements
* Example session command
* Remove a now unused flake8 exclude directory
* Example code reorg and auth examples
* Removed two flake8 skips
* Sync hacking requirement with global requirements
* Important auth fixes
* Capitalize SDK more reasonably in an exception name
* Move MethodNotSupported exception to exceptions
* HttpException should be derived from SdkException
* Some docs for the session object
* Get rid of base_url from transport
* Rearrange session arguments
* Clean up transport stuff out of the resource class
* Resolve Ed's concerns on README
* Fleshed out the README and removed dependency on babel
* Removed now unnecesary workaround for PyPy
* Comment in middle of glossary messes it up
* Authentication from keystoneclient
* Add command structure to example code
* Update sphinx from global-requirements
* Wrap lines at the appropriate length and use native sphinx constructs
* Reorganize the index a bit to make the important content be at the top
* Fix an innacuracy in an example in the docs
* Fixed an emberassing typo
* Added a makefile for sphinx
* Converted the glossary to use native Sphinx markup
* Mark openstacksdk as being a universal wheel
* Add initial glossary
* Add Transport doc
* Resource Properties
* Update the requirements
* Finish transport renaming in the tests
* Add some sample scripts
* Add base resource class
* Session layer with base authenticator
* Add .venv to .gitignore
* Docs cleanup
* Rename session to transport
* Add redirection handling to openstack.session.Session
* Add requests.Session wrapper class
* Fix temporary pypy gate issue with setuptools
* Several stylistic fixes for the docs
* Switch to oslosphinx
* add newlines to end of requirements files
* remove api_strawman
* reigster->register typo
* Added support in the strawman for re-authentication
* Initial new version with demonstration of clean implementation
* Added sample directory layout for pystack
* Remove locale overrides in tox
* Fix misspellings in python openstacksdk
* Finished the pystack strawman overview
* Initial pystack strawman docs
* Made tox -e pep8 passed. Also made git review work
* setting up the initial layout; move the api proposals to api_strawman
* Added example code based on pystack
* This should be a plural
* Consolidate readmes
* Initial blob of thoughts from me
* Initial commit
