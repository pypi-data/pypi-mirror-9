// Generated by CoffeeScript 1.9.1
var Commentator;

Commentator = (function (o, $) {
    o.init = function () {
        $.ajaxSetup({
            beforeSend: function (xhr) {
                xhr.setRequestHeader("X-CSRFToken", Commentator.utils.getCookie("csrftoken"));
            }
        });
        if (typeof window["prettyPrint"] !== "function") {
            document.write("<script src=\"" + CommentatorConfig.staticUrl + "commentator/js/lib/prettify/prettify.js\"></script>");
            document.write("<link href=\"" + CommentatorConfig.staticUrl + "commentator/js/lib/prettify/prettify.css\" rel=\"stylesheet\">");
        }
        if (!jQuery().markItUp) {
            document.write("<script src=\"" + CommentatorConfig.staticUrl + "commentator/editor/jquery.markitup.js\"></script>");
            document.write("<link href=\"" + CommentatorConfig.staticUrl + "commentator/editor/editor.css\" rel=\"stylesheet\">");
        }
        if (!jQuery().ajaxForm) {
            document.write("<script src=\"" + CommentatorConfig.staticUrl + "commentator/js/lib/jquery.form.min.js\"></script>");
        }
        if (!jQuery().jGrowl) {
            document.write("<script src=\"" + CommentatorConfig.staticUrl + "commentator/js/lib/jquery.jgrowl.min.js\"></script>");
        }
        if (!jQuery().sisyphus) {
            document.write("<script src=\"" + CommentatorConfig.staticUrl + "commentator/js/lib/jquery.sisyphus.min.js\"></script>");
        }
        $(document).on("click", "#comment-preview-placeholder a", function () {
        });
        $(document).on("submit", "#comment-form", function (e) {
            Commentator.comment.save(this, $(this).find("[type=\"submit\"]")[0]);
            e.preventDefault();
        });
        $(document).on("click touchend", "#comment-form .preview, #comment-form .submit", function (e) {
            if ($(this).hasClass("preview")) {
                Commentator.comment.preview(this.form, this);
            } else {
                Commentator.comment.save(this.form, this);
            }
            e.preventDefault();
        });
        $(document).on("keydown", "#comment-form", function (e) {
            if (e.keyCode === 13) {
                if (e.shiftKey && (e.ctrlKey || e.metaKey)) {
                    $(this).submit();
                } else {
                    if (e.ctrlKey || e.metaKey) {
                        $(this).find("input[type=\"button\"].preview").click();
                    }
        }
      }
        });
        $(document).on("click touchend", "#comment-new-link a", function (e) {
            Commentator.forms.comment();
            e.preventDefault();
        });
        $(document).on("click touchend", ".comment-reply a", function (e) {
            var id;
            id = $(this).parents(".commentator-comment").data("id");
            if ($(this).hasClass("reply")) {
                Commentator.forms.reply(id);
            } else {
                if ($(this).hasClass("edit")) {
                    Commentator.forms.edit(id);
                }
      }
            e.preventDefault();
        });
        $(document).ready(function () {
            var count;
            if (CommentatorConfig.enable_editor) {
                $("#comment-editor").markItUp(CommentatorConfig.editor);
      }
            $.jGrowl.defaults.closerTemplate = "<div>[ " + CommentatorConfig.close_all_message + " ]</div>";
            count = $(".commentator-comment").size();
            $("#comment-total, .commentator-comments-count").text(count);
            if ($("#comment-form").is(":visible")) {
                $("#comment-new-link").hide();
      }
        });
        $("#comments").on("click touchend", ".commentator-comment-up a", function () {
            var id, parent;
            id = $(this).data("id");
            parent = $(this).data("parent");
            if (parent && id) {
                Commentator.utils.goto("comment-" + parent);
                $("#comment-" + parent + " .commentator-comment-down:lt(1)").show().find("a").attr("data-child", id);
      }
        });
        $("#comments").on("click touchend", ".commentator-comment-down a", function () {
            var child;
            child = $(this).data("child");
            if (child) {
                Commentator.utils.goto("comment-" + child);
            }
            $(this).attr("data-child", "").parent().hide();
        });
    };
    o.comment = {
        preview: function (form, button) {
            var thread;
            thread = $("[name=\"thread\"]", form);
            if (!thread) {
                return false;
            }
            $(form).ajaxSubmit({
                data: {
                    action: "preview",
                    thread: thread.val()
                },
                url: CommentatorConfig.actionUrl,
                form: form,
                button: button,
                dataType: "json",
                beforeSubmit: function () {
                    $(button).attr("disabled", "disabled");
                },
                success: function (response) {
                    $(button).removeAttr("disabled");
                    if (response.success) {
                        $("#comment-preview-placeholder").html(response.data.preview).show();
                        prettyPrint();
          } else {
                        Commentator.Message.error(response.message);
          }
                },
                error: function (response) {
                    Commentator.Message.error('Something went wrong!');
        }
      });
        },
        save: function (form, button) {
            var thread;
            thread = $("[name=\"thread\"]", form);
            if (!thread) {
                return false;
            }
            $(form).ajaxSubmit({
                data: {
                    action: "save",
                    thread: thread.val()
                },
                url: CommentatorConfig.actionUrl,
                form: form,
                button: button,
                dataType: "json",
                beforeSubmit: function () {
                    $(".error", form).text("");
                    $(button).attr("disabled", "disabled");
                },
                success: function (response) {
                    var field, i;
                    $(button).removeAttr("disabled");
                    if (response.success) {
                        Commentator.forms.comment(false);
                        $("#comment-preview-placeholder").html("").hide();
                        $("#comment-editor", form).val("");
                        $(".commentator-comment .comment-reply a").show();
                        if (!response.data.comment && response.message) {
                            Commentator.Message.info(response.message);
            } else {
                            Commentator.comment.insert(response.data.comment);
            }
                        Commentator.utils.goto($(response.data.comment).attr('id'));
                        Commentator.comment.getlist();
                        prettyPrint();
                    } else {
                        Commentator.Message.error(response.message);
                        if (response.data) {
                            i = void 0;
                            field = void 0;
                            for (i in response.data) {
                                field = response.data[i];
                                $(form).find("[name=\"" + field.field + "\"]").parent().find(".error").text(field.message);
              }
            }
          }
                },
                error: function (response) {
                    Commentator.Message.error('Something went wrong!');
        }
            });
        },
        getlist: function () {
            var form, thread;
            form = $("#comment-form");
            thread = $("[name=\"thread\"]", form);
            if (!thread) {
                return false;
            }
            Commentator.tpanel.start();
            $.post(CommentatorConfig.actionUrl, {
                action: "getlist",
                thread: thread.val()
            }, function (response) {
                var count, k;
                for (k in response.data.comments) {
                    if (response.data.comments.hasOwnProperty(k)) {
                        Commentator.comment.insert(response.data.comments[k], true);
          }
        }
                count = $(".commentator-comment").size();
                $("#comment-total, .commentator-comments-count").text(count);
                Commentator.tpanel.stop();
            }, "json");
        },
        insert: function (data, remove) {
            var children, comment, exists, id, level, parent, pcomm;
            comment = $(data);
            parent = $(comment).attr("data-parent");
            id = $(comment).attr("id");
            exists = $("#" + id);
            children = "";
            if (exists.length > 0) {
                data = comment[0].outerHTML;
                if (remove) {
                    children += exists.find(".comments-list").html();
                    exists.remove();
        } else {
                    exists.replaceWith(data);
        }
      }
            if (parseInt(parent) === 0) {
                $("#comments").append(data);
            } else {
                pcomm = $("#comment-" + parent);
                if (CommentatorConfig.thread_depth) {
                    level = pcomm.find(".commentator-comment").size();
                    if (level > 0) {
                        parent = pcomm.data("parent");
                        data = comment.outerHTML;
                    }
        }
                $("#comment-" + parent + " > .comments-list").append(data);
      }
            if (children.length > 0) {
                $("#" + id).find(".comments-list").html(children);
            }
        }
    };
    o.forms = {
        reply: function (comment_id) {
            var form, reply;
            $("#comment-new-link").show();
            form = $("#comment-form");
            $(".time", form).text("");
            $(".commentator-comment .comment-reply a").show();
            $("#comment-preview-placeholder").hide();
            $("input[name=\"part_of\"]", form).val(comment_id);
            $("input[name=\"id\"]", form).val(0);
            reply = $("#comment-" + comment_id + " > .comment-reply");
            form.insertAfter(reply).show();
            $("a", reply).hide();
            reply.parents(".commentator-comment").removeClass("commentator-comment-new");
            $("#comment-editor", form).val("").focus();
        },
        comment: function (focus) {
            var form;
            $("#comment-new-link").hide();
            form = $("#comment-form");
            $(".time", form).text("");
            $(".commentator-comment .comment-reply a:hidden").show();
            $("#comment-preview-placeholder").hide();
            $("input[name=\"part_of\"]", form).val('');
            $("input[name=\"id\"]", form).val(0);
            $(form).insertAfter("#comment-form-placeholder").show();
            $("#comment-editor", form).val("");
            if (focus) {
                $("#comment-editor", form).focus();
            }
        }
    };
    o.utils = {
        goto: function (id) {
            $("html, body").animate({
                scrollTop: $("#comment-" + id).offset()
            }, 1000);
        },
        getCookie: function (name) {
            var cookie, cookieValue, cookies, i;
            cookieValue = null;
            if (document.cookie && document.cookie !== "") {
                cookies = document.cookie.split(";");
                i = 0;
                while (i < cookies.length) {
                    cookie = jQuery.trim(cookies[i]);
                    if (cookie.substring(0, name.length + 1) === (name + "=")) {
                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                        break;
          }
                    i++;
        }
      }
            return cookieValue;
        }
    };
    o.Message = {
        success: function (message) {
            if (message) {
                $.jGrowl(message, {
                    theme: "commentator-message-success"
                });
      }
        },
        error: function (message) {
            if (message) {
                $.jGrowl(message, {
                    theme: "commentator-message-error"
        });
            }
        },
        info: function (message) {
            if (message) {
                $.jGrowl(message, {
                    theme: "commentator-message-info"
        });
            }
        },
        close: function () {
            $.jGrowl("close");
        }
    };
    o.tpanel = {
        wrapper: $("#comments-tpanel"),
        refresh: $("#tpanel-refresh"),
        new_comments: $("#tpanel-new"),
        class_new: "commentator-comment-new",
        initialize: function () {
            if (CommentatorConfig.tpanel) {
                this.wrapper.show();
                this.stop();
            }
            this.refresh.on("click", function () {
                $("." + Commentator.tpanel.class_new).removeClass(Commentator.tpanel.class_new);
                Commentator.comment.getlist();
            });
            this.new_comments.on("click", function () {
                var count, elem;
                elem = $("." + Commentator.tpanel.class_new + ":first");
                $("html, body").animate({
                    scrollTop: elem.offset().top
                }, 1000, "linear", function () {
                    elem.removeClass(Commentator.tpanel.class_new);
                });
                count = parseInt(Commentator.tpanel.new_comments.text());
                if (count > 1) {
                    Commentator.tpanel.new_comments.text(count - 1);
        } else {
                    Commentator.tpanel.new_comments.text("").hide();
        }
            });
        },
        start: function () {
            this.refresh.addClass("loading");
        },
        stop: function () {
            var count;
            count = $("." + this.class_new).size();
            if (count > 0) {
                this.new_comments.text(count).show();
            } else {
                this.new_comments.hide();
      }
            this.refresh.removeClass("loading");
        }
    };
    return o;
})(Commentator || {}, jQuery);

Commentator.init();

Commentator.tpanel.initialize();
