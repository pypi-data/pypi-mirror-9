[loggers]
keys = root, winchester

[handlers]
keys = stderr, stdout, watchedfile, syslog, null

[formatters]
keys = winchester, default

[logger_root]
level = WARNING
handlers = null

[logger_winchester]
level = DEBUG
handlers = stderr
qualname = winchester

[logger_amqplib]
level = WARNING
handlers = stderr
qualname = amqplib

[logger_sqlalchemy]
level = WARNING
handlers = stderr
qualname = sqlalchemy
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARNING" logs neither.  (Recommended for production systems.)

[handler_stderr]
class = StreamHandler
args = (sys.stderr,)
formatter = winchester

[handler_stdout]
class = StreamHandler
args = (sys.stdout,)
formatter = winchester

[handler_watchedfile]
class = handlers.WatchedFileHandler
args = ('winchester.log',)
formatter = winchester

[handler_syslog]
class = handlers.SysLogHandler
args = ('/dev/log', handlers.SysLogHandler.LOG_USER)
formatter = winchester

[handler_null]
class = NullHandler
formatter = default
args = ()

[formatter_winchester]
# substitutions available for formats are documented at:
# https://docs.python.org/2/library/logging.html#logrecord-attributes
format = [%(levelname)s at %(asctime)s line: %(lineno)d] %(message)s

[formatter_default]
format = %(message)s
