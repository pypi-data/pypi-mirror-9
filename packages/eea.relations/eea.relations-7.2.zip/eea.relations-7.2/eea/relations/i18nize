#!/bin/sh
#
# Shell script to manage .po files.
#
# Run this file in the folder main __init__.py of product
#
# E.g. if your product is yourproduct.name
# you run this file in yourproduct.name/yourproduct/name
#
#
# Copyright 2009 Twinapex Research http://www.twinapex.com
#

# Assume the product name is the current folder name
CURRENT_PATH=`pwd`
CATALOGNAME="eea"
CUSTOMCATALOG="plone"

# List of languages
LANGUAGES="en ro"

# Create locales folder structure for languages
install -d locales
for lang in $LANGUAGES; do
    install -d locales/$lang/LC_MESSAGES
done

# Rebuild .pot
i18ndude rebuild-pot --pot locales/$CATALOGNAME.pot --create $CATALOGNAME .
i18ndude rebuild-pot --pot locales/$CUSTOMCATALOG.pot --create $CUSTOMCATALOG .

# Compile po files
for lang in $(find locales -mindepth 1 -maxdepth 1 -type d); do

    if test -d $lang/LC_MESSAGES; then

        PO=$lang/LC_MESSAGES/${CATALOGNAME}.po
        ZPO=$lang/LC_MESSAGES/${CUSTOMCATALOG}.po

        # Create po file if not exists
        touch $PO
        touch $ZPO

        # Sync po file
        echo "Syncing $PO"
        i18ndude sync --pot locales/$CATALOGNAME.pot $PO
        echo "Syncing $ZPO"
        i18ndude sync --pot locales/$CUSTOMCATALOG.pot $ZPO

        # Compile .po to .mo
        MO=$lang/LC_MESSAGES/${CATALOGNAME}.mo
        echo "Compiling $MO"
        msgfmt -o $MO $lang/LC_MESSAGES/${CATALOGNAME}.po

        MO=$lang/LC_MESSAGES/${CUSTOMCATALOG}.mo
        echo "Compiling $MO"
        msgfmt -o $MO $lang/LC_MESSAGES/${CUSTOMCATALOG}.po
    fi
done
