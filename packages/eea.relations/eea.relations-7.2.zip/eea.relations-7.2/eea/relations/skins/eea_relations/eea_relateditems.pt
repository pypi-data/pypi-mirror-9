<tal:comment condition="nothing">
<!--
Full portal_relations macro

Usage:


  <metal:macro use-macro="here/eea_relateditems/macros/relatedItemsWithThumbs" />

Optional parameters:

  @param templateStyle  (optional) - the style that the relatedItems listing
   should use by default it uses an album_view look but you can pass a different
   name in order to get a folder_summary_view listing lookalike

  <metal:macro tal:define="templateStyle string:folder_summary"
               use-macro="here/eea_relateditems/macros/relatedItemsWithThumbs" />

  By default it adds a title Related Content header however if you wish to get rid
  of it just override the provided relatedTitle slot
  ex:
  <metal:macro use-macro="here/eea_relateditems/macros/relatedItemsWithThumbs">
    <metal:title fill-slot="relatedTitle />
  </metal:macro>

-->
</tal:comment>

<tal:relatedItems metal:define-macro="relatedItemsWithThumbs"
     i18n:domain="eea"
     tal:condition="context/@@plone_context_state/is_view_template">
  <div id="relatedItems"
          tal:define="relations nocall:here/@@eea.relations.macro;
                  thumb_scale thumb_scale | string:image_thumb;
                  forward_backward_auto_tabs python:relations.forward_backward_auto();
                  templateStyle templateStyle|string:album_view;"
          tal:condition="python:forward_backward_auto_tabs">
  <tal:relatedTitle metal:define-slot="relatedTitle">
      <h2 i18n:translate="">Related content</h2>
  </tal:relatedTitle>
  <div class="sorter_ctl" style="margin-bottom: 1.5em; display:none;">
      <label for="sort_by"> <span i18n:translate="">Sort by:</span>
          <select name="sort_by">
              <option value="effective" i18n:translate="">Publishing date
              </option>
              <option value="title" i18n:translate="">Title</option>
          </select>
      </label>
  </div>

  <tal:forward_backward tal:condition="forward_backward_auto_tabs">
      <!-- Forward, Backward and Auto relations -->
      <div class="visualNoMarker">
          <tal:tab repeat="tab forward_backward_auto_tabs">
              <tal:def define="label python:tab[0]; related python:tab[1]"
                      tal:condition="related">
                  <h3 tal:content="label" i18n:translate="" class="notoc">Relation label</h3>
                  <div metal:use-macro="here/eea_relateditems/macros/relatedItems"></div>
              </tal:def>
          </tal:tab>
      </div>
  </tal:forward_backward>

  </div>
</tal:relatedItems>


<tal:comment condition="nothing">
<!--
Generic macro for relatedItems (use relatedItemsWithThumbs for full relations)

Macro parameters

  @param related (required) - a set of item objects
  @param thumb_scale        - scale of image thumb to use
  @param templateStyle      - the style that the relatedItems listing should use
   by default it uses an album_view look but you can pass a different name in
   order to get a folder_summary_view listing, which is inside of a slot allowing
   you to override it in case you desire to construct a different kind of listing

Usage:

  <metal:macro use-macro="here/eea_relateditems/macros/relatedItems" />

-->
</tal:comment>

<div metal:define-macro="relatedItems"
     i18n:domain="eea"
     tal:define="related related | python:[];
                 thumb_scale thumb_scale | string:image_thumb;
                 templateStyle templateStyle"
     tal:condition="related">
    <tal:album_view tal:repeat="item related"
                    tal:condition="python: templateStyle == 'album_view'">
        <div class="photoAlbumEntry"
             tal:define="item item/getObject|nocall:item;
                         description item/Description;
                         img_url item/absolute_url;
                         urlview item/@@url|nothing;
                         listing_url urlview/listing_url|img_url;
                         item_interfaces context/@@plone_interface_info;
                         is_video python:item_interfaces.provides('eea.mediacentre.interfaces.IVideo');
                         css_class python: 'video-fancybox' if is_video else '';
                         portal_type item/portal_type;
                         video python:'video-fancybox' if is_video and portal_type != 'FlashFile' else '';
                         animation python:'animation-fancybox' if portal_type == 'FlashFile' else '';
                         cloud python: 'video-fancybox cloudvideo' if portal_type == 'CloudVideo' else '';
                         pretty_title item/title_or_id;
                         desc_or_title python:description or pretty_title;
                         time item/effective;"
             tal:attributes="data-effective time/millis|nothing;
                             data-title pretty_title;">
            <a tal:attributes="href listing_url;
                               title pretty_title;
                               class python:cloud or video or animation">

                <span class="photoAlbumEntryWrapper">
                    <img tal:attributes="title desc_or_title;
                                         alt pretty_title;
                                         src string:${img_url}/image_thumb" />
                </span>
                <span class="photoAlbumEntryTitle" tal:content="pretty_title"></span>
                <span class="photoAlbumEntryDescription"
                      tal:content="description"></span>
            </a>
        </div>
    </tal:album_view>

    <metal:template define-slot="templateStyle">
        <tal:related tal:repeat="item related"
                     tal:condition="python: templateStyle != 'album_view'">
            <div class="tileItem visualIEFloatFix vevent"
                 tal:define="item item/getObject|nocall:item;
                             title item/Title;
                             description item/Description;
                             urlview item/@@url;
                             img_url item/absolute_url;
                             url urlview/listing_url;
                             item_interfaces context/@@plone_interface_info;
                             is_video python:item_interfaces.provides('eea.mediacentre.interfaces.IVideo');
                             css_class python: 'video-fancybox' if is_video else '';
                             time item/effective;
                             pretty_title item/title_or_id;"
                 tal:attributes="data-effective time/millis|nothing;
                                 data-title pretty_title;">
                <a class="tileImage"
                   tal:attributes="href url; title title; alt title;
                                   class python:'video-fancybox tileImage' if is_video else 'tileImage'">
                    <img tal:attributes="src python:'%s/%s' % (img_url,thumb_scale);
                                         title title; alt title;" />
                </a>
                <h3 class="tileHeadline">
                    <a tal:attributes="href  url;
                                       title description;
                                       class css_class"
                       tal:content="title">
                        Related Item
                    </a>
                </h3>
                <p class="tileFooter">
                    <a class="moreLink"
                       tal:attributes="href url;
                                       title title;"
                       i18n:translate="">
                        Read more
                    </a>
                </p>
                <div class="visualClear"></div>
            </div>
        </tal:related>

    </metal:template>
</div>
