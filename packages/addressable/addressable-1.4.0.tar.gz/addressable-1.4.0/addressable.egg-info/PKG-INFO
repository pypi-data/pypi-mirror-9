Metadata-Version: 1.1
Name: addressable
Version: 1.4.0
Summary: Use lists like you would dictionaries.
Home-page: https://github.com/debrouwere/python-addressable/
Author: Stijn Debrouwere
Author-email: stijn@debrouwere.org
License: ISC
Download-URL: http://www.github.com/debrouwere/python-addressable/tarball/master
Description: ``addressable`` is a silly little utility that allows you to access
        items inside of a list using one or more indices as keys. You pretty
        much get to pretend pretend that a list is a souped-up dictionary.
        
        ::
        
            artists = [{
                'id': '0488', 
                'name': 'Lambchop', 
                'members': ['Kurt Wagner'], 
            }, {
                'id': '9924', 
                'name': 'Dire Straits', 
                'members': ['Mark Knopfler'], 
            }]
        
            # keys are matched against one or more indices
            artists = List(artists, indices=('id', 'name'))
            print artists['0488'] == artists['Lambchop']
        
            # fuzzy matching
            artists = List(artists, indices=('id', 'title'), fuzzy=True)
            print artists['strait']
        
            # extract the value, not the metadata
            artists = List(artists, indices=('id', 'title'), facet='title')
            print artists['9924'] == 'Dire Straits'
        
        So why would you want to do any of this? You probably don't.
        
        ``addressable`` can be useful for certain DSL or library code where you
        want to give the end users some freedom to code things their way, when
        you need to be able to very easily refer to certain things that are
        weirdly named or when there's multiple common ways of referring to
        something and you want the flexibility to mix-and-match.
        
Keywords: utility
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Utilities
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
