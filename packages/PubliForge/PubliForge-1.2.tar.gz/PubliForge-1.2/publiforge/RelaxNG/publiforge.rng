<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <!-- $Id: publiforge.rng a10a2129ea91 2014/11/11 19:16:07 Patrick $ -->
  <start>
    <ref name="publiforge"/>
  </start>
  <define name="publiforge">
    <element name="publiforge">
      <ref name="publiforge.attributes"/>
      <ref name="publiforge.content"/>
    </element>
  </define>
  <define name="publiforge.attributes">
    <ref name="version.attribute"/>
  </define>
  <define name="version.attribute">
    <attribute name="version">
      <value>1.0</value>
    </attribute>
  </define>
  <define name="publiforge.content">
    <choice>
      <ref name="user"/>
      <ref name="group"/>
      <ref name="storage"/>
      <ref name="indexer"/>
      <ref name="project"/>
      <ref name="project.pack"/>
      <group>
        <optional>
          <ref name="users"/>
        </optional>
        <optional>
          <ref name="groups"/>
        </optional>
        <optional>
          <ref name="storages"/>
        </optional>
        <optional>
          <ref name="indexers"/>
        </optional>
        <optional>
          <ref name="projects"/>
        </optional>
        <optional>
          <ref name="packs"/>
        </optional>
      </group>
      <ref name="project.processing"/>
      <ref name="processor"/>
      <ref name="opener"/>
      <ref name="build"/>
      <ref name="variables"/>
    </choice>
  </define>
  <!--
    =============================================================================
                                         user
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ users ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="users">
    <element name="users">
      <ref name="users.content"/>
    </element>
  </define>
  <define name="users.content">
    <oneOrMore>
      <ref name="user"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ user ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="user">
    <element name="user">
      <ref name="user.attributes"/>
      <ref name="user.content"/>
    </element>
  </define>
  <define name="user.attributes">
    <interleave>
      <ref name="user.login.attribute"/>
      <optional>
        <ref name="user.status.attribute"/>
      </optional>
      <optional>
        <interleave>
          <ref name="created.attribute"/>
          <optional>
            <ref name="updated.attribute"/>
          </optional>
        </interleave>
      </optional>
    </interleave>
  </define>
  <define name="user.login.attribute">
    <attribute name="login">
      <data type="ID">
        <param name="minLength">2</param>
      </data>
    </attribute>
  </define>
  <define name="user.status.attribute">
    <attribute name="status">
      <choice>
        <value>draft</value>
        <value>active</value>
        <value>inactive</value>
      </choice>
    </attribute>
  </define>
  <define name="created.attribute">
    <attribute name="created">
      <data type="token">
        <param name="pattern">\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}</param>
      </data>
    </attribute>
  </define>
  <define name="updated.attribute">
    <attribute name="updated">
      <data type="token">
        <param name="pattern">\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}</param>
      </data>
    </attribute>
  </define>
  <define name="user.content">
    <interleave>
      <optional>
        <ref name="password"/>
      </optional>
      <ref name="name"/>
      <ref name="email"/>
      <optional>
        <ref name="language"/>
      </optional>
      <optional>
        <ref name="home"/>
      </optional>
      <optional>
        <ref name="page_size"/>
      </optional>
      <optional>
        <ref name="expiration"/>
      </optional>
      <optional>
        <ref name="ips"/>
      </optional>
      <optional>
        <ref name="permissions"/>
      </optional>
    </interleave>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ password ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="password">
    <element name="password">
      <ref name="password.attributes"/>
      <ref name="password.content"/>
    </element>
  </define>
  <define name="password.attributes">
    <optional>
      <ref name="hash.attribute"/>
    </optional>
  </define>
  <define name="hash.attribute">
    <attribute name="hash">
      <value>true</value>
    </attribute>
  </define>
  <define name="password.content">
    <data type="token">
      <param name="minLength">8</param>
    </data>
  </define>
  <!-- ~~~~~~~~~~~~~~ name, email, language, home, page_size, expiration ~~~~~~~~~~~ -->
  <define name="name">
    <element name="name">
      <data type="token">
        <param name="minLength">2</param>
      </data>
    </element>
  </define>
  <define name="email">
    <element name="email">
      <data type="token">
        <param name="pattern">[a-z0-9._%+\-]+@[a-z0-9.\-]+\.[a-z]{2,4}</param>
      </data>
    </element>
  </define>
  <define name="language">
    <element name="language">
      <ref name="lang.enumeration"/>
    </element>
  </define>
  <define name="home">
    <element name="home">
      <choice>
        <value>storages</value>
        <value>projects</value>
        <value>site</value>
      </choice>
    </element>
  </define>
  <define name="page_size">
    <element name="page_size">
      <data type="positiveInteger"/>
    </element>
  </define>
  <define name="expiration">
    <element name="expiration">
      <data type="date"/>
    </element>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ IP ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ ips -->
  <define name="ips">
    <element name="ips">
      <ref name="ips.content"/>
    </element>
  </define>
  <define name="ips.content">
    <oneOrMore>
      <ref name="ip"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ ip -->
  <define name="ip">
    <element name="ip">
      <ref name="ip.content"/>
    </element>
  </define>
  <define name="ip.content">
    <data type="token">
      <param name="pattern">\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3}</param>
    </data>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ permission ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ permissions -->
  <define name="permissions">
    <element name="permissions">
      <ref name="permissions.content"/>
    </element>
  </define>
  <define name="permissions.content">
    <oneOrMore>
      <ref name="permission"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ permission -->
  <define name="permission">
    <element name="permission">
      <ref name="permission.attributes"/>
      <ref name="permission.content"/>
    </element>
  </define>
  <define name="permission.attributes">
    <ref name="scope.attribute"/>
  </define>
  <define name="scope.attribute">
    <attribute name="scope">
      <choice>
        <value>all</value>
        <value>doc</value>
        <value>usr</value>
        <value>grp</value>
        <value>stg</value>
        <value>idx</value>
        <value>prj</value>
      </choice>
    </attribute>
  </define>
  <define name="permission.content">
    <choice>
      <value>manager</value>
      <value>editor</value>
      <value>user</value>
    </choice>
  </define>
  <!--
    =============================================================================
                                       group
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ groups ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="groups">
    <element name="groups">
      <ref name="groups.content"/>
    </element>
  </define>
  <define name="groups.content">
    <oneOrMore>
      <ref name="group"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ group ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="group">
    <element name="group">
      <ref name="group.attributes"/>
      <ref name="group.content"/>
    </element>
  </define>
  <define name="group.attributes">
    <ref name="group.id.attribute"/>
  </define>
  <define name="group.id.attribute">
    <attribute name="xml:id">
      <data type="ID"/>
    </attribute>
  </define>
  <define name="group.content">
    <ref name="label"/>
    <optional>
      <ref name="description"/>
    </optional>
    <optional>
      <ref name="permissions"/>
    </optional>
    <optional>
      <ref name="group.members"/>
    </optional>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ group.member ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~ group.members -->
  <define name="group.members">
    <element name="members">
      <ref name="group.members.content"/>
    </element>
  </define>
  <define name="group.members.content">
    <oneOrMore>
      <ref name="group.member"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~ group.member -->
  <define name="group.member">
    <element name="member">
      <ref name="member.content"/>
    </element>
  </define>
  <define name="member.content">
    <data type="NCName"/>
  </define>
  <!--
    =============================================================================
                                      storage
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ storages ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="storages">
    <element name="storages">
      <ref name="storages.content"/>
    </element>
  </define>
  <define name="storages.content">
    <oneOrMore>
      <ref name="storage"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ storage ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="storage">
    <element name="storage">
      <ref name="storage.attributes"/>
      <ref name="storage.content"/>
    </element>
  </define>
  <define name="storage.attributes">
    <ref name="storage.id.attribute"/>
  </define>
  <define name="storage.id.attribute">
    <attribute name="id">
      <data type="NMTOKEN"/>
    </attribute>
  </define>
  <define name="storage.content">
    <ref name="label"/>
    <optional>
      <ref name="description"/>
    </optional>
    <ref name="vcs"/>
    <optional>
      <ref name="access"/>
    </optional>
    <optional>
      <ref name="refresh"/>
    </optional>
    <optional>
      <ref name="reset"/>
    </optional>
    <optional>
      <ref name="indexed"/>
    </optional>
    <optional>
      <ref name="storage.openers"/>
    </optional>
    <optional>
      <ref name="storage.members"/>
    </optional>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~ reset, access, refresh ~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="reset">
    <element name="reset">
      <data type="boolean"/>
    </element>
  </define>
  <define name="access">
    <element name="access">
      <choice>
        <value>open</value>
        <value>restricted</value>
        <value>closed</value>
      </choice>
    </element>
  </define>
  <define name="refresh">
    <element name="refresh">
      <data type="integer"/>
    </element>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ vcs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="vcs">
    <element name="vcs">
      <choice>
        <group>
          <attribute name="engine">
            <value>none</value>
          </attribute>
          <ref name="vcs.none.content"/>
        </group>
        <group>
          <attribute name="engine">
            <value>local</value>
          </attribute>
          <ref name="vcs.local.content"/>
        </group>
        <group>
          <attribute name="engine">
            <choice>
              <value>hg</value>
              <value>svn</value>
              <value>hgsvn</value>
            </choice>
          </attribute>
          <ref name="vcs.content"/>
        </group>
      </choice>
    </element>
  </define>
  <define name="vcs.none.content">
    <optional>
      <ref name="public"/>
    </optional>
  </define>
  <define name="vcs.local.content">
    <optional>
      <ref name="public"/>
    </optional>
  </define>
  <define name="vcs.content">
    <ref name="url"/>
    <optional>
      <ref name="vcs.user"/>
      <optional>
        <ref name="vcs.password"/>
      </optional>
    </optional>
  </define>
  <!-- ~~~~~ public -->
  <define name="public">
    <element name="public">
      <ref name="public.content"/>
    </element>
  </define>
  <define name="public.content">
    <data type="anyURI"/>
  </define>
  <!-- ~~~~~ url -->
  <define name="url">
    <element name="url">
      <ref name="url.content"/>
    </element>
  </define>
  <define name="url.content">
    <data type="anyURI"/>
  </define>
  <!-- ~~~~~ vcs.user, vcs.password -->
  <define name="vcs.user">
    <element name="user">
      <ref name="vcs.user.content"/>
    </element>
  </define>
  <define name="vcs.password">
    <element name="password">
      <ref name="vcs.password.attributes"/>
      <ref name="vcs.password.content"/>
    </element>
  </define>
  <define name="vcs.password.attributes">
    <optional>
      <ref name="encrypt.attribute"/>
    </optional>
  </define>
  <define name="encrypt.attribute">
    <attribute name="encrypt">
      <data type="boolean"/>
    </attribute>
  </define>
  <define name="vcs.user.content">
    <data type="NCName"/>
  </define>
  <define name="vcs.password.content">
    <data type="token"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ storage.opener ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ storage.openers -->
  <define name="storage.openers">
    <element name="openers">
      <ref name="storage.openers.content"/>
    </element>
  </define>
  <define name="storage.openers.content">
    <oneOrMore>
      <ref name="storage.opener"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ storage.opener -->
  <define name="storage.opener">
    <element name="opener">
      <ref name="storage.opener.content"/>
    </element>
  </define>
  <define name="storage.opener.content">
    <data type="NCName"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ storage.member ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~ storage.members -->
  <define name="storage.members">
    <element name="members">
      <ref name="storage.members.content"/>
    </element>
  </define>
  <define name="storage.members.content">
    <oneOrMore>
      <choice>
        <ref name="storage.member"/>
        <ref name="storage.member-group"/>
      </choice>
    </oneOrMore>
  </define>
  <!-- ~~~~~ storage.member -->
  <define name="storage.member">
    <element name="member">
      <ref name="storage.member.attributes"/>
      <ref name="member.content"/>
    </element>
  </define>
  <define name="storage.member.attributes">
    <interleave>
      <optional>
        <ref name="storage.permission.attribute"/>
      </optional>
      <optional>
        <ref name="in-menu.attribute"/>
      </optional>
      <optional>
        <ref name="vcs-user.attribute"/>
        <optional>
          <ref name="vcs-password.attribute"/>
        </optional>
      </optional>
    </interleave>
  </define>
  <define name="storage.permission.attribute">
    <attribute name="permission">
      <choice>
        <value>writer</value>
        <value>reader</value>
        <value>none</value>
      </choice>
    </attribute>
  </define>
  <define name="in-menu.attribute">
    <attribute name="in-menu">
      <data type="boolean"/>
    </attribute>
  </define>
  <define name="vcs-user.attribute">
    <attribute name="vcs-user">
      <ref name="vcs.user.content"/>
    </attribute>
  </define>
  <define name="vcs-password.attribute">
    <attribute name="vcs-password">
      <ref name="vcs.password.content"/>
    </attribute>
  </define>
  <!-- ~~~~~ storage.member-group -->
  <define name="storage.member-group">
    <element name="member-group">
      <ref name="storage.member-group.attributes"/>
      <ref name="member-group.content"/>
    </element>
  </define>
  <define name="storage.member-group.attributes">
    <optional>
      <ref name="storage.permission.attribute"/>
    </optional>
  </define>
  <define name="member-group.content">
    <data type="NCName"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ indexed ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="indexed">
    <element name="indexed">
      <ref name="indexed.content"/>
    </element>
  </define>
  <define name="indexed.content">
    <text/>
  </define>
  <!--
    =============================================================================
                                      indexer
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ indexers ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="indexers">
    <element name="indexers">
      <ref name="indexers.content"/>
    </element>
  </define>
  <define name="indexers.content">
    <oneOrMore>
      <ref name="indexer"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ indexer ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="indexer">
    <element name="indexer">
      <ref name="indexer.attributes"/>
      <choice>
        <group>
          <attribute name="value">
            <choice>
              <value>string</value>
              <value>integer</value>
              <value>date</value>
            </choice>
          </attribute>
          <ref name="indexer.content.string"/>
        </group>
        <group>
          <attribute name="value">
            <value>select</value>
          </attribute>
          <ref name="indexer.content.select"/>
        </group>
      </choice>
    </element>
  </define>
  <define name="indexer.attributes">
    <ref name="indexer.id.attribute"/>
  </define>
  <define name="indexer.id.attribute">
    <attribute name="id">
      <data type="NMTOKEN"/>
    </attribute>
  </define>
  <define name="indexer.content.string">
    <oneOrMore>
      <ref name="localized.label"/>
    </oneOrMore>
    <ref name="extractors"/>
  </define>
  <define name="indexer.content.select">
    <oneOrMore>
      <ref name="localized.label"/>
    </oneOrMore>
    <oneOrMore>
      <ref name="option"/>
    </oneOrMore>
    <ref name="extractors"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ extractor ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ extractors -->
  <define name="extractors">
    <element name="extractors">
      <ref name="extractors.content"/>
    </element>
  </define>
  <define name="extractors.content">
    <oneOrMore>
      <ref name="extractor"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ extractor -->
  <define name="extractor">
    <element name="extractor">
      <ref name="extractor.attributes"/>
      <ref name="extractor.content"/>
    </element>
  </define>
  <define name="extractor.attributes">
    <ref name="extractor.type.attribute"/>
  </define>
  <define name="extractor.type.attribute">
    <attribute name="type">
      <choice>
        <value>regex</value>
        <value>xpath</value>
        <value>iim</value>
      </choice>
    </attribute>
  </define>
  <define name="extractor.content">
    <ref name="indexed"/>
    <ref name="parameter"/>
  </define>
  <!-- ~~~~~~ parameter -->
  <define name="parameter">
    <element name="parameter">
      <ref name="parameter.attributes"/>
      <ref name="parameter.content"/>
    </element>
  </define>
  <define name="parameter.attributes">
    <optional>
      <ref name="limit.attribute"/>
    </optional>
  </define>
  <define name="limit.attribute">
    <attribute name="limit">
      <data type="positiveInteger"/>
    </attribute>
  </define>
  <define name="parameter.content">
    <text/>
  </define>
  <!--
    =============================================================================
                                       project
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ projects ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="projects">
    <element name="projects">
      <ref name="projects.content"/>
    </element>
  </define>
  <define name="projects.content">
    <oneOrMore>
      <ref name="project"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ project ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="project">
    <element name="project">
      <ref name="project.attributes"/>
      <ref name="project.content"/>
    </element>
  </define>
  <define name="project.attributes">
    <ref name="project.status.attribute"/>
  </define>
  <define name="project.status.attribute">
    <attribute name="status">
      <choice>
        <value>draft</value>
        <value>active</value>
        <value>archived</value>
      </choice>
    </attribute>
  </define>
  <define name="project.content">
    <ref name="label"/>
    <optional>
      <ref name="description"/>
    </optional>
    <optional>
      <ref name="deadline"/>
    </optional>
    <optional>
      <ref name="roles"/>
    </optional>
    <optional>
      <ref name="project.processings"/>
    </optional>
    <optional>
      <ref name="tasks"/>
    </optional>
    <optional>
      <ref name="packs"/>
    </optional>
    <optional>
      <ref name="project.members"/>
    </optional>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ deadline ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="deadline">
    <element name="deadline">
      <ref name="deadline.content"/>
    </element>
  </define>
  <define name="deadline.content">
    <data type="date"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ role ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~ roles -->
  <define name="roles">
    <element name="roles">
      <ref name="roles.content"/>
    </element>
  </define>
  <define name="roles.content">
    <oneOrMore>
      <ref name="role"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~ role -->
  <define name="role">
    <element name="role">
      <ref name="role.attributes"/>
      <ref name="role.content"/>
    </element>
  </define>
  <define name="role.attributes">
    <ref name="role.id.attribute"/>
  </define>
  <define name="role.id.attribute">
    <attribute name="xml:id">
      <data type="ID"/>
    </attribute>
  </define>
  <define name="role.content">
    <ref name="label"/>
    <optional>
      <ref name="description"/>
    </optional>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ project.processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~ project.processings -->
  <define name="project.processings">
    <element name="processings">
      <ref name="project.processings.content"/>
    </element>
  </define>
  <define name="project.processings.content">
    <oneOrMore>
      <ref name="project.processing"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~ project.processing -->
  <define name="project.processing">
    <element name="processing">
      <ref name="project.processing.attributes"/>
      <ref name="project.processing.content"/>
    </element>
  </define>
  <define name="project.processing.attributes">
    <optional>
      <ref name="processing.id.attribute"/>
    </optional>
  </define>
  <define name="processing.id.attribute">
    <attribute name="xml:id">
      <data type="ID"/>
    </attribute>
  </define>
  <define name="project.processing.content">
    <ref name="label"/>
    <optional>
      <ref name="description"/>
    </optional>
    <ref name="processing.processor"/>
    <optional>
      <ref name="project.variables"/>
    </optional>
    <optional>
      <ref name="resources"/>
    </optional>
    <optional>
      <ref name="templates"/>
    </optional>
    <optional>
      <ref name="output"/>
    </optional>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ task ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~ tasks -->
  <define name="tasks">
    <element name="tasks">
      <ref name="tasks.content"/>
    </element>
  </define>
  <define name="tasks.content">
    <oneOrMore>
      <ref name="task"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~ task -->
  <define name="task">
    <element name="task">
      <ref name="task.attributes"/>
      <ref name="task.content"/>
    </element>
  </define>
  <define name="task.attributes">
    <ref name="task.id.attribute"/>
  </define>
  <define name="task.id.attribute">
    <attribute name="xml:id">
      <data type="ID"/>
    </attribute>
  </define>
  <define name="task.content">
    <ref name="label"/>
    <optional>
      <ref name="description"/>
    </optional>
    <optional>
      <ref name="deadline"/>
    </optional>
    <optional>
      <ref name="task.processings"/>
    </optional>
    <ref name="operator"/>
    <optional>
      <ref name="links"/>
    </optional>
  </define>
  <!-- ~~~~~ task.processings -->
  <define name="task.processings">
    <element name="processings">
      <ref name="task.processings.content"/>
    </element>
  </define>
  <define name="task.processings.content">
    <oneOrMore>
      <ref name="task.processing"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~ task.processing -->
  <define name="task.processing">
    <element name="processing">
      <ref name="task.processing.attributes"/>
    </element>
  </define>
  <define name="task.processing.attributes">
    <ref name="ref.attribute"/>
  </define>
  <define name="ref.attribute">
    <attribute name="ref">
      <data type="IDREF"/>
    </attribute>
  </define>
  <!-- ~~~~~~ operator -->
  <define name="operator">
    <element name="operator">
      <choice>
        <group>
          <attribute name="type">
            <choice>
              <value>user</value>
              <value>role</value>
            </choice>
          </attribute>
          <ref name="operator.human.attributes"/>
        </group>
        <attribute name="type">
          <value>auto</value>
        </attribute>
      </choice>
    </element>
  </define>
  <define name="operator.human.attributes">
    <ref name="operator.id.attribute"/>
  </define>
  <define name="operator.id.attribute">
    <attribute name="id">
      <data type="NCName"/>
    </attribute>
  </define>
  <!-- ~~~~~~ links -->
  <define name="links">
    <element name="links">
      <ref name="links.content"/>
    </element>
  </define>
  <define name="links.content">
    <oneOrMore>
      <ref name="link"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ link -->
  <define name="link">
    <element name="link">
      <ref name="link.attributes"/>
    </element>
  </define>
  <define name="link.attributes">
    <interleave>
      <optional>
        <ref name="link.type.attribute"/>
      </optional>
      <ref name="task.attribute"/>
    </interleave>
  </define>
  <define name="link.type.attribute">
    <attribute name="type">
      <choice>
        <value>normal</value>
        <value>back</value>
        <value>kept</value>
        <value>redo</value>
      </choice>
    </attribute>
  </define>
  <define name="task.attribute">
    <attribute name="task">
      <data type="IDREF"/>
    </attribute>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ project.member ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~ project.members -->
  <define name="project.members">
    <element name="members">
      <ref name="project.members.content"/>
    </element>
  </define>
  <define name="project.members.content">
    <oneOrMore>
      <choice>
        <ref name="project.member"/>
        <ref name="project.member-group"/>
      </choice>
    </oneOrMore>
  </define>
  <!-- ~~~~~ project.member -->
  <define name="project.member">
    <element name="member">
      <ref name="project.member.attributes"/>
      <ref name="member.content"/>
    </element>
  </define>
  <define name="project.member.attributes">
    <interleave>
      <optional>
        <ref name="project.permission.attribute"/>
      </optional>
      <optional>
        <ref name="in-menu.attribute"/>
      </optional>
      <optional>
        <ref name="entries.attribute"/>
      </optional>
      <optional>
        <ref name="roles.attribute"/>
      </optional>
    </interleave>
  </define>
  <define name="project.permission.attribute">
    <attribute name="permission">
      <choice>
        <value>leader</value>
        <value>packmaker</value>
        <value>member</value>
        <value>none</value>
      </choice>
    </attribute>
  </define>
  <define name="entries.attribute">
    <attribute name="entries">
      <choice>
        <value>all</value>
        <value>packs</value>
        <value>tasks</value>
      </choice>
    </attribute>
  </define>
  <define name="roles.attribute">
    <attribute name="roles">
      <data type="IDREFS"/>
    </attribute>
  </define>
  <!-- ~~~~~ project.member-group -->
  <define name="project.member-group">
    <element name="member-group">
      <ref name="project.member-group.attributes"/>
      <ref name="member-group.content"/>
    </element>
  </define>
  <define name="project.member-group.attributes">
    <optional>
      <ref name="project.permission.attribute"/>
    </optional>
  </define>
  <!--
    =============================================================================
                                        Packs
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ packs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ packs -->
  <define name="packs">
    <element name="packs">
      <ref name="packs.content"/>
    </element>
  </define>
  <define name="packs.content">
    <oneOrMore>
      <ref name="project.pack"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ pack -->
  <define name="project.pack">
    <element name="pack">
      <ref name="project.pack.attributes"/>
      <ref name="project.pack.content"/>
    </element>
  </define>
  <define name="build.pack">
    <element name="pack">
      <ref name="build.pack.attributes"/>
      <ref name="build.pack.content"/>
    </element>
  </define>
  <define name="project.pack.attributes">
    <interleave>
      <optional>
        <ref name="recursive.attribute"/>
      </optional>
      <optional>
        <interleave>
          <ref name="created.attribute"/>
          <optional>
            <ref name="updated.attribute"/>
          </optional>
        </interleave>
      </optional>
    </interleave>
  </define>
  <define name="build.pack.attributes">
    <optional>
      <ref name="recursive.attribute"/>
    </optional>
  </define>
  <define name="recursive.attribute">
    <attribute name="recursive">
      <data type="boolean"/>
    </attribute>
  </define>
  <define name="project.pack.content">
    <ref name="label"/>
    <optional>
      <ref name="description"/>
    </optional>
    <optional>
      <ref name="files"/>
    </optional>
    <optional>
      <ref name="resources"/>
    </optional>
    <optional>
      <ref name="templates"/>
    </optional>
    <optional>
      <ref name="note"/>
    </optional>
    <optional>
      <ref name="events"/>
    </optional>
  </define>
  <define name="build.pack.content">
    <ref name="files"/>
    <optional>
      <ref name="resources"/>
    </optional>
    <optional>
      <ref name="templates"/>
    </optional>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ note ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="note">
    <element name="note">
      <ref name="note.content"/>
    </element>
  </define>
  <define name="note.content">
    <text/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ events ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ events -->
  <define name="events">
    <element name="events">
      <ref name="events.content"/>
    </element>
  </define>
  <define name="events.content">
    <oneOrMore>
      <ref name="event"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ event -->
  <define name="event">
    <element name="event">
      <ref name="event.attributes"/>
    </element>
  </define>
  <define name="event.attributes">
    <interleave>
      <optional>
        <ref name="begin.attribute"/>
      </optional>
      <ref name="event.task.attribute"/>
      <ref name="event.operator.attribute"/>
      <optional>
        <ref name="event.ref.attribute"/>
      </optional>
    </interleave>
  </define>
  <define name="begin.attribute">
    <attribute name="begin">
      <data type="token">
        <param name="pattern">\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d{1,6})?</param>
      </data>
    </attribute>
  </define>
  <define name="event.task.attribute">
    <attribute name="task"/>
  </define>
  <define name="event.operator.attribute">
    <attribute name="operator"/>
  </define>
  <define name="event.ref.attribute">
    <attribute name="ref">
      <data type="token">
        <param name="pattern">[\w_\-\.]+ ((user|role) [\w_\-\.]+|auto)</param>
      </data>
    </attribute>
  </define>
  <!--
    =============================================================================
                                       processor
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ processor ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="processor">
    <element name="processor">
      <ref name="processor.content"/>
    </element>
  </define>
  <define name="processor.content">
    <oneOrMore>
      <ref name="localized.label"/>
    </oneOrMore>
    <zeroOrMore>
      <ref name="localized.description"/>
    </zeroOrMore>
    <ref name="module"/>
    <optional>
      <ref name="ancestors"/>
    </optional>
    <optional>
      <ref name="processor.variables"/>
    </optional>
    <optional>
      <ref name="output"/>
    </optional>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ module ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="module">
    <element name="module">
      <ref name="module.content"/>
    </element>
  </define>
  <define name="module.content">
    <data type="token">
      <param name="pattern">[a-z.]+</param>
    </data>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ancestors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ ancestors -->
  <define name="ancestors">
    <element name="ancestors">
      <ref name="ancestors.content"/>
    </element>
  </define>
  <define name="ancestors.content">
    <oneOrMore>
      <ref name="ancestor"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ ancestor -->
  <define name="ancestor">
    <element name="ancestor">
      <ref name="ancestor.content"/>
    </element>
  </define>
  <define name="ancestor.content">
    <data type="NCName"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ output ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="output">
    <element name="output">
      <ref name="output.attributes"/>
      <ref name="output.content"/>
    </element>
  </define>
  <define name="output.attributes">
    <optional>
      <ref name="add2pack.attibute"/>
    </optional>
  </define>
  <define name="add2pack.attibute">
    <attribute name="add2pack">
      <choice>
        <value>result2files</value>
        <value>result2resources</value>
        <value>result2templates</value>
        <value>output2files</value>
        <value>output2resources</value>
        <value>output2templates</value>
        <value>smart</value>
      </choice>
    </attribute>
  </define>
  <define name="output.content">
    <text/>
  </define>
  <!--
    =============================================================================
                                       opener
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ opener ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="opener">
    <element name="opener">
      <ref name="opener.content"/>
    </element>
  </define>
  <define name="opener.content">
    <oneOrMore>
      <ref name="localized.label"/>
    </oneOrMore>
    <zeroOrMore>
      <ref name="localized.description"/>
    </zeroOrMore>
    <ref name="module"/>
    <optional>
      <ref name="ancestors"/>
    </optional>
    <optional>
      <ref name="imports"/>
    </optional>
    <optional>
      <ref name="seeds"/>
    </optional>
    <optional>
      <ref name="opener.variables"/>
    </optional>
    <optional>
      <ref name="opener.public"/>
    </optional>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ seeds ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ seeds -->
  <define name="seeds">
    <element name="seeds">
      <ref name="seeds.content"/>
    </element>
  </define>
  <define name="seeds.content">
    <oneOrMore>
      <ref name="seed"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ seed -->
  <define name="seed">
    <element name="seed">
      <ref name="seed.content"/>
    </element>
  </define>
  <define name="seed.content">
    <ref name="file"/>
    <oneOrMore>
      <ref name="localized.label"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ opener.public ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="opener.public">
    <element name="public">
      <ref name="opener.public.content"/>
    </element>
  </define>
  <define name="opener.public.content">
    <text/>
  </define>
  <!--
    =============================================================================
                                        build
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ build ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="build">
    <element name="build">
      <ref name="build.attributes"/>
      <ref name="build.content"/>
    </element>
  </define>
  <define name="build.attributes">
    <ref name="id.attribute"/>
  </define>
  <define name="id.attribute">
    <attribute name="id">
      <data type="NMTOKEN"/>
    </attribute>
  </define>
  <define name="build.content">
    <ref name="settings"/>
    <ref name="build.processing"/>
    <optional>
      <ref name="build.pack"/>
    </optional>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ settings ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~ settings -->
  <define name="settings">
    <element name="settings">
      <ref name="settings.content"/>
    </element>
  </define>
  <define name="settings.content">
    <element name="setting">
      <attribute name="key">
        <value>storage.root</value>
      </attribute>
      <ref name="setting.content"/>
    </element>
    <element name="setting">
      <attribute name="key">
        <value>build.root</value>
      </attribute>
      <ref name="setting.content"/>
    </element>
    <zeroOrMore>
      <ref name="setting"/>
    </zeroOrMore>
  </define>
  <!-- ~~~~~ setting -->
  <define name="setting">
    <element name="setting">
      <ref name="setting.attributes"/>
      <ref name="setting.content"/>
    </element>
  </define>
  <define name="setting.attributes">
    <ref name="setting.key.attribute"/>
  </define>
  <define name="setting.key.attribute">
    <attribute name="key">
      <data type="NCName"/>
    </attribute>
  </define>
  <define name="setting.content">
    <text/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ build.processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="build.processing">
    <element name="processing">
      <ref name="build.processing.content"/>
    </element>
  </define>
  <define name="build.processing.content">
    <ref name="processing.processor"/>
    <optional>
      <ref name="build.variables"/>
    </optional>
    <optional>
      <ref name="resources"/>
    </optional>
    <optional>
      <ref name="templates"/>
    </optional>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~ processing.processor ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="processing.processor">
    <element name="processor">
      <ref name="processing.processor.content"/>
    </element>
  </define>
  <define name="processing.processor.content">
    <data type="NCName"/>
  </define>
  <!--
    =============================================================================
                                     Variables
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ variables ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="variables">
    <element name="variables">
      <ref name="variables.content"/>
    </element>
  </define>
  <define name="processor.variables">
    <element name="variables">
      <ref name="processor.variables.content"/>
    </element>
  </define>
  <define name="opener.variables">
    <element name="variables">
      <ref name="opener.variables.content"/>
    </element>
  </define>
  <define name="project.variables">
    <element name="variables">
      <ref name="project.variables.content"/>
    </element>
  </define>
  <define name="build.variables">
    <element name="variables">
      <ref name="build.variables.content"/>
    </element>
  </define>
  <define name="variables.content">
    <oneOrMore>
      <ref name="var.group"/>
    </oneOrMore>
  </define>
  <define name="processor.variables.content">
    <choice>
      <oneOrMore>
        <ref name="var.group-file"/>
      </oneOrMore>
      <oneOrMore>
        <ref name="var.group"/>
      </oneOrMore>
    </choice>
  </define>
  <define name="opener.variables.content">
    <ref name="var.group-file"/>
  </define>
  <define name="project.variables.content">
    <oneOrMore>
      <ref name="project.var"/>
    </oneOrMore>
  </define>
  <define name="build.variables.content">
    <oneOrMore>
      <ref name="build.var"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ var.group ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="var.group">
    <element name="group">
      <ref name="var.group.attributes"/>
      <ref name="var.group.content"/>
    </element>
  </define>
  <define name="var.group.attributes">
    <optional>
      <ref name="name.attribute"/>
    </optional>
  </define>
  <define name="name.attribute">
    <attribute name="name">
      <data type="NMTOKEN"/>
    </attribute>
  </define>
  <define name="var.group.content">
    <oneOrMore>
      <ref name="localized.label"/>
    </oneOrMore>
    <zeroOrMore>
      <ref name="localized.description"/>
    </zeroOrMore>
    <oneOrMore>
      <ref name="var"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ var.group-file ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="var.group-file">
    <element name="group-file">
      <ref name="var.group-file.content"/>
    </element>
  </define>
  <define name="var.group-file.content">
    <choice>
      <data type="anyURI"/>
      <data type="token">
        <param name="pattern">\s*[a-zA-Z0-9_]+:[a-zA-Z0-9/_\-\.]+\s*</param>
      </data>
    </choice>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ var ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~ var -->
  <define name="var">
    <element name="var">
      <ref name="var.attributes"/>
      <choice>
        <group>
          <attribute name="type">
            <value>string</value>
          </attribute>
          <ref name="var.content.string"/>
        </group>
        <group>
          <attribute name="type">
            <value>text</value>
          </attribute>
          <optional>
            <attribute name="rows">
              <data type="positiveInteger"/>
            </attribute>
          </optional>
          <ref name="var.content.string"/>
        </group>
        <group>
          <attribute name="type">
            <value>boolean</value>
          </attribute>
          <ref name="var.content.boolean"/>
        </group>
        <group>
          <attribute name="type">
            <value>integer</value>
          </attribute>
          <ref name="var.content.integer"/>
        </group>
        <group>
          <attribute name="type">
            <value>select</value>
          </attribute>
          <ref name="var.content.select"/>
        </group>
        <group>
          <attribute name="type">
            <value>regex</value>
          </attribute>
          <ref name="var.content.regex"/>
        </group>
        <attribute name="type">
          <value>processing</value>
        </attribute>
      </choice>
      <ref name="var.content"/>
    </element>
  </define>
  <define name="project.var">
    <element name="var">
      <ref name="project.var.attributes"/>
      <ref name="project.var.content"/>
    </element>
  </define>
  <define name="build.var">
    <element name="var">
      <ref name="build.var.attributes"/>
      <ref name="value.content"/>
    </element>
  </define>
  <define name="var.attributes">
    <interleave>
      <ref name="name.attribute"/>
      <optional>
        <ref name="visible.attribute"/>
      </optional>
      <optional>
        <ref name="class.attribute"/>
      </optional>
      <optional>
        <ref name="cast.attribute"/>
      </optional>
    </interleave>
  </define>
  <define name="project.var.attributes">
    <interleave>
      <ref name="name.attribute"/>
      <optional>
        <ref name="visible.attribute"/>
      </optional>
    </interleave>
  </define>
  <define name="build.var.attributes">
    <ref name="name.attribute"/>
  </define>
  <define name="visible.attribute">
    <attribute name="visible">
      <data type="boolean"/>
    </attribute>
  </define>
  <define name="class.attribute">
    <attribute name="class">
      <data type="NMTOKENS"/>
    </attribute>
  </define>
  <define name="cast.attribute">
    <attribute name="cast">
      <data type="NMTOKEN"/>
    </attribute>
  </define>
  <define name="var.content.string">
    <optional>
      <ref name="default.string"/>
    </optional>
  </define>
  <define name="var.content.boolean">
    <optional>
      <ref name="default.boolean"/>
    </optional>
  </define>
  <define name="var.content.integer">
    <optional>
      <ref name="default.integer"/>
    </optional>
  </define>
  <define name="var.content.select">
    <optional>
      <ref name="default.select"/>
    </optional>
    <oneOrMore>
      <ref name="option"/>
    </oneOrMore>
  </define>
  <define name="var.content.regex">
    <optional>
      <ref name="default.regex"/>
    </optional>
    <ref name="pattern"/>
  </define>
  <define name="var.content">
    <oneOrMore>
      <ref name="localized.label"/>
    </oneOrMore>
    <zeroOrMore>
      <ref name="localized.description"/>
    </zeroOrMore>
  </define>
  <define name="project.var.content">
    <zeroOrMore>
      <ref name="value"/>
    </zeroOrMore>
    <optional>
      <ref name="default.string"/>
    </optional>
  </define>
  <!-- ~~~~~ default -->
  <define name="default.string">
    <element name="default">
      <text/>
    </element>
  </define>
  <define name="default.boolean">
    <element name="default">
      <data type="boolean"/>
    </element>
  </define>
  <define name="default.integer">
    <element name="default">
      <data type="integer"/>
    </element>
  </define>
  <define name="default.select">
    <element name="default">
      <text/>
    </element>
  </define>
  <define name="default.regex">
    <element name="default">
      <text/>
    </element>
  </define>
  <!-- ~~~~~ value -->
  <define name="value">
    <element name="value">
      <ref name="value.attributes"/>
      <ref name="value.content"/>
    </element>
  </define>
  <define name="value.attributes">
    <ref name="user.attribute"/>
  </define>
  <define name="user.attribute">
    <attribute name="user">
      <data type="NCName"/>
    </attribute>
  </define>
  <define name="value.content">
    <text/>
  </define>
  <!-- ~~~~~ option -->
  <define name="option">
    <element name="option">
      <ref name="option.attributes"/>
      <ref name="option.content"/>
    </element>
  </define>
  <define name="option.attributes">
    <optional>
      <ref name="value.attribute"/>
    </optional>
  </define>
  <define name="value.attribute">
    <attribute name="value"/>
  </define>
  <define name="option.content">
    <text/>
  </define>
  <!-- ~~~~~ pattern -->
  <define name="pattern">
    <element name="pattern">
      <ref name="pattern.content"/>
    </element>
  </define>
  <define name="pattern.content">
    <text/>
  </define>
  <!--
    =============================================================================
                          Files, resources, templates, imports
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ files ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~ files -->
  <define name="files">
    <element name="files">
      <ref name="files.content"/>
    </element>
  </define>
  <define name="files.content">
    <oneOrMore>
      <ref name="file"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~ file -->
  <define name="file">
    <element name="file">
      <ref name="file.attributes"/>
      <ref name="file.content"/>
    </element>
  </define>
  <define name="file.attributes">
    <optional>
      <ref name="visible.attribute"/>
    </optional>
  </define>
  <define name="file.content">
    <data type="anyURI"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ resources ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ resources -->
  <define name="resources">
    <element name="resources">
      <ref name="resources.content"/>
    </element>
  </define>
  <define name="resources.content">
    <oneOrMore>
      <ref name="resource"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ resource -->
  <define name="resource">
    <element name="resource">
      <ref name="resource.attributes"/>
      <ref name="resource.content"/>
    </element>
  </define>
  <define name="resource.attributes">
    <optional>
      <ref name="visible.attribute"/>
    </optional>
  </define>
  <define name="resource.content">
    <data type="anyURI"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ templates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ templates -->
  <define name="templates">
    <element name="templates">
      <ref name="templates.content"/>
    </element>
  </define>
  <define name="templates.content">
    <oneOrMore>
      <ref name="template"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ template -->
  <define name="template">
    <element name="template">
      <ref name="template.attributes"/>
      <ref name="template.content"/>
    </element>
  </define>
  <define name="template.attributes">
    <interleave>
      <ref name="template.to.attribute"/>
      <optional>
        <ref name="visible.attribute"/>
      </optional>
    </interleave>
  </define>
  <define name="template.to.attribute">
    <attribute name="to">
      <data type="anyURI"/>
    </attribute>
  </define>
  <define name="template.content">
    <data type="anyURI"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ imports ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ imports -->
  <define name="imports">
    <element name="imports">
      <ref name="imports.content"/>
    </element>
  </define>
  <define name="imports.content">
    <oneOrMore>
      <ref name="import"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ import -->
  <define name="import">
    <element name="import">
      <ref name="import.attributes"/>
      <ref name="import.content"/>
    </element>
  </define>
  <define name="import.attributes">
    <ref name="import.to.attribute"/>
  </define>
  <define name="import.to.attribute">
    <attribute name="to">
      <data type="anyURI"/>
    </attribute>
  </define>
  <define name="import.content">
    <choice>
      <data type="anyURI"/>
      <data type="token">
        <param name="pattern">\s*[a-zA-Z0-9_]+:[a-zA-Z0-9/_\-\.]+\s*</param>
      </data>
    </choice>
  </define>
  <!--
    =============================================================================
                                  Localized elements
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ label ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="label">
    <element name="label">
      <ref name="label.content"/>
    </element>
  </define>
  <define name="localized.label">
    <element name="label">
      <ref name="localized.label.attributes"/>
      <ref name="label.content"/>
    </element>
  </define>
  <define name="localized.label.attributes">
    <ref name="lang.attribute"/>
  </define>
  <define name="lang.attribute">
    <attribute name="xml:lang">
      <ref name="lang.enumeration"/>
    </attribute>
  </define>
  <define name="lang.enumeration">
    <choice>
      <value>en</value>
      <value>fr</value>
      <value>es</value>
    </choice>
  </define>
  <define name="label.content">
    <text/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ description ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="description">
    <element name="description">
      <ref name="description.content"/>
    </element>
  </define>
  <define name="localized.description">
    <element name="description">
      <ref name="localized.description.attributes"/>
      <ref name="description.content"/>
    </element>
  </define>
  <define name="localized.description.attributes">
    <ref name="lang.attribute"/>
  </define>
  <define name="description.content">
    <text/>
  </define>
</grammar>
