<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <!-- $Id: publiset.rng dc3df5b6adcb 2015/02/11 17:55:17 Patrick $ -->
  <start>
    <ref name="publiset"/>
  </start>
  <define name="publiset">
    <element name="publiset">
      <ref name="publiset.attributes"/>
      <ref name="publiset.content"/>
    </element>
  </define>
  <define name="publiset.attributes">
    <ref name="version.attribute"/>
  </define>
  <define name="version.attribute">
    <attribute name="version">
      <value>1.0</value>
    </attribute>
  </define>
  <define name="publiset.content">
    <oneOrMore>
      <choice>
        <ref name="composition"/>
        <ref name="selection"/>
      </choice>
    </oneOrMore>
  </define>
  <!--
    =============================================================================
                                     HEAD LEVEL
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ title, subtitle ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="title">
    <element name="title">
      <ref name="title.content"/>
    </element>
  </define>
  <define name="shorttitle">
    <element name="shorttitle">
      <ref name="title.content"/>
    </element>
  </define>
  <define name="subtitle">
    <element name="subtitle">
      <ref name="title.content"/>
    </element>
  </define>
  <define name="title.content">
    <ref name="inlines"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ identifier ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ identifier -->
  <define name="identifier">
    <element name="identifier">
      <choice>
        <group>
          <attribute name="type">
            <value>ean</value>
          </attribute>
          <optional>
            <ref name="for.attribute"/>
          </optional>
          <data type="token">
            <param name="pattern">\d{13}</param>
          </data>
        </group>
        <group>
          <attribute name="type">
            <value>uri</value>
          </attribute>
          <optional>
            <ref name="for.attribute"/>
          </optional>
          <data type="anyURI"/>
        </group>
      </choice>
    </element>
  </define>
  <define name="for.attribute">
    <attribute name="for">
      <data type="NCName"/>
    </attribute>
  </define>
  <!-- ~~~~~~ identifier.ean -->
  <define name="identifier.ean">
    <element name="identifier">
      <attribute name="type">
        <value>ean</value>
      </attribute>
      <optional>
        <ref name="for.attribute"/>
      </optional>
      <data type="token">
        <param name="pattern">\d{13}</param>
      </data>
    </element>
  </define>
  <!-- ~~~~~~ identifier.uri -->
  <define name="identifier.uri">
    <element name="identifier">
      <attribute name="type">
        <value>uri</value>
      </attribute>
      <optional>
        <ref name="for.attribute"/>
      </optional>
      <data type="anyURI"/>
    </element>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ copyright ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="copyright">
    <element name="copyright">
      <ref name="copyright.content"/>
    </element>
  </define>
  <define name="copyright.content">
    <ref name="simple.inlines"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ collection ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="collection">
    <element name="collection">
      <ref name="collection.content"/>
    </element>
  </define>
  <define name="collection.content">
    <ref name="simple.inlines"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ contributors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ contributors -->
  <define name="contributors">
    <element name="contributors">
      <ref name="contributors.content"/>
    </element>
  </define>
  <define name="contributors.content">
    <oneOrMore>
      <ref name="contributor"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ contributor -->
  <define name="contributor">
    <element name="contributor">
      <ref name="contributor.content"/>
    </element>
  </define>
  <define name="contributor.content">
    <optional>
      <ref name="identifier.uri"/>
    </optional>
    <choice>
      <group>
        <optional>
          <ref name="firstname"/>
          <optional>
            <ref name="secondname"/>
          </optional>
        </optional>
        <ref name="lastname"/>
      </group>
      <ref name="label"/>
    </choice>
    <optional>
      <ref name="address"/>
    </optional>
    <optional>
      <ref name="link"/>
    </optional>
    <oneOrMore>
      <ref name="role"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ firstname, secondname, lastname, label -->
  <define name="firstname">
    <element name="firstname">
      <ref name="firstname.content"/>
    </element>
  </define>
  <define name="secondname">
    <element name="secondname">
      <ref name="secondname.content"/>
    </element>
  </define>
  <define name="lastname">
    <element name="lastname">
      <ref name="lastname.content"/>
    </element>
  </define>
  <define name="label">
    <element name="label">
      <ref name="label.content"/>
    </element>
  </define>
  <define name="firstname.content">
    <ref name="simple.inlines"/>
  </define>
  <define name="secondname.content">
    <ref name="simple.inlines"/>
  </define>
  <define name="lastname.content">
    <ref name="simple.inlines"/>
  </define>
  <define name="label.content">
    <ref name="simple.inlines"/>
  </define>
  <!-- ~~~~~~ address -->
  <define name="address">
    <element name="address">
      <ref name="address.content"/>
    </element>
  </define>
  <define name="address.content">
    <ref name="simple.inlines"/>
  </define>
  <!-- ~~~~~~ role -->
  <define name="role">
    <element name="role">
      <ref name="role.content"/>
    </element>
  </define>
  <define name="role.content">
    <choice>
      <value>author</value>
      <value>illustrator</value>
      <value>publisher</value>
      <value>packager</value>
    </choice>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ source ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="source">
    <element name="source">
      <choice>
        <group>
          <attribute name="type">
            <value>book</value>
          </attribute>
          <ref name="source.content.book"/>
        </group>
        <group>
          <attribute name="type">
            <value>file</value>
          </attribute>
          <ref name="source.content.file"/>
        </group>
      </choice>
    </element>
  </define>
  <define name="source.content.book">
    <interleave>
      <optional>
        <ref name="identifier.ean"/>
      </optional>
      <ref name="title"/>
      <optional>
        <ref name="subtitle"/>
      </optional>
      <optional>
        <ref name="copyright"/>
      </optional>
      <optional>
        <ref name="collection"/>
      </optional>
      <optional>
        <ref name="folio"/>
      </optional>
      <optional>
        <ref name="pages"/>
      </optional>
    </interleave>
  </define>
  <define name="source.content.file">
    <ref name="identifier.uri"/>
  </define>
  <!-- ~~~~~~ folio -->
  <define name="folio">
    <element name="folio">
      <ref name="folio.content"/>
    </element>
  </define>
  <define name="folio.content">
    <choice>
      <data type="positiveInteger"/>
      <data type="token">
        <param name="pattern">[DLXVI]+</param>
      </data>
    </choice>
  </define>
  <!-- ~~~~~~ pages -->
  <define name="pages">
    <element name="pages">
      <ref name="pages.content"/>
    </element>
  </define>
  <define name="pages.content">
    <data type="positiveInteger"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ keyword & subject ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ keywordset -->
  <define name="keywordset">
    <element name="keywordset">
      <ref name="keywordset.content"/>
    </element>
  </define>
  <define name="keywordset.content">
    <oneOrMore>
      <ref name="keyword"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ keyword -->
  <define name="keyword">
    <element name="keyword">
      <ref name="keyword.content"/>
    </element>
  </define>
  <define name="keyword.content">
    <ref name="simple.inlines"/>
  </define>
  <!-- ~~~~~~ subjectset -->
  <define name="subjectset">
    <element name="subjectset">
      <ref name="subjectset.content"/>
    </element>
  </define>
  <define name="subjectset.content">
    <oneOrMore>
      <ref name="subject"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ subject -->
  <define name="subject">
    <element name="subject">
      <ref name="subject.content"/>
    </element>
  </define>
  <define name="subject.content">
    <ref name="simple.inlines"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ index ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ indexset -->
  <define name="indexset">
    <element name="indexset">
      <ref name="indexset.content"/>
    </element>
  </define>
  <define name="indexset.content">
    <oneOrMore>
      <ref name="head.index"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ index -->
  <define name="head.index">
    <element name="index">
      <ref name="head.index.content"/>
    </element>
  </define>
  <define name="head.index.content">
    <ref name="index.entry"/>
    <optional>
      <ref name="index.entry"/>
    </optional>
  </define>
  <!-- ~~~~~~ index.entry -->
  <define name="index.entry">
    <element name="entry">
      <ref name="simple.inlines"/>
    </element>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ abstract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="abstract">
    <element name="abstract">
      <ref name="abstract.content"/>
    </element>
  </define>
  <define name="abstract.content">
    <oneOrMore>
      <ref name="p"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ cover ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="cover">
    <element name="cover">
      <ref name="cover.content"/>
    </element>
  </define>
  <define name="cover.content">
    <ref name="cover.image"/>
  </define>
  <define name="cover.image">
    <element name="image">
      <ref name="cover.image.attributes"/>
    </element>
  </define>
  <define name="cover.image.attributes">
    <ref name="media.id.attribute"/>
  </define>
  <define name="media.id.attribute">
    <attribute name="id">
      <data type="NMTOKEN"/>
    </attribute>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ element ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="element">
    <element name="element">
      <ref name="element.attributes"/>
      <ref name="element.content"/>
    </element>
  </define>
  <define name="element.attributes">
    <ref name="name.attribute"/>
  </define>
  <define name="name.attribute">
    <attribute name="name">
      <data type="NCName"/>
    </attribute>
  </define>
  <define name="element.content">
    <choice>
      <ref name="inlines"/>
      <oneOrMore>
        <ref name="element"/>
      </oneOrMore>
    </choice>
  </define>
  <!--
    =============================================================================
                                     TOP LEVEL
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ composition ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ composition -->
  <define name="composition">
    <element name="composition">
      <ref name="composition.attributes"/>
      <ref name="composition.content"/>
    </element>
  </define>
  <define name="composition.attributes">
    <interleave>
      <ref name="composition.id.attribute"/>
      <optional>
        <ref name="lang.attribute"/>
      </optional>
      <optional>
        <ref name="path.attribute"/>
      </optional>
      <optional>
        <ref name="pi-source.attribute"/>
      </optional>
      <optional>
        <choice>
          <ref name="xpath.attribute"/>
          <ref name="xslt.attribute"/>
        </choice>
      </optional>
      <ref name="remap.attributes"/>
    </interleave>
  </define>
  <define name="composition.id.attribute">
    <attribute name="id">
      <data type="NMTOKEN"/>
    </attribute>
  </define>
  <define name="lang.attribute">
    <attribute name="xml:lang">
      <data type="language"/>
    </attribute>
  </define>
  <define name="path.attribute">
    <attribute name="path">
      <data type="anyURI"/>
    </attribute>
  </define>
  <define name="pi-source.attribute">
    <attribute name="pi-source">
      <data type="boolean"/>
    </attribute>
  </define>
  <define name="xpath.attribute">
    <attribute name="xpath"/>
  </define>
  <define name="xslt.attribute">
    <attribute name="xslt">
      <data type="anyURI"/>
    </attribute>
  </define>
  <define name="composition.content">
    <optional>
      <ref name="composition.head"/>
    </optional>
    <oneOrMore>
      <choice>
        <ref name="composition.division"/>
        <ref name="composition.file"/>
      </choice>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ composition.head -->
  <define name="composition.head">
    <element name="head">
      <ref name="composition.head.attributes"/>
      <ref name="composition.head.content"/>
    </element>
  </define>
  <define name="composition.head.attributes">
    <ref name="remap.attributes"/>
  </define>
  <define name="composition.head.content">
    <interleave>
      <optional>
        <ref name="title"/>
        <optional>
          <ref name="shorttitle"/>
        </optional>
        <zeroOrMore>
          <ref name="subtitle"/>
        </zeroOrMore>
      </optional>
      <zeroOrMore>
        <ref name="identifier"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="copyright"/>
      </zeroOrMore>
      <optional>
        <ref name="collection"/>
      </optional>
      <optional>
        <ref name="contributors"/>
      </optional>
      <optional>
        <ref name="date"/>
      </optional>
      <optional>
        <ref name="source"/>
        <optional>
          <ref name="source"/>
        </optional>
      </optional>
      <optional>
        <ref name="keywordset"/>
      </optional>
      <optional>
        <ref name="subjectset"/>
      </optional>
      <optional>
        <ref name="indexset"/>
      </optional>
      <optional>
        <ref name="abstract"/>
      </optional>
      <optional>
        <ref name="cover"/>
      </optional>
      <zeroOrMore>
        <ref name="element"/>
      </zeroOrMore>
    </interleave>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ selection ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ selection -->
  <define name="selection">
    <element name="selection">
      <ref name="selection.attributes"/>
      <ref name="selection.content"/>
    </element>
  </define>
  <define name="selection.attributes">
    <interleave>
      <ref name="selection.id.attribute"/>
      <optional>
        <ref name="lang.attribute"/>
      </optional>
      <optional>
        <ref name="path.attribute"/>
      </optional>
    </interleave>
  </define>
  <define name="selection.id.attribute">
    <attribute name="id">
      <data type="NMTOKEN"/>
    </attribute>
  </define>
  <define name="selection.content">
    <optional>
      <ref name="selection.head"/>
    </optional>
    <oneOrMore>
      <choice>
        <ref name="selection.division"/>
        <ref name="selection.file"/>
        <ref name="link"/>
      </choice>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ selection.head -->
  <define name="selection.head">
    <element name="head">
      <ref name="composition.head.content"/>
    </element>
  </define>
  <!--
    =============================================================================
                                   DIVISION LEVEL
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ division.head ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="division.head">
    <element name="head">
      <ref name="division.head.content"/>
    </element>
  </define>
  <define name="division.head.content">
    <interleave>
      <optional>
        <ref name="title"/>
        <optional>
          <ref name="shorttitle"/>
        </optional>
        <zeroOrMore>
          <ref name="subtitle"/>
        </zeroOrMore>
      </optional>
      <optional>
        <ref name="indexset"/>
      </optional>
      <zeroOrMore>
        <ref name="element"/>
      </zeroOrMore>
    </interleave>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ division ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ division -->
  <define name="composition.division">
    <element name="division">
      <ref name="composition.division.attributes"/>
      <ref name="composition.division.content"/>
    </element>
  </define>
  <define name="selection.division">
    <element name="division">
      <ref name="selection.division.attributes"/>
      <ref name="selection.division.content"/>
    </element>
  </define>
  <define name="composition.division.attributes">
    <interleave>
      <optional>
        <ref name="path.attribute"/>
      </optional>
      <optional>
        <choice>
          <ref name="xpath.attribute"/>
          <ref name="xslt.attribute"/>
        </choice>
      </optional>
      <ref name="remap.attributes"/>
    </interleave>
  </define>
  <define name="selection.division.attributes">
    <optional>
      <ref name="path.attribute"/>
    </optional>
  </define>
  <define name="composition.division.content">
    <optional>
      <ref name="composition.head"/>
    </optional>
    <oneOrMore>
      <choice>
        <ref name="composition.division"/>
        <ref name="composition.file"/>
      </choice>
    </oneOrMore>
  </define>
  <define name="selection.division.content">
    <optional>
      <ref name="selection.head"/>
    </optional>
    <oneOrMore>
      <choice>
        <ref name="selection.division"/>
        <ref name="selection.file"/>
        <ref name="link"/>
      </choice>
    </oneOrMore>
  </define>
  <!--
    =============================================================================
                                     FILE LEVEL
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ file ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="composition.file">
    <element name="file">
      <ref name="composition.file.attributes"/>
      <ref name="file.content"/>
    </element>
  </define>
  <define name="selection.file">
    <element name="file">
      <ref name="selection.file.attributes"/>
      <ref name="file.content"/>
    </element>
  </define>
  <define name="composition.file.attributes">
    <interleave>
      <optional>
        <ref name="path.attribute"/>
      </optional>
      <optional>
        <choice>
          <ref name="xpath.attribute"/>
          <ref name="xslt.attribute"/>
        </choice>
      </optional>
      <optional>
        <ref name="argument.attribute"/>
      </optional>
    </interleave>
  </define>
  <define name="selection.file.attributes">
    <optional>
      <ref name="path.attribute"/>
    </optional>
  </define>
  <define name="argument.attribute">
    <attribute name="argument"/>
  </define>
  <define name="file.content">
    <data type="anyURI"/>
  </define>
  <!--
    =============================================================================
                                    BLOCK LEVEL
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ p ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="p">
    <element name="p">
      <ref name="p.content"/>
    </element>
  </define>
  <define name="p.content">
    <ref name="inlines"/>
  </define>
  <!--
    =============================================================================
                                    INLINE LEVEL
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ inlines ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="simple.inlines">
    <mixed>
      <interleave>
        <zeroOrMore>
          <ref name="sup"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="sub"/>
        </zeroOrMore>
      </interleave>
    </mixed>
  </define>
  <define name="inlines">
    <mixed>
      <interleave>
        <zeroOrMore>
          <ref name="sup"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="sub"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="highlight"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="emphasis"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="name"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="date"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="link"/>
        </zeroOrMore>
      </interleave>
    </mixed>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sub, sup ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="sup">
    <element name="sup">
      <ref name="simple.inlines"/>
    </element>
  </define>
  <define name="sub">
    <element name="sub">
      <ref name="inlines"/>
    </element>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ highlight ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="highlight">
    <element name="highlight">
      <ref name="highlight.content"/>
    </element>
  </define>
  <define name="highlight.content">
    <ref name="inlines"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ emphasis ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="emphasis">
    <element name="emphasis">
      <ref name="emphasis.content"/>
    </element>
  </define>
  <define name="emphasis.content">
    <ref name="inlines"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ name ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="name">
    <element name="name">
      <ref name="name.attributes"/>
      <ref name="name.content"/>
    </element>
  </define>
  <define name="name.attributes">
    <optional>
      <ref name="name.of.attribute"/>
    </optional>
  </define>
  <define name="name.of.attribute">
    <attribute name="of">
      <choice>
        <value>person</value>
        <value>company</value>
        <value>book</value>
        <value>newspaper</value>
        <value>party</value>
        <value>movie</value>
        <value>painting</value>
      </choice>
    </attribute>
  </define>
  <define name="name.content">
    <mixed>
      <zeroOrMore>
        <ref name="sup"/>
      </zeroOrMore>
    </mixed>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ date ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="date">
    <element name="date">
      <ref name="date.attributes"/>
      <ref name="date.content"/>
    </element>
  </define>
  <define name="date.attributes">
    <ref name="date.value.attribute"/>
  </define>
  <define name="date.value.attribute">
    <attribute name="value">
      <choice>
        <data type="date"/>
        <data type="gYearMonth"/>
        <data type="gYear"/>
      </choice>
    </attribute>
  </define>
  <define name="date.content">
    <mixed>
      <zeroOrMore>
        <ref name="sup"/>
      </zeroOrMore>
    </mixed>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ link ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="link">
    <element name="link">
      <ref name="link.attributes"/>
      <ref name="link.content"/>
    </element>
  </define>
  <define name="link.attributes">
    <ref name="uri.attribute"/>
  </define>
  <define name="uri.attribute">
    <attribute name="uri">
      <data type="anyURI"/>
    </attribute>
  </define>
  <define name="link.content">
    <ref name="simple.inlines"/>
  </define>
  <!--
    =============================================================================
                                  REMAP ATTRIBUTES
    =============================================================================
  -->
  <define name="remap.attributes">
    <interleave>
      <optional>
        <ref name="as.attribute"/>
      </optional>
      <optional>
        <ref name="attributes.attribute"/>
      </optional>
      <optional>
        <ref name="transform.attribute"/>
      </optional>
    </interleave>
  </define>
  <define name="as.attribute">
    <attribute name="as">
      <data type="QName"/>
    </attribute>
  </define>
  <define name="attributes.attribute">
    <attribute name="attributes">
      <list>
        <oneOrMore>
          <data type="token">
            <param name="pattern">\c+=\S+</param>
          </data>
        </oneOrMore>
      </list>
    </attribute>
  </define>
  <define name="transform.attribute">
    <attribute name="transform">
      <data type="anyURI"/>
    </attribute>
  </define>
</grammar>
