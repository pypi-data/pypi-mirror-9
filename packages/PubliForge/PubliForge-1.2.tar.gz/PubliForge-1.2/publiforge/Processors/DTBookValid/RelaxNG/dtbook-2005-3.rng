<?xml version="1.0" encoding="UTF-8"?>
<!--
  $Id: dtbook-2005-3.rng 40d01dee2fb2 2014/09/27 07:30:21 Patrick $
  Digital Talking Book Relax NG v2005-3 2007-12-19
-->
<grammar ns="http://www.daisy.org/z3986/2005/dtbook/" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <start>
    <ref name="dtbook"/>
  </start>
  <define name="dtbook">
    <element name="dtbook">
      <ref name="attlist.dtbook"/>
      <ref name="dtbookcontent"/>
    </element>
  </define>
  <define name="attlist.dtbook">
    <interleave>
      <optional>
        <attribute name="version" a:defaultValue="2005-3">
          <value type="string" datatypeLibrary="">2005-3</value>
        </attribute>
      </optional>
      <ref name="i18n"/>
      <ref name="externalNamespaces"/>
    </interleave>
  </define>
  <define name="dtbookcontent">
    <ref name="head"/>
    <ref name="book"/>
  </define>
  <!--
    =============================================================================
                                    HEAD LEVEL
    =============================================================================
  -->
  <!--
    ~~~~~~ head
    Use: head contains metainformation about the book but no actual content of
    the book itself, which is placed in <book>.
    This information is consonant with the <head> information in xhtml,
    see [XHTML11STRICT].
  -->
  <define name="head">
    <element name="head">
      <ref name="attlist.head"/>
      <zeroOrMore>
        <ref name="headmisc"/>
      </zeroOrMore>
    </element>
  </define>
  <!--
    "profile" gives one or more whitespace-separated profile URI targets that
    may provide additional information about the current document.
  -->
  <define name="attlist.head">
    <interleave>
      <ref name="i18n"/>
      <optional>
        <attribute name="profile">
          <data type="anyURI"/>
        </attribute>
      </optional>
    </interleave>
  </define>
  <define name="headmisc">
    <choice>
      <ref name="meta"/>
      <ref name="link"/>
    </choice>
  </define>
  <!--
    ~~~~~~ meta
    Use: meta indicates metadata about the book. It is an empty
    element that may appear repeatedly only in <head>.
    Meta is the container for the Dublin Core attributes, 
    and the additional DTBook attributes.
    As a minumum the dc:Title and dtb:uid meta are required.
    Inclusion of the full range of applicable Dublin Core elements is 
    recommended, to make a DTBook document more useful as stand-alone 
    content.
    The Dublin Core specification is available at:
        http://purl.org/dc/
  -->
  <define name="meta">
    <element name="meta">
      <ref name="attlist.meta"/>
    </element>
  </define>
  <!--
    "http-equiv" connects the content attribute value to an http header field.
    "name" value identifies the specific kind of content value.
    "content" indicates the value for that "name",  possibly constrained by the
    semantics for the individual names.
    "scheme" indicates a predetermined format for interpreting the content value,
    such as the Dublin Core.
  -->
  <define name="attlist.meta">
    <interleave>
      <ref name="i18n"/>
      <optional>
        <attribute name="http-equiv">
          <data type="NMTOKEN"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="name">
          <data type="NMTOKEN"/>
        </attribute>
      </optional>
      <attribute name="content"/>
      <optional>
        <attribute name="scheme"/>
      </optional>
    </interleave>
  </define>
  <!--
    ~~~~~~ link
    Use: link is an empty element appearing in the <head> section
    of a document that establishes a connection between the current
    document and another document. The <link> element conveys
    relationship information (for example, "next" and "previous") that
    may be rendered by user agents in a variety of ways.
  -->
  <define name="link">
    <element name="link">
      <ref name="attlist.link"/>
    </element>
  </define>
  <!--
    Each attribute use indicated by a parameter entity is
    defined in the comment following its definition.
  -->
  <define name="attlist.link">
    <interleave>
      <ref name="attrs"/>
      <optional>
        <attribute name="charset">
          <ref name="Charset"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="href">
          <data type="anyURI"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="hreflang">
          <data type="language"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="type">
          <ref name="ContentType"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="rel">
          <ref name="LinkTypes"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="rev">
          <ref name="LinkTypes"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="media">
          <ref name="MediaDesc"/>
        </attribute>
      </optional>
    </interleave>
  </define>
  <!--
    =============================================================================
                                      BOOK LEVEL
    =============================================================================
  -->
  <!--
    ~~~~~~ book
    Use: book surrounds the actual content of the document, which
    is divided into <frontmatter>, <bodymatter>, and <rearmatter>.
    <head>, which contains metadata, precedes <book>.
  -->
  <define name="book">
    <element name="book">
      <ref name="attlist.book"/>
      <optional>
        <ref name="frontmatter"/>
      </optional>
      <optional>
        <ref name="bodymatter"/>
      </optional>
      <optional>
        <ref name="rearmatter"/>
      </optional>
    </element>
  </define>
  <define name="attlist.book">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ frontmatter
    Use: frontmatter usually contains <doctitle> and <docauthor>, as
    well as preliminary material that is often enclosed in appropriate
    <level> or <level1>. Content may include copyright notice, foreword,
    acknowledgments, table of contents, etc. <frontmatter> serves as a
    guide to the content and nature of a <book>.
  -->
  <define name="frontmatter">
    <element name="frontmatter">
      <ref name="attlist.frontmatter"/>
      <ref name="doctitle"/>
      <optional>
        <ref name="covertitle"/>
      </optional>
      <zeroOrMore>
        <ref name="docauthor"/>
      </zeroOrMore>
      <zeroOrMore>
        <choice>
          <ref name="level"/>
          <ref name="level1"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.frontmatter">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ bodymatter
    Use: bodymatter consists of the text proper of a book, as contrasted
    with preliminary material <frontmatter> or supplementary information
    in <rearmatter>.
  -->
  <define name="bodymatter">
    <element name="bodymatter">
      <ref name="attlist.bodymatter"/>
      <oneOrMore>
        <choice>
          <ref name="level"/>
          <ref name="level1"/>
        </choice>
      </oneOrMore>
    </element>
  </define>
  <define name="attlist.bodymatter">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ bodymatter
    Use: rearmatter contains supplementary material such as
    appendices, glossaries, bibliographies, and indices. It follows
    the <bodymatter> of the book.
  -->
  <define name="rearmatter">
    <element name="rearmatter">
      <ref name="attlist.rearmatter"/>
      <oneOrMore>
        <choice>
          <ref name="level"/>
          <ref name="level1"/>
        </choice>
      </oneOrMore>
    </element>
  </define>
  <define name="attlist.rearmatter">
    <ref name="attrs"/>
  </define>
  <!--
    =============================================================================
                                RECURSIVE STRUCTURE LEVEL
    =============================================================================
  -->
  <!--
    ~~~~~~ level
    Use: level is an alternative tag for marking the major
    structures in a book. It may be used recursively, i.e., repeated
    indefinitely with each successive occurrence nesting within the
    previous. It may also be included in a subsequent higher level.
    At most one <hd> heading child may be used.
    Subordinate levels have greater depth. Contrast with the explicit
    <level1>...<level6> elements, which may not be intermixed with
    <level>.
  -->
  <define name="level">
    <element name="level">
      <ref name="attlist.level"/>
      <choice>
        <group>
          <ref name="hd"/>
          <oneOrMore>
            <choice>
              <ref name="docblockorinline"/>
              <ref name="level"/>
            </choice>
          </oneOrMore>
        </group>
        <group>
          <oneOrMore>
            <choice>
              <ref name="docblockorinline"/>
              <ref name="level"/>
            </choice>
          </oneOrMore>
          <optional>
            <ref name="hd"/>
            <oneOrMore>
              <choice>
                <ref name="docblockorinline"/>
                <ref name="level"/>
              </choice>
            </oneOrMore>
          </optional>
        </group>
      </choice>
    </element>
  </define>
  <!--
    "class" identifies the actual name (e.g., part,
    chapter, section, subsection) of the structure it marks.
    "depth" indicates the nesting depth, starting at 1.
  -->
  <define name="attlist.level">
    <interleave>
      <ref name="attrs"/>
      <optional>
        <attribute name="depth"/>
      </optional>
    </interleave>
  </define>
  <!--
    ~~~~~~ level1
    Use: level1 is the highest-level container of major divisions of
    a book. Used in <frontmatter>, <bodymatter>, and <rearmatter> to
    mark the largest divisions of the book (usually parts or chapters),
    inside which level2 subdivisions (often sections) may nest.
    The class attribute identifies the actual name (e.g., part, chapter)
    of the structure it marks. Contrast with <level>.
    At most one heading <h1> may be used.
  -->
  <define name="level1">
    <element name="level1">
      <ref name="attlist.level1"/>
      <choice>
        <group>
          <ref name="h1"/>
          <oneOrMore>
            <choice>
              <ref name="docblockorinline"/>
              <ref name="level2"/>
            </choice>
          </oneOrMore>
        </group>
        <group>
          <oneOrMore>
            <choice>
              <ref name="docblockorinline"/>
              <ref name="level2"/>
            </choice>
          </oneOrMore>
          <optional>
            <ref name="h1"/>
            <oneOrMore>
              <choice>
                <ref name="docblockorinline"/>
                <ref name="level2"/>
              </choice>
            </oneOrMore>
          </optional>
        </group>
      </choice>
    </element>
  </define>
  <define name="attlist.level1">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ level2
    Use: level2 contains subdivisions that nest within <level1>
    divisions. The class attribute identifies the actual name (e.g.,
    subpart, chapter, subsection) of the structure it marks.
    At most one heading <h2> may be used.
  -->
  <define name="level2">
    <element name="level2">
      <ref name="attlist.level2"/>
      <choice>
        <group>
          <ref name="h2"/>
          <oneOrMore>
            <choice>
              <ref name="docblockorinline"/>
              <ref name="level3"/>
            </choice>
          </oneOrMore>
        </group>
        <group>
          <oneOrMore>
            <choice>
              <ref name="docblockorinline"/>
              <ref name="level3"/>
            </choice>
          </oneOrMore>
          <optional>
            <ref name="h2"/>
            <oneOrMore>
              <choice>
                <ref name="docblockorinline"/>
                <ref name="level3"/>
              </choice>
            </oneOrMore>
          </optional>
        </group>
      </choice>
    </element>
  </define>
  <define name="attlist.level2">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ level3
    Use: level3 contains sub-subdivisions that nest within <level2>
    subdivisions (e.g., sub-subsections within subsections). The class
    attribute identifies the actual name (e.g., section, subpart,
    subsubsection) of the subordinate structure it marks.
    At most one heading <h3> may be used.
  -->
  <define name="level3">
    <element name="level3">
      <ref name="attlist.level3"/>
      <choice>
        <group>
          <ref name="h3"/>
          <oneOrMore>
            <choice>
              <ref name="docblockorinline"/>
              <ref name="level4"/>
            </choice>
          </oneOrMore>
        </group>
        <group>
          <oneOrMore>
            <choice>
              <ref name="docblockorinline"/>
              <ref name="level4"/>
            </choice>
          </oneOrMore>
          <optional>
            <ref name="h3"/>
            <oneOrMore>
              <choice>
                <ref name="docblockorinline"/>
                <ref name="level4"/>
              </choice>
            </oneOrMore>
          </optional>
        </group>
      </choice>
    </element>
  </define>
  <define name="attlist.level3">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ level4
    Use: level4 contains further subdivisions that nest within <level3>
    subdivisions. The class attribute identifies the actual name
    of the subordinate structure it marks.
    At most one heading <h4> may be used.
  -->
  <define name="level4">
    <element name="level4">
      <ref name="attlist.level4"/>
      <choice>
        <group>
          <ref name="h4"/>
          <oneOrMore>
            <choice>
              <ref name="docblockorinline"/>
              <ref name="level5"/>
            </choice>
          </oneOrMore>
        </group>
        <group>
          <oneOrMore>
            <choice>
              <ref name="docblockorinline"/>
              <ref name="level5"/>
            </choice>
          </oneOrMore>
          <optional>
            <ref name="h4"/>
            <oneOrMore>
              <choice>
                <ref name="docblockorinline"/>
                <ref name="level5"/>
              </choice>
            </oneOrMore>
          </optional>
        </group>
      </choice>
    </element>
  </define>
  <define name="attlist.level4">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ level5
    Use: level5 contains further subdivisions that nest within <level4>
    subdivisions. The class attribute identifies the actual name
    of the subordinate structure it marks.
    At most one heading <h5> may be used.
  -->
  <define name="level5">
    <element name="level5">
      <ref name="attlist.level5"/>
      <choice>
        <group>
          <ref name="h5"/>
          <oneOrMore>
            <choice>
              <ref name="docblockorinline"/>
              <ref name="level6"/>
            </choice>
          </oneOrMore>
        </group>
        <group>
          <oneOrMore>
            <choice>
              <ref name="docblockorinline"/>
              <ref name="level6"/>
            </choice>
          </oneOrMore>
          <optional>
            <ref name="h5"/>
            <oneOrMore>
              <choice>
                <ref name="docblockorinline"/>
                <ref name="level6"/>
              </choice>
            </oneOrMore>
          </optional>
        </group>
      </choice>
    </element>
  </define>
  <define name="attlist.level5">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ level6
    Use: level6 contains further subdivisions that nest within <level5>
    subdivisions. The class attribute identifies the actual name
    of the subordinate structure it marks.
    At most one heading <h6> may be used.
  -->
  <define name="level6">
    <element name="level6">
      <ref name="attlist.level6"/>
      <choice>
        <group>
          <ref name="h6"/>
          <oneOrMore>
            <ref name="docblockorinline"/>
          </oneOrMore>
        </group>
        <group>
          <oneOrMore>
            <ref name="docblockorinline"/>
          </oneOrMore>
          <optional>
            <ref name="h6"/>
            <oneOrMore>
              <ref name="docblockorinline"/>
            </oneOrMore>
          </optional>
        </group>
      </choice>
    </element>
  </define>
  <define name="attlist.level6">
    <ref name="attrs"/>
  </define>
  <!--
    =============================================================================
                               DTBOOK CONTENT MODELS
    =============================================================================
  -->
  <!--
    ~~~~~~ dtbookblocknoimggroup
    block elements unique to dtbook without imggroup.
  -->
  <define name="dtbookblocknoimggroup">
    <choice>
      <ref name="author"/>
      <ref name="prodnote"/>
      <ref name="sidebar"/>
      <ref name="note"/>
      <ref name="annotation"/>
      <ref name="externalblock"/>
    </choice>
  </define>
  <!--
    ~~~~~~ inlineinblock
    inlines that may alternatively be in block elements.
  -->
  <define name="inlineinblock">
    <choice>
      <ref name="a"/>
      <ref name="cite"/>
      <ref name="samp"/>
      <ref name="kbd"/>
      <ref name="pagenum"/>
    </choice>
  </define>
  <!--
    ~~~~~~ block
    block elements from [HTML401STRICT] dtd augmented by dtbook-unique
    elements (note: list container difers from html ol and ul.)
  -->
  <define name="block">
    <choice>
      <ref name="p"/>
      <ref name="list"/>
      <ref name="dl"/>
      <ref name="div"/>
      <ref name="blockquote"/>
      <ref name="img"/>
      <ref name="imggroup"/>
      <ref name="poem"/>
      <ref name="linegroup"/>
      <ref name="byline"/>
      <ref name="dateline"/>
      <ref name="epigraph"/>
      <ref name="table"/>
      <ref name="address"/>
      <ref name="line"/>
      <ref name="dtbookblocknoimggroup"/>
      <ref name="externalFlow"/>
    </choice>
  </define>
  <!--
    ~~~~~~ blocknoimggroup
    block elements from [HTML401STRICT] dtd augmented by dtbook-unique
    elements.
  -->
  <define name="blocknoimggroup">
    <choice>
      <ref name="p"/>
      <ref name="list"/>
      <ref name="dl"/>
      <ref name="div"/>
      <ref name="blockquote"/>
      <ref name="poem"/>
      <ref name="linegroup"/>
      <ref name="byline"/>
      <ref name="dateline"/>
      <ref name="epigraph"/>
      <ref name="table"/>
      <ref name="address"/>
      <ref name="line"/>
      <ref name="dtbookblocknoimggroup"/>
    </choice>
  </define>
  <!--
    ~~~~~~ docblockorinline
    common non-head elements for use with level or levelN
  -->
  <define name="docblockorinline">
    <choice>
      <ref name="doctitle"/>
      <ref name="docauthor"/>
      <ref name="covertitle"/>
      <ref name="bridgehead"/>
      <ref name="block"/>
      <ref name="inlineinblock"/>
    </choice>
  </define>
  <!--
    =============================================================================
                    DOCTITLE, DOCAUTHOR, COVERTITLE AND HEADINGS 
    =============================================================================
  -->
  <!--
    ~~~~~~ doctitle
    Use: doctitle marks the full title of the book, including any
    subtitles,  <frontmatter>. By convention <doctitle> should appear
    Contrast with covertitle.
  -->
  <define name="doctitle">
    <element name="doctitle">
      <ref name="attlist.doctitle"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.doctitle">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ docauthor
    Use: docauthor marks each author or editor of this work. Compare with
    <author>, used to mark the author of another work, within <blockquote>
    or <cite>.
  -->
  <define name="docauthor">
    <element name="docauthor">
      <ref name="attlist.docauthor"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.docauthor">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ covertitle
    Use: covertitle is the short title of a book, often found on the
    spine. It may be the same as the doctitle.
  -->
  <define name="covertitle">
    <element name="covertitle">
      <ref name="attlist.covertitle"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.covertitle">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ hd
    Use: hd marks the text of a heading in <level>, <poem>, <list>, <linegroup>,
    or <sidebar>.
  -->
  <define name="hd">
    <element name="hd">
      <ref name="attlist.hd"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.hd">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ h1
    Use: h1 contains the text of the heading for a <level1> structure.
  -->
  <define name="h1">
    <element name="h1">
      <ref name="attlist.h1"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.h1">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ h2
    Use: h2 contains the text of the heading for a <level2> structure.
  -->
  <define name="h2">
    <element name="h2">
      <ref name="attlist.h2"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.h2">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ h3
    Use: h3 contains the text of the heading for a <level3> structure.
  -->
  <define name="h3">
    <element name="h3">
      <ref name="attlist.h3"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.h3">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ h4
    Use: h4 contains the text of the heading for a <level4> structure.
  -->
  <define name="h4">
    <element name="h4">
      <ref name="attlist.h4"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.h4">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ h5
    Use: h5 contains the text of the heading for a <level5> structure.
  -->
  <define name="h5">
    <element name="h5">
      <ref name="attlist.h5"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.h5">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ h6
    Use: h6 contains the text of the heading for a <level6> structure.
  -->
  <define name="h6">
    <element name="h6">
      <ref name="attlist.h6"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.h6">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ bridgehead
    Use: bridgehead is a free-floating heading that is not associated with the
    hierarchical structure of a document. It may occur only subsidiary to one
    of the hierarchic elements. <hd> and <h1> ... <h6> are
    restricted to one occurrence per level or <level1> ... <level6>,
    respectively. <bridgehead> has no such restriction, but should be used
    only when it is clear that none of the structural headings is appropriate.
    See also <hd>.
  -->
  <define name="bridgehead">
    <element name="bridgehead">
      <ref name="attlist.bridgehead"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.bridgehead">
    <ref name="attrs"/>
  </define>
  <!--
    =============================================================================
                                   INLINE ENTITIES    
    =============================================================================
  -->
  <!--
    ~~~~~~ dtbookinline
    dtbook added inline text elements
  -->
  <define name="dtbookinline">
    <choice>
      <ref name="sent"/>
      <ref name="w"/>
      <ref name="pagenum"/>
      <ref name="prodnote"/>
      <ref name="annoref"/>
      <ref name="noteref"/>
      <ref name="externalinline"/>
      <ref name="externalFlow"/>
    </choice>
  </define>
  <!--
    ~~~~~~ inline
    inline text elements
  -->
  <define name="inline">
    <choice>
      <text/>
      <ref name="phrase"/>
      <ref name="special"/>
      <ref name="dtbookinline"/>
    </choice>
  </define>
  <!--
    ~~~~~~ inlinenoa
    inlinenoa excludes nested <a>
  -->
  <define name="inlinenoa">
    <choice>
      <text/>
      <ref name="phrase"/>
      <ref name="specialnoa"/>
      <ref name="dtbookinline"/>
    </choice>
  </define>
  <!--
    ~~~~~~ inlines
    inlines excludes direct nesting of sentences <sent>
  -->
  <define name="inlines">
    <choice>
      <text/>
      <ref name="phrase"/>
      <ref name="special"/>
      <ref name="pagenum"/>
      <ref name="w"/>
      <ref name="prodnote"/>
      <ref name="annoref"/>
      <ref name="noteref"/>
      <ref name="externalinline"/>
      <ref name="externalFlow"/>
    </choice>
  </define>
  <!--
    ~~~~~~ inlinew
    inlinew for word <w> excludes any of the %dtbookinline;
  -->
  <define name="inlinew">
    <choice>
      <text/>
      <ref name="phrase"/>
      <ref name="special"/>
      <ref name="externalinline"/>
      <ref name="externalFlow"/>
    </choice>
  </define>
  <!--
    ~~~~~~ inlinenopagenum
    inlinenopagenum excludes direct <pagenum> in <table> <th> and <td>.
  -->
  <define name="inlinenopagenum">
    <choice>
      <text/>
      <ref name="phrase"/>
      <ref name="special"/>
      <ref name="sent"/>
      <ref name="w"/>
      <ref name="annoref"/>
      <ref name="noteref"/>
      <ref name="externalinline"/>
    </choice>
  </define>
  <!--
    ~~~~~~ inlinenoprodnote
    inlinenoprodnote excludes direct <prodnote>, as they shouldn't nest
  -->
  <define name="inlinenoprodnote">
    <choice>
      <text/>
      <ref name="phrase"/>
      <ref name="special"/>
      <ref name="sent"/>
      <ref name="w"/>
      <ref name="pagenum"/>
      <ref name="annoref"/>
      <ref name="noteref"/>
      <ref name="externalinline"/>
    </choice>
  </define>
  <!--
    =============================================================================
                                     TEXT MARKUP
    =============================================================================
  -->
  <!--
    ~~~~~~ phrase
    inline text elements
  -->
  <define name="phrase">
    <choice>
      <ref name="em"/>
      <ref name="strong"/>
      <ref name="dfn"/>
      <ref name="code"/>
      <ref name="samp"/>
      <ref name="kbd"/>
      <ref name="cite"/>
      <ref name="abbr"/>
      <ref name="acronym"/>
    </choice>
  </define>
  <!--
    ~~~~~~ special
    special inline text elements
  -->
  <define name="special">
    <choice>
      <ref name="a"/>
      <ref name="img"/>
      <ref name="imggroup"/>
      <ref name="br"/>
      <ref name="q"/>
      <ref name="sub"/>
      <ref name="sup"/>
      <ref name="span"/>
      <ref name="bdo"/>
    </choice>
  </define>
  <!--
    ~~~~~~ specialnoa
    specialnoa inline text elements for anchor <a>
  -->
  <define name="specialnoa">
    <choice>
      <ref name="img"/>
      <ref name="imggroup"/>
      <ref name="br"/>
      <ref name="q"/>
      <ref name="sub"/>
      <ref name="sup"/>
      <ref name="span"/>
      <ref name="bdo"/>
    </choice>
  </define>
  <!--
    =============================================================================
                                     FLOW ENTITIES
    =============================================================================
  -->
  <!--
    ~~~~~~ flow
    flow elements add inlinenoprodnote to block
  -->
  <define name="flow">
    <choice>
      <ref name="inlinenoprodnote"/>
      <ref name="blocknoimggroup"/>
      <ref name="externalFlow"/>
    </choice>
  </define>
  <!--
    ~~~~~~ flownopagenum
    flownopagenum ideally excludes pagenum though can get in
    indirectly through elements of %blocknoimggroup;
  -->
  <define name="flownopagenum">
    <choice>
      <ref name="inlinenopagenum"/>
      <ref name="blocknoimggroup"/>
      <ref name="externalFlow"/>
    </choice>
  </define>
  <!--
    =============================================================================
                           IMPORTED PARAMETER ENTITY NAMES
    =============================================================================
  -->
  <!-- a single character from [ISO10646]. -->
  <define name="Character">
    <data type="string" datatypeLibrary=""/>
  </define>
  <!-- a character encoding, as per [RFC2045]. -->
  <define name="Charset">
    <data type="string" datatypeLibrary=""/>
  </define>
  <!-- media type, as per [RFC2046]. -->
  <define name="ContentType">
    <data type="string" datatypeLibrary=""/>
  </define>
  <!-- space-separated list of link types. -->
  <define name="LinkTypes">
    <data type="string" datatypeLibrary=""/>
  </define>
  <!--
    single or comma-separated list of media descriptors;
    possible values include BRAILLE, PRINT, PROJECTION, SPEECH, ALL,
    or the default SCREEN.
  -->
  <define name="MediaDesc">
    <data type="string" datatypeLibrary=""/>
  </define>
  <!--
    =============================================================================
                                  GENERIC ATTRIBUTES
    =============================================================================
  -->
  <!--
    ~~~~~~ coreattrs
    coreattrs are attributes permissible for most elements
    
    id       document-wide unique id
    class    space separated list of classes used for rendering
    title    advisory title/amplification
    xml:space	whitespace handling (see http://www.w3.org/TR/xml11/#sec-white-space)
  -->
  <define name="coreattrs">
    <interleave>
      <optional>
        <attribute name="id">
          <data type="ID"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="class"/>
      </optional>
      <optional>
        <attribute name="title"/>
      </optional>
      <optional>
        <attribute name="xml:space">
          <choice>
            <value>default</value>
            <value>preserve</value>
          </choice>
        </attribute>
      </optional>
      <ref name="externalNamespaces"/>
    </interleave>
  </define>
  <!--
    ~~~~~~ i18n
    i18n internationalization attributes
        xml:lang    language code (as per XML 1.0 spec)
        dir         direction for weak/neutral text
                    ltr=left to right
                    rtl=right to left
    
    xhtml recommendation: use xml:lang such as "en-US", on the major
    containing block, to provide source language for
    the #IMPLIED values of its descendent elements.
    See [RFC1556] for handling bi-directional text in MIME.
  -->
  <define name="i18n">
    <interleave>
      <optional>
        <attribute name="xml:lang">
          <data type="language"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="dir">
          <choice>
            <value>ltr</value>
            <value>rtl</value>
          </choice>
        </attribute>
      </optional>
    </interleave>
  </define>
  <!-- ~~~~~~ showin -->
  <define name="showin">
    <optional>
      <attribute name="showin">
        <choice>
          <value>xxx</value>
          <value>xxp</value>
          <value>xlx</value>
          <value>xlp</value>
          <value>bxx</value>
          <value>bxp</value>
          <value>blx</value>
          <value>blp</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <!--
    NOTE:
    With version 2005-2 of the DTD, the use of the showin attribute is deprecated.
    Following more modern conventions that have evolved since showin was
    originally added, the Z39.86 Maintenance Committee's intention is to use
    namespaces to distinguish output-format-specific information via extension
    modules
  -->
  <!--
    showin attribute applies for text elements to permit identification
    of the kinds of display appropriate for the element, so presentation
    choice by the reader among alternative readings can be provided, when
    appropriate. Values of showin are coded with three letters in order:
    "b"=Braille, "l"=Largeprint, and "p"=Print; or "x"=inappropriate:
    
        Value  Braille  Largeprint Print   Interpretation
    
        "xxx"                              hide
        "xxp"                      p       print only
        "xlx"           l                  largeprint only
        "xlp"           l          p       largeprint and print
        "bxx"   b                          braille only
        "bxp"   b                  p       braille and print
        "blx"   b       l                  braille and largeprint
        "blp"   b       l          p       braille, largeprint, and print
    
    There is no default value; this attribute value is implied
    from the most immediate ancestor that specifies a value.
    The usual default for showin is 'blp'. If only one showin
    value is needed it should be included with <book>.
    
    Different content for the same element (usually <prodnote>) meeting
    different needs is possible, with showin serving as a switch to
    differentiate among them. Both largeprint and print are appropriate
    for screen rendering as well as printing. Different corresponding
    styles may be appropriate.
    
    It is possible to include equivalent content from any major structure
    below <book> to provide the different content suitable for different
    media. These would be independent, sharing no direct content, possibly
    having common references to images, with different accompanying text
    descriptions.
  -->
  <!--
    ~~~~~~attrs
    %attrs; is part of most attribute lists. It includes
  -->
  <define name="attrs">
    <interleave>
      <ref name="coreattrs"/>
      <ref name="i18n"/>
      <optional>
        <attribute name="smilref"/>
      </optional>
      <ref name="showin"/>
    </interleave>
  </define>
  <!--
    %attrs; is part of most attribute lists. It includes
    
    %coreattrs; from which come the four #IMPLIED attributes:
        id, class, title, and xml:space
    
    %i18n; from which come the implied attributes: xml:lang, and dir
    
    smilref is a pointer to a [SMIL2.0] file, normally to the time container
        (SMIL <par> or <seq>) containing the media object that references this
        element. However, in a text-only DTB consisting of a sequence of
        text media objects, smilref points to the media object that
        references this element. smilref allows resumption of SMIL
        presentation at the proper location after navigation via dtbook file.
        All smilref values are expected to be added to an augmented
        version of the <dtbook> during production.
    
    %showin; (See entity declaration.)
  -->
  <!-- ~~~~~~ attrsrqd -->
  <define name="attrsrqd">
    <interleave>
      <attribute name="id">
        <data type="ID"/>
      </attribute>
      <optional>
        <attribute name="class"/>
      </optional>
      <optional>
        <attribute name="title"/>
      </optional>
      <optional>
        <attribute name="xml:space">
          <choice>
            <value>default</value>
            <value>preserve</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="smilref"/>
      </optional>
      <ref name="i18n"/>
      <ref name="showin"/>
      <ref name="externalNamespaces"/>
    </interleave>
  </define>
  <!--
    =============================================================================
                           DTBOOK EXTERNAL MODULE INCLUSION
    =============================================================================
  -->
  <!--
    placeholder for block element expansion from external modules;
    if changed, string in external subset begins " | blockelementname".
  -->
  <define name="externalblock">
    <notAllowed/>
  </define>
  <!--
    placeholder for inline element expansion from external modules;
    if changed, string in external subset begins " | inlineelementname".
  -->
  <define name="externalinline">
    <notAllowed/>
  </define>
  <!--
    placeholder for elements that can be either block or inline from 
    external modules; if changed, string in external subset begins 
    " | flowelementname".
  -->
  <define name="externalFlow">
    <notAllowed/>
  </define>
  <!--
    placeholder for namespace attributes for external modules.  These 
    attributes will be available on all elements.  If changed, string
    in external subset is in format 
       "xmlns:sample   CDATA #FIXED 'http://www.sample.org/example'"
  -->
  <define name="externalNamespaces">
    <empty/>
  </define>
  <!--
    =============================================================================
                                     INLINE ELEMENT
    =============================================================================
  -->
  <!--
    ~~~~~~ em
    Use: em indicates emphasis. Usually <em> is rendered in italics.
    Compare with <strong>.
  -->
  <define name="em">
    <element name="em">
      <ref name="attlist.em"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.em">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ string
    Use: strong marks stronger emphasis than <em>. Visually <strong> is
    usually rendered bold.
  -->
  <define name="strong">
    <element name="strong">
      <ref name="attlist.strong"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.strong">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ dfn
    Use: dfn marks the first occurrence of a word or term that is
    defined or explained there or elsewhere in <book>. Often
    <dfn> is rendered in italics, sometimes in parentheses.
  -->
  <define name="dfn">
    <element name="dfn">
      <ref name="attlist.dfn"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.dfn">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ kbd
    Use: kbd designates information that the reader is to input
    directly into a computer using the keyboard.
  -->
  <define name="kbd">
    <element name="kbd">
      <ref name="attlist.kbd"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.kbd">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ code
    Use: code designates a fragment of computer code.
  -->
  <define name="code">
    <element name="code">
      <ref name="attlist.code"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.code" combine="interleave">
    <interleave>
      <optional>
        <attribute name="id">
          <data type="ID"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="class"/>
      </optional>
      <optional>
        <attribute name="title"/>
      </optional>
      <optional>
        <attribute name="xml:space" a:defaultValue="preserve">
          <choice>
            <value>default</value>
            <value>preserve</value>
          </choice>
        </attribute>
      </optional>
      <ref name="externalNamespaces"/>
      <ref name="i18n"/>
      <optional>
        <attribute name="smilref"/>
      </optional>
      <ref name="showin"/>
    </interleave>
  </define>
  <!--
    ~~~~~~ samp
    Use: samp contains a sample of work created by the author for
    use as an example or template. For example, a sample business
    letter, resume, computer program output, or form.
  -->
  <define name="samp">
    <element name="samp">
      <ref name="attlist.samp"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.samp">
    <interleave>
      <optional>
        <attribute name="id">
          <data type="ID"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="class"/>
      </optional>
      <optional>
        <attribute name="title"/>
      </optional>
      <optional>
        <attribute name="xml:space" a:defaultValue="preserve">
          <choice>
            <value>default</value>
            <value>preserve</value>
          </choice>
        </attribute>
      </optional>
      <ref name="externalNamespaces"/>
      <ref name="i18n"/>
      <optional>
        <attribute name="smilref"/>
      </optional>
      <ref name="showin"/>
    </interleave>
  </define>
  <!--
    ~~~~~~ cite
    Use: cite marks a reference (or citation) to another document.
  -->
  <define name="cite">
    <element name="cite">
      <ref name="attlist.cite"/>
      <zeroOrMore>
        <choice>
          <ref name="inline"/>
          <ref name="title"/>
          <ref name="author"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.cite">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ abbr
    Use: abbr designates an abbreviation, a shortened form of a
    word. For examples: Mr., approx., lbs., rec'd.
    Contrast with <acronym>.
  -->
  <define name="abbr">
    <element name="abbr">
      <ref name="attlist.abbr"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.abbr">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ acronym
    Use: acronym marks a word formed from key letters (usually
    initials) of a group of words. For examples: UNESCO, NATO, XML, US.
    Contrast with <abbr>.
  -->
  <define name="acronym">
    <element name="acronym">
      <ref name="attlist.acronym"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <!--
    "title" value may expand that acronym.
    "pronounce" value 'yes' indicates that the
    acronym is pronounceable as a word (for example, NATO);
    'no' that the acronym is best presented as a sequence
    of letters (for examples, "XML" or  "US").
  -->
  <define name="attlist.acronym">
    <interleave>
      <ref name="attrs"/>
      <optional>
        <attribute name="pronounce">
          <choice>
            <value>yes</value>
            <value>no</value>
          </choice>
        </attribute>
      </optional>
    </interleave>
  </define>
  <!--
    ~~~~~~ sub
    Use: sub indicates a subscript character (printed below a
    character's normal baseline). Can be used recursively and/or
    intermixed with <sup>.
  -->
  <define name="sub">
    <element name="sub">
      <ref name="attlist.sub"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.sub">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ sup
    Use: sup marks a superscript character (printed above a
    character's normal baseline). Can be used recursively and/or
    intermixed with <sub>.
  -->
  <define name="sup">
    <element name="sup">
      <ref name="attlist.sup"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.sup">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ span
    Use: span is a generic container for use in inline settings
    when no specific tag exists for a given situation. The class
    attribute may describe the nature of the text it marks (e.g.,
    a typographical error). May be used to mark a class of items
    to which styles are to be applied. Compare with <div>, which
    is used in a block settings.
  -->
  <define name="span">
    <element name="span">
      <ref name="attlist.span"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.span">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ bdo
    Use: bdo is used in special cases where the automatic actions
    of the bi-directional algorithm would result in incorrect display.
  -->
  <define name="bdo">
    <element name="bdo">
      <ref name="attlist.bdo"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <!--
    "lang" indicates the language of the content.
    "dir" indicates the writing direction: 'ltr' is
    left-to-right, 'rtl' is right-to-left.
  -->
  <define name="attlist.bdo">
    <interleave>
      <ref name="coreattrs"/>
      <optional>
        <attribute name="xml:lang">
          <data type="language"/>
        </attribute>
      </optional>
      <attribute name="dir">
        <choice>
          <value>ltr</value>
          <value>rtl</value>
        </choice>
      </attribute>
      <optional>
        <attribute name="smilref"/>
      </optional>
      <ref name="showin"/>
    </interleave>
  </define>
  <!--
    =============================================================================
                             DTBOOK INLINE SENTENCE AND WORD
    =============================================================================
  -->
  <!--
    ~~~~~~ sent
    Use: sent marks a sentence.
  -->
  <define name="sent">
    <element name="sent">
      <ref name="attlist.sent"/>
      <zeroOrMore>
        <ref name="inlines"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.sent">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~~ w
    Use: w marks a word.
  -->
  <define name="w">
    <element name="w">
      <ref name="attlist.w"/>
      <zeroOrMore>
        <ref name="inlinew"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.w">
    <ref name="attrs"/>
  </define>
  <!--
    =============================================================================
                                    INLINE QUOTES
    =============================================================================
  -->
  <!--
    Use: q contains a short, inline quotation. Compare with
    <blockquote>, which marks a longer quotation set off from the
    surrounding text.
  -->
  <define name="q">
    <element name="q">
      <ref name="attlist.q"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <!-- "cite" may provide a URI reference. -->
  <define name="attlist.q">
    <interleave>
      <ref name="attrs"/>
      <optional>
        <attribute name="cite">
          <data type="anyURI"/>
        </attribute>
      </optional>
    </interleave>
  </define>
  <!--
    =============================================================================
                                      IMAGE
    =============================================================================
  -->
  <!--
    Image <img> comes from HTML. An <img> may be grouped
    using <imggroup>, with <caption>, and special
    usage instructions or description with <prodnote>. The <imggroup>
    element may contain one or more <img> and any associated
    <caption> and <prodnote>. Multiple <img> may share a single
    caption, or multiple <caption> may apply if several captions
    refer to a single <img>. Multiple <prodnote> may apply if
    different versions are needed for different media.
  -->
  <!-- measured in pixels, percent (nn%) -->
  <define name="Length">
    <data type="string" datatypeLibrary=""/>
  </define>
  <!--
    measured in integer pixels "n", percent "nn%" of display width,
    "0*" indicating minimum appropriate width based on column
    content, or "nn*" the relative proportional width (".5*" is
    half the available width after any explicit widths have been
    consumed). The lengths are separated by commas or whitespace.
  -->
  <define name="MultiLength">
    <data type="string" datatypeLibrary=""/>
  </define>
  <!--
    0 for no <table> border, positive integer for <table> border width
    in pixels.
  -->
  <define name="Pixels">
    <data type="string" datatypeLibrary=""/>
  </define>
  <!--
    ~~~~~~ img
    Use: img marks a visual image. An <img> will always contain an alt and
    generally contain a longdesc, a pointer to a related <prodnote>. The
    <img> may be referenced by a <caption> or <prodnote>, using, for
    example, the form <caption imgref="yyy">the Caption</caption> for
    the <img id="yyy">.
  -->
  <define name="img">
    <element name="img">
      <ref name="attlist.img"/>
      <empty/>
    </element>
  </define>
  <!--
    "src" specifies by URI the location of the image file.
    "alt" is used to supply a short description of the <img>.
    "longdesc" generally contains a pointer to a related
    <prodnote> that contains a detailed description of the <img>.
    The attributes "height" and "width" provide visual sizing
    information, measured in pixels.
  -->
  <define name="attlist.img">
    <interleave>
      <ref name="attrs"/>
      <attribute name="src">
        <data type="anyURI"/>
      </attribute>
      <attribute name="alt"/>
      <optional>
        <attribute name="longdesc">
          <data type="anyURI"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="height">
          <ref name="Length"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="width">
          <ref name="Length"/>
        </attribute>
      </optional>
    </interleave>
  </define>
  <!--
    ~~~~~~ imggroup
    Use: imggroup provides a container for one or more <img> and associated
    <caption>(s) and <prodnote>(s). A <prodnote> may contain a description
    of the image. The content model allows:
    
    1) multiple <img> if they share a caption, with the ids of
    each <img> in the <caption imgref="id1 id2 ...">,
    
    2) multiple <caption> if several captions refer to a single
    <img id="xxx"> where each caption has the same
    <caption imgref="xxx">,
    
    3) multiple <prodnote> if different versions are needed for different
    media (e.g., large print, braille, or print).  If several <prodnote>
    refer to a single <img id="xxx">, each prodnote has the same <prodnote
    imgref="xxx">.
    
    4) one or more <pagenum> if the image group spans several pages.
  -->
  <define name="imggroup">
    <element name="imggroup">
      <ref name="attlist.imggroup"/>
      <oneOrMore>
        <choice>
          <ref name="prodnote"/>
          <ref name="img"/>
          <ref name="caption"/>
          <ref name="pagenum"/>
        </choice>
      </oneOrMore>
    </element>
  </define>
  <define name="attlist.imggroup">
    <ref name="attrs"/>
  </define>
  <!--
    =============================================================================
                    BR, LINE, LINENUM, ADDRESS and DIV CONTENT MODELS
    =============================================================================
  -->
  <!--
    ~~~~~~ br
    Use: br marks a forced line break.
  -->
  <define name="br">
    <element name="br">
      <ref name="attlist.br"/>
      <empty/>
    </element>
  </define>
  <!--
    The %coreattrs; only appear, as there is no content
    to which the more general %attrs; apply.
  -->
  <define name="attlist.br">
    <ref name="coreattrs"/>
  </define>
  <!--
    ~~~~~~ line
    Use: line marks a single logical line of text. Often used in
    conjunction with <linenum> in documents with numbered lines.
  -->
  <define name="line">
    <element name="line">
      <ref name="attlist.line"/>
      <zeroOrMore>
        <choice>
          <ref name="inline"/>
          <ref name="linenum"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.line">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~linenum
    Use: linenum contains a line number, for example in legal text, or <poem>.
  -->
  <define name="linenum">
    <element name="linenum">
      <ref name="attlist.linenum"/>
      <text/>
    </element>
  </define>
  <define name="attlist.linenum">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ address
    Use: address contains a location at which a person or agency
    may be contacted. By use of <line> to contain content of the
    individual lines, the class attribute can be used to identify
    the content of that <line>. For example, class values might include:
    name, address, region (state. province, etc.), country, location
    code (such as zipcode, provincial code), phone, fax, email, etc.
  -->
  <define name="address">
    <element name="address">
      <ref name="attlist.address"/>
      <zeroOrMore>
        <choice>
          <ref name="inline"/>
          <ref name="line"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.address">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ div
    Use: div is a generic container for subdivisions of a book. The
    <level1> ... <level6> hierarchy, or the <level> tag used recursively,
    should mark the major hierarchical structures of a book, while <div>
    is used in less formal circumstances or when for production purposes
    it is desired that a structure should be treated differently.
    Compare with <span>, which is used in inline settings.
  -->
  <define name="div">
    <element name="div">
      <ref name="attlist.div"/>
      <oneOrMore>
        <ref name="docblockorinline"/>
      </oneOrMore>
    </element>
  </define>
  <!--
    "class" value can identify the
    actual name (e.g., part, chapter, letter) of the structure it marks.
  -->
  <define name="attlist.div">
    <ref name="attrs"/>
  </define>
  <!--
    =============================================================================
               DTBOOK BLOCK ELEMENTS: TITLE, AUTHOR, PRODNOTE, SIDEBAR
    =============================================================================
  -->
  <!--
    ~~~~~~ title
    Use: title contains the title of a <poem> or <cite> (citation)
  -->
  <define name="title">
    <element name="title">
      <ref name="attlist.title"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.title">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ author
    Use: author identifies the writer of a work other than this one.
    Contrast with <docauthor>,  which identifies the author of this work.
    <author> typically occurs within <poem>, <blockquote> or <cite>.
  -->
  <define name="author">
    <element name="author">
      <ref name="attlist.author"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.author">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ prodnote
    Use: prodnote contains language added to the alternative-format
    version by the producer; commonly used to:
    1) provide descriptions of one or more visual elements such
        as charts, graphs, etc.
    2) supply operating instructions
    3) describe differences between the print book and the audio
    version.
  -->
  <define name="prodnote">
    <element name="prodnote">
      <ref name="attlist.prodnote"/>
      <zeroOrMore>
        <ref name="flow"/>
      </zeroOrMore>
    </element>
  </define>
  <!--
    "imgref" identifies the space-separated id value(s)
    on pertinent images <img>.
    "render" indicates that the content is
    'required' or 'optional' for the user. If optional, some user
    preference may allow skipping over the content. But <prodnote
    render='required'> is essential content for the user. An
    audible cue could announce the presence of the <prodnote>.
    HB: 2004-03-25 35g: prodnote: use render="required" to achieve the explicit
    admonition such as caution, warning, danger, or hazard, from the
    text. Optionally put the specific admonition in the class attribute
    value, repeating it from the text.
  -->
  <define name="attlist.prodnote">
    <interleave>
      <ref name="attrs"/>
      <optional>
        <attribute name="imgref">
          <data type="IDREFS"/>
        </attribute>
      </optional>
      <attribute name="render">
        <choice>
          <value>required</value>
          <value>optional</value>
        </choice>
      </attribute>
    </interleave>
  </define>
  <!--
    ~~~~~~ sidebar
    Use: sidebar contains information supplementary to the main
    text and/or narrative flow and is often boxed and printed apart
    from the main text block on a page. It may have a heading <hd>.
  -->
  <define name="sidebar">
    <element name="sidebar">
      <ref name="attlist.sidebar"/>
      <zeroOrMore>
        <choice>
          <ref name="flow"/>
          <ref name="hd"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <!--
    HB: 2004-03-25 35g: sidebar: use render="required" to achieve the explicit
    admonition such as caution, warning, danger, or hazard, from the
    text. Optionally put the specific admonition in the class attribute
    value, repeating it from the text.
  -->
  <define name="attlist.sidebar">
    <interleave>
      <ref name="attrs"/>
      <attribute name="render">
        <choice>
          <value>required</value>
          <value>optional</value>
        </choice>
      </attribute>
    </interleave>
  </define>
  <!--
    ~~~~~~ node
    Use: note marks a footnote, endnote, etc. Any local reference to
    <note id="yyy"> is by <noteref idref="#yyy">.
  -->
  <define name="note">
    <element name="note">
      <ref name="attlist.note"/>
      <oneOrMore>
        <choice>
          <ref name="block"/>
          <ref name="inlineinblock"/>
        </choice>
      </oneOrMore>
    </element>
  </define>
  <define name="attlist.note">
    <ref name="attrsrqd"/>
  </define>
  <!--
    ~~~~~~ annotation
    Use: annotation is a comment on or explanation of a portion of
    a printed book. It differs from <note> in that an <annotation>
    is usually set in the margin or on a facing page, often with
    no explicit reference to it inserted in the text. Any local
    reference to <annotation id="xxx"> is by <annoref idref="#xxx">.
  -->
  <define name="annotation">
    <element name="annotation">
      <ref name="attlist.annotation"/>
      <oneOrMore>
        <choice>
          <ref name="block"/>
          <ref name="inlineinblock"/>
        </choice>
      </oneOrMore>
    </element>
  </define>
  <define name="attlist.annotation">
    <ref name="attrsrqd"/>
  </define>
  <!--
    =============================================================================
                                 BYLINE, EPIGRAPH, DATELINE
    =============================================================================
  -->
  <!--
    ~~~~~~ epigraph   
    Use: epigraph marks a quotation placed at the beginnihg of a work
    or a division of a work.
  -->
  <define name="epigraph">
    <element name="epigraph">
      <ref name="attlist.epigraph"/>
      <zeroOrMore>
        <ref name="flow"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.epigraph">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ byline
    Use: byline contains information about the creator of or contributor
    to a work. 
  -->
  <define name="byline">
    <element name="byline">
      <ref name="attlist.byline"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.byline">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ dateline
    Use: dateline contains information about the time and/or place at which
    a work was authored. 
  -->
  <define name="dateline">
    <element name="dateline">
      <ref name="attlist.dateline"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.dateline">
    <ref name="attrs"/>
  </define>
  <!--
    =============================================================================
                                   POEM, LINEGROUP
    =============================================================================
  -->
  <!--
    ~~~~~~ linegroup
    Use: linegroup provides means to group a set of lines of a <poem>.
  -->
  <define name="linegroup">
    <element name="linegroup">
      <ref name="attlist.linegroup"/>
      <zeroOrMore>
        <choice>
          <ref name="hd"/>
          <ref name="dateline"/>
          <ref name="epigraph"/>
          <ref name="byline"/>
          <ref name="linegroup"/>
          <ref name="line"/>
          <ref name="pagenum"/>
          <ref name="prodnote"/>
          <ref name="noteref"/>
          <ref name="annoref"/>
          <ref name="note"/>
          <ref name="annotation"/>
          <ref name="p"/>
          <ref name="blockquote"/>
          <ref name="img"/>
          <ref name="imggroup"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.linegroup">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ poem
    Use: poem is a complete <poem> or fragment thereof.
  -->
  <define name="poem">
    <element name="poem">
      <ref name="attlist.poem"/>
      <zeroOrMore>
        <choice>
          <ref name="title"/>
          <ref name="author"/>
          <ref name="hd"/>
          <ref name="dateline"/>
          <ref name="epigraph"/>
          <ref name="byline"/>
          <ref name="linegroup"/>
          <ref name="line"/>
          <ref name="pagenum"/>
          <ref name="img"/>
          <ref name="imggroup"/>
          <ref name="sidebar"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.poem">
    <ref name="attrs"/>
  </define>
  <!--
    =============================================================================
                                   ANCHOR ELEMENT
    =============================================================================
  -->
  <!--
    ~~~~~~ a
    Use: a contains an anchor, which is used to reference another
    location, within the same or another <dtbook>.
  -->
  <define name="a">
    <element name="a">
      <ref name="attlist.a"/>
      <zeroOrMore>
        <ref name="inlinenoa"/>
      </zeroOrMore>
    </element>
  </define>
  <!--
    "href" value may have three forms:
    
    1) '#idref', in the <dtbook>, to the element type having the
        referenced id value;
    
    2) 'uri', a uniform resource identifier to a resource, typically a
        document, see [RFC2396], possibly restricted to work with only
        the <dtbook> document content, as referenced content is
        expected to be available on the same media, and off-media
        references may not be available;
    
    3) 'uri#xxx', in the resource uri, the element with id='xxx'.
    
    Uses of the remaining attributes other than %attrs; are:
    
        "type" is advisory content MIME type of the target, see [RFC2046];
    
        "hreflang" is the language code of the href target, see [RFC4646];
    
        "rel" is a list of forward link type(s), the relationship(s)
            expressed by the href value to the target, space-separated
            if multiple;
    
        "rev" is a list of reverse link types, the relationship(s)
            to this location from the href target, space-separated
            if multiple;
    
        "accesskey"=accessibility key character shortcut;
    
        "tabindex"=tabbing order.
    
        "external" An external link points to media content that is not part 
            of the DTB.  The external media content must be rendered by an 
            external application, whether or not that content is renderable by 
            the DTB player.
  -->
  <define name="attlist.a" combine="interleave">
    <ref name="attrs"/>
    <optional>
      <attribute name="type">
        <ref name="ContentType"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="href">
        <data type="anyURI"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="hreflang">
        <data type="language"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="rel">
        <ref name="LinkTypes"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="rev">
        <ref name="LinkTypes"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="accesskey">
        <ref name="Character"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="tabindex">
        <data type="integer"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="external" a:defaultValue="false">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <!--
    =============================================================================
                INLINE PAGE NUMBER, FOOTNOTE and ANNOTATION REFERENCE
    =============================================================================
  -->
  <!--
    ~~~~~~ pagenum
    Use: pagenum contains one page number as it appears from the print
    document, usually inserted at the point within the file immediately
    preceding the first item of content on a new page.
  -->
  <define name="pagenum">
    <element name="pagenum">
      <ref name="attlist.pagenum"/>
      <text/>
    </element>
  </define>
  <!--
    "page" allows three kinds of page numbering
    schemes to be identified:
    "front" (for roman-numeral pages at the start of a book), 
    "normal" (for pages identified by arabic numerals),
    or "special" (for all other kinds of pages)
    For multi-page continuous content,
    such as large <img> or <table>, put the sequence of <pagenum> on
    the page where that content starts.
  -->
  <define name="attlist.pagenum">
    <interleave>
      <ref name="attrsrqd"/>
      <optional>
        <attribute name="page" a:defaultValue="normal">
          <choice>
            <value>front</value>
            <value>normal</value>
            <value>special</value>
          </choice>
        </attribute>
      </optional>
    </interleave>
  </define>
  <!--
    ~~~~~~ noteref
    Use: noteref marks one or more characters that reference a footnote
    or endnote <note>. Contrast with <annoref>. <noteref> and <note>
    are independently skippable.
  -->
  <define name="noteref">
    <element name="noteref">
      <ref name="attlist.noteref"/>
      <text/>
    </element>
  </define>
  <!--
    "idref" is a URI pointing to the target note, either within
    same document or in another document.  For example:
    <noteref idref='#yyy'> refers to <note id='yyy'> within same document.
    <noteref idref='foobar.xml#xxx'> refers to <note id='xxx'> in document foobar.xml
    
    "type" provides advisory content MIME type of
    the target, see [RFC2046].
  -->
  <define name="attlist.noteref">
    <interleave>
      <ref name="attrs"/>
      <attribute name="idref">
        <data type="anyURI"/>
      </attribute>
      <optional>
        <attribute name="type">
          <ref name="ContentType"/>
        </attribute>
      </optional>
    </interleave>
  </define>
  <!--
    ~~~~~~ annoref
    Use: annoref marks a text segment that references an <annotation>.
    Each <annoref> is usually a word, phrase, or whole line that
    is part of the surrounding text (identified in the original
    print book by bolding, italics, etc.). It should not normally
    be allowed to be turned off in a DTB application.
  -->
  <define name="annoref">
    <element name="annoref">
      <ref name="attlist.annoref"/>
      <text/>
    </element>
  </define>
  <!--
    "idref" is a URI pointing to the target annotation, either within
    same document or in another document.  For example:
    <annoref idref='#yyy'> refers to <annotation id='yyy'> within same document.
    <annoref idref='foobar.xml#xxx'> refers to <annotation id='xxx'> in document foobar.xml
    
    "type" provides advisory content MIME
    type of the targeted id, see [RFC2046].
  -->
  <define name="attlist.annoref">
    <interleave>
      <ref name="attrs"/>
      <attribute name="idref">
        <data type="anyURI"/>
      </attribute>
      <optional>
        <attribute name="type">
          <ref name="ContentType"/>
        </attribute>
      </optional>
    </interleave>
  </define>
  <!--
    =============================================================================
                                       PARAGRAPHS
    =============================================================================
  -->
  <!-- Use: p contains a paragraph, which may contain subsidiary <list> or <dl>. -->
  <define name="p">
    <element name="p">
      <ref name="attlist.p"/>
      <zeroOrMore>
        <choice>
          <ref name="inline"/>
          <ref name="list"/>
          <ref name="dl"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.p">
    <ref name="attrs"/>
  </define>
  <!--
    =============================================================================
                                 BLOCK-LIKE QUOTES
    =============================================================================
  -->
  <!--
    Use: blockquote indicates a block of quoted content that is set
    off from the surrounding text by paragraph breaks. Compare with
    <q>, which marks short, inline quotations.
  -->
  <define name="blockquote">
    <element name="blockquote">
      <ref name="attlist.blockquote"/>
      <zeroOrMore>
        <choice>
          <ref name="pagenum"/>
          <ref name="block"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <!--
    "cite" permits inclusion of the
    URI from which the <blockquote> came.
  -->
  <define name="attlist.blockquote">
    <interleave>
      <ref name="attrs"/>
      <optional>
        <attribute name="cite">
          <data type="anyURI"/>
        </attribute>
      </optional>
    </interleave>
  </define>
  <!--
    =============================================================================
                           DEFINITION LIST, AND OTHER LISTS
    =============================================================================
  -->
  <!--
    ~~~~~~ dl
    Use: dl contains a definition list, usually consisting of pairs of
    terms <dt> and definitions <dd>. Any definition can contain another
    definition list.
  -->
  <define name="dl">
    <element name="dl">
      <ref name="attlist.dl"/>
      <oneOrMore>
        <choice>
          <ref name="dt"/>
          <ref name="dd"/>
          <ref name="pagenum"/>
        </choice>
      </oneOrMore>
    </element>
  </define>
  <define name="attlist.dl">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ dt
    Use: dt marks a term in a definition list <dl> for which a
    definition <dd> follows.
  -->
  <define name="dt">
    <element name="dt">
      <ref name="attlist.dt"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.dt">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ dd
    Use: dd marks a definition of the preceding term <dt> within a
    definition list <dl>. A definition without a preceding <dt> has
    no semantic interpretation, but is visually presented aligned
    with other <dd>.
  -->
  <define name="dd">
    <element name="dd">
      <ref name="attlist.dd"/>
      <zeroOrMore>
        <ref name="flow"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.dd">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ list
    Use: list contains some form of list, ordered, unordered, or preformatted.
    The list may have intermixed heading <hd> (generally only one,
    possibly with <prodnote>) and an intermixture of list items <li>
    and <pagenum>. If bullets and outline enumerations are part of
    the preformatted print content, they are expected to prefix those list
    items in content, rather than be implicitly generated. Note: XHTML
    has explicitly distinguished list element types: ol for ordered,
    and ul for unordered, but not pl for preformatted.
  -->
  <define name="list">
    <element name="list">
      <ref name="attlist.list"/>
      <oneOrMore>
        <choice>
          <ref name="hd"/>
          <ref name="prodnote"/>
          <ref name="li"/>
          <ref name="pagenum"/>
        </choice>
      </oneOrMore>
    </element>
  </define>
  <!--
    "type" indicates whether the list items
    <li> are ordered 'ol' or 
             unordered 'ul' or
             preformatted 'pl'.
    "depth" indicates nesting depth of lists within list items <li>
    of ancestor lists, starting at 1.
    "enum" indicates the kind of enumeration:
        '1'=integer,
        'a'=lowercase,
        'A'=uppercase,
        'i'=lowercase Roman, or
        'I'=uppercase Roman.
    "start" value indicates the ordered list integer ordinal, impllcitly 1,
    to denote the first ordered list item. Its value is determined for the
    indicated enum type. A start value is useful when there is an injection
    of a different element type, such as <pageno>.
  -->
  <define name="attlist.list" combine="interleave">
    <interleave>
      <ref name="attrs"/>
      <attribute name="type">
        <choice>
          <value>ol</value>
          <value>ul</value>
          <value>pl</value>
        </choice>
      </attribute>
      <optional>
        <attribute name="depth"/>
      </optional>
      <optional>
        <attribute name="enum">
          <choice>
            <value>1</value>
            <value>a</value>
            <value>A</value>
            <value>i</value>
            <value>I</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="start"/>
      </optional>
    </interleave>
  </define>
  <!--
    ~~~~~~ li
    Use: li marks each list item in a <list>. <li> content may be
    either inline or block and may include other nested
    lists. Alternatively it may contain a sequence of list item
    components, <lic>, that identify regularly occurring content,
    such as the heading and page number of each entry in a
    table of contents.
  -->
  <define name="li">
    <element name="li">
      <ref name="attlist.li"/>
      <zeroOrMore>
        <choice>
          <ref name="flow"/>
          <ref name="lic"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.li">
    <ref name="attrs"/>
  </define>
  <!--
    ~~~~~~ lic
    Use: lic ("list item component") allows ordered substructure
    within a list item <li>. Used when a list item is made up of
    two or more components, as in a table of contents entry.
    The same number of <lic> should occur in each <li>. If not,
    correspondence of <lic> in different <li> is in order of
    occurrence for the current writing direction of the <li>.
  -->
  <define name="lic">
    <element name="lic">
      <ref name="attlist.lic"/>
      <zeroOrMore>
        <ref name="inline"/>
      </zeroOrMore>
    </element>
  </define>
  <!--
    class attribute may be used to identify the particular
    component of a list item <li>. For example, in a table of contents
    class values might include "section", and "pagenumber".
  -->
  <define name="attlist.lic">
    <ref name="attrs"/>
  </define>
  <!--
    =============================================================================
                                      TABLES
    =============================================================================
  -->
  <!--
    The XHTML <table> model is used, including the presentational
    attributes that have little meaning in Digital Talking Books,
    but may be useful for concurrent display in different media.
    That model is derived from IETF HTML table standard, see [RFC1942].
    
    Note: The XHTML <table> model has been enhanced from HTML to allow
    a simple <table> of one or more rows <tr>.
  -->
  <define name="Scope">
    <choice>
      <value>row</value>
      <value>col</value>
      <value>rowgroup</value>
      <value>colgroup</value>
    </choice>
  </define>
  <!--
    Scope specifies a set of data cells for which the <th> provides
    header information.
  -->
  <define name="TFrame">
    <choice>
      <value>void</value>
      <value>above</value>
      <value>below</value>
      <value>hsides</value>
      <value>lhs</value>
      <value>rhs</value>
      <value>vsides</value>
      <value>box</value>
      <value>border</value>
    </choice>
  </define>
  <!-- TFrame identifies the sides that are visually framed. -->
  <define name="TRules">
    <choice>
      <value>none</value>
      <value>groups</value>
      <value>rows</value>
      <value>cols</value>
      <value>all</value>
    </choice>
  </define>
  <!--
    %TRules identifies where visual rulings appear.
    If no Trules is present then assume:
    'none' if border is absent or border='0' otherwise 'all'.
  -->
  <define name="cellhalign">
    <optional>
      <attribute name="align">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
          <value>justify</value>
          <value>char</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="char">
        <ref name="Character"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="charoff">
        <ref name="Length"/>
      </attribute>
    </optional>
  </define>
  <!--
    % cellhalign
    cellhalign sets horizontal alignment of content in
    a table cell.
    
    char indicates a character expected in each table
    cell of a column that text should align on. The default is
    the decimal point for the current language.
    
    charoff sets the alignment offset of the first character
    to align on, as specified with char.
    
    Inheritance order for horizontal alignment is <th>|<td>,
    <tr>, <thead>|<tfoot>|<tbody>, <col>, <colgroup>, default. The
    default value is from the user agent, and may be affected
    by user preference. The recommended default alignment for
    <th> is center, and for <td> is left.
  -->
  <define name="cellvalign">
    <optional>
      <attribute name="valign">
        <choice>
          <value>top</value>
          <value>middle</value>
          <value>bottom</value>
          <value>baseline</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <!--
    % cellvalign
    valign sets vertical alignment of content in a table cell.
    
    Inheritance order for vertical alignment is <th>|<td>, <col>,
    <colgroup>, <tr>, <thead>|<tfoot>|<tbody>, default. The
    default value is from the user agent, and may be affected
    by user preference. The recommended default is middle.
  -->
  <!-- jpritchett@rfbd.org 2007-12-19:  Edited comment to reflect new content models -->
  <!--
    Use: table contains cells of tabular data arranged in rows and
    columns. A <table> may have a <caption>. It may have descriptions of
    the columns in <col>s or groupings of several <col> in <colgroup>.
    A simple <table> may be made up of just rows <tr>. Note the logical order of
    optional <thead>, optional <tfoot>, then one or more of either
    <tbody> or just rows <tr>. This order accommodates simple or large,
    complex tables. The <thead> and <tfoot> information usually helps
    identify content of the <tbody> rows, For a multiple-page print
    <table> the <thead> and <tfoot> are repeated on each page, but
    not redundantly tagged.
  -->
  <!-- jpritchett@rfbd.org 2007-12-19:  Added pagenum to content model -->
  <define name="table">
    <element name="table">
      <ref name="attlist.table"/>
      <optional>
        <ref name="caption"/>
      </optional>
      <choice>
        <zeroOrMore>
          <ref name="col"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="colgroup"/>
        </zeroOrMore>
      </choice>
      <optional>
        <ref name="thead"/>
      </optional>
      <optional>
        <ref name="tfoot"/>
      </optional>
      <choice>
        <oneOrMore>
          <ref name="tbody"/>
        </oneOrMore>
        <oneOrMore>
          <choice>
            <ref name="tr"/>
            <ref name="pagenum"/>
          </choice>
        </oneOrMore>
      </choice>
    </element>
  </define>
  <!--
    Attuse: table
    
    "summary" value provides a textual summary.
    
    The attributes: "width", "border", "frame", "rules", "cellspacing",
    and "cellpadding" provide visual presentation guidance. See their
    explanation in the comment following those parameter entity
    declarations.
  -->
  <define name="attlist.table" combine="interleave">
    <ref name="attrs"/>
    <optional>
      <attribute name="summary"/>
    </optional>
    <optional>
      <attribute name="width">
        <ref name="Length"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="border">
        <ref name="Pixels"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="frame">
        <ref name="TFrame"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="rules">
        <ref name="TRules"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="cellspacing">
        <ref name="Length"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="cellpadding">
        <ref name="Length"/>
      </attribute>
    </optional>
  </define>
  <!-- HB: 2004-03-25 36f: caption: removed use for <img>. -->
  <!-- MM: 2004-09-15: caption: changed content model to %flow;. -->
  <!--
    Use: caption describes a <table>, or <imggroup>. If used with
    <table> it must follow immediately after the <table> start tag. If used
    with <imggroup> it is not so constrained.
  -->
  <define name="caption">
    <element name="caption">
      <ref name="attlist.caption"/>
      <zeroOrMore>
        <ref name="flow"/>
      </zeroOrMore>
    </element>
  </define>
  <!-- jpritchett@rfbd.org:  2007-12-17 Corrected description of @imgref -->
  <!--
    Attuse: caption
    
    "imgref" value (or space-separated
    id values) identifies the id values of the <img>(s) to which the
    caption applies. Only references
    to images within the same document are allowed.
    Note: imgref is an extension for dtbook.
  -->
  <define name="attlist.caption" combine="interleave">
    <ref name="attrs"/>
    <optional>
      <attribute name="imgref">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <!--
    Use: thead marks header information in a <table>, consisting of
    one or more rows <tr> of <th> cells. Use <thead> to duplicate
    headers when breaking table across page boundaries, or for static
    headers when <tbody> sections are rendered in scrolling panel.
  -->
  <define name="thead">
    <element name="thead">
      <ref name="attlist.thead"/>
      <oneOrMore>
        <ref name="tr"/>
      </oneOrMore>
    </element>
  </define>
  <define name="attlist.thead" combine="interleave">
    <ref name="attrs"/>
    <ref name="cellhalign"/>
    <ref name="cellvalign"/>
  </define>
  <!--
    Use: tfoot marks footer information in a <table>, consisting of
    one or more rows <tr>, usually of <th> cells. Use <tfoot> to
    duplicate footers when breaking table across page boundaries,
    or for static footers when <tbody> sections are rendered in
    scrolling panel.
  -->
  <define name="tfoot">
    <element name="tfoot">
      <ref name="attlist.tfoot"/>
      <oneOrMore>
        <ref name="tr"/>
      </oneOrMore>
    </element>
  </define>
  <define name="attlist.tfoot" combine="interleave">
    <ref name="attrs"/>
    <ref name="cellhalign"/>
    <ref name="cellvalign"/>
  </define>
  <!--
    Use: tbody marks a group of rows in the main body of a <table>. If
    the <table> is divided into several sections, each consisting of a
    number of rows, each section would be separately tagged with <tbody>.
    The same <thead> and <tfoot> apply to every <tbody> section.
    Use multiple <tbody> sections when rules are needed between groups
    of table rows.
  -->
  <!-- jpritchett@rfbd.org 2007-12-19:  Added pagenum to content model -->
  <define name="tbody">
    <element name="tbody">
      <ref name="attlist.tbody"/>
      <oneOrMore>
        <choice>
          <ref name="tr"/>
          <ref name="pagenum"/>
        </choice>
      </oneOrMore>
    </element>
  </define>
  <define name="attlist.tbody" combine="interleave">
    <ref name="attrs"/>
    <ref name="cellhalign"/>
    <ref name="cellvalign"/>
  </define>
  <!--
    Use: colgroup groups adjacent columns <col> that are semantically
    related.
  -->
  <define name="colgroup">
    <element name="colgroup">
      <ref name="attlist.colgroup"/>
      <zeroOrMore>
        <ref name="col"/>
      </zeroOrMore>
    </element>
  </define>
  <!--
    Attuse: colgroup
    
    "span" causes the attributes of one
    col element to apply to more than one column, extending in the
    writing direction for the language. Span is ignored if
    any <col> are present.
    
    "width" specifies the width of the columns, e.g.
    
        width='64'        width in screen pixels
        width='0.5*'      relative width of 0.5
    
    "width" may contain a space- or comma-separated list of widths
    for each <col>, or percentages if values end in '%', or relative
    'nn*' to indicate a fractional portion of the remaining
    widths after more explicit forms have been specified for other
    columns in the colgroup (presumably the sum encompasses all
    the columns). '0*' indicates minimal acceptable width based
    on column content.
    
    The <col> in a <colgroup> may inherit attribute values
    from it, or the closest enclosing ancestor element:
    <thead>|<tfoot>|<tbody>. If none, then the values are up to the
    user agent, possibly by user preference.
  -->
  <define name="attlist.colgroup" combine="interleave">
    <ref name="attrs"/>
    <optional>
      <attribute name="span" a:defaultValue="1">
        <data type="NMTOKEN"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="width">
        <ref name="MultiLength"/>
      </attribute>
    </optional>
    <ref name="cellhalign"/>
    <ref name="cellvalign"/>
  </define>
  <!--
    Use: col elements define the alignment properties for cells in
    one or more columns.
  -->
  <define name="col">
    <element name="col">
      <ref name="attlist.col"/>
      <empty/>
    </element>
  </define>
  <!--
    Attuse: col
    "span" indicates how many columns the <col>
    extends, in the writing direction of the <table>. The
    attribute values apply to <th> and <td> that start in the
    column, even if they extend into the next column(s), by
    span value more than 1, and that next <col> may have different
    attribute values.
    
    "width" may contain a space- or comma-separated list of widths
    for each <col> of the span, or percentages if values end in '%',
    or relative 'nn*' to indicate a fractional portion of the remaining
    widths after more explicit forms have been specified for other
    columns in the span (presumably the sum encompasses all
    the columns of this span, and of other <colgroup>s). '0*' indicates
    minimal acceptable width based on individual <col> content.
    
    <col> may inherit attribute values from the most immediate
    enclosing ancestor element: <colgroup>, <thead>|<tbody>|<tfoot>.
    If none, it is up to the user agent, possibly by user preference.
  -->
  <define name="attlist.col" combine="interleave">
    <ref name="attrs"/>
    <optional>
      <attribute name="span" a:defaultValue="1">
        <data type="NMTOKEN"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="width">
        <ref name="MultiLength"/>
      </attribute>
    </optional>
    <ref name="cellhalign"/>
    <ref name="cellvalign"/>
  </define>
  <!-- Use: tr marks one row of a <table> containing <th> or <td> cells. -->
  <define name="tr">
    <element name="tr">
      <ref name="attlist.tr"/>
      <oneOrMore>
        <choice>
          <ref name="th"/>
          <ref name="td"/>
        </choice>
      </oneOrMore>
    </element>
  </define>
  <!--
    Attuse: tr
    
    %cellvalign; values provide default vertical alignment
    values for <th> and <td> in the row, overriding any from
        <thead>|<tbody>|<tfoot>, <col>, <colgroup>
    If none, it is up to the user agent, possibly by user preference.
    
    %cellhalign; values provide default horizontal alignment from
        <thead>|<tbody>|<tfoot>
    If none, it is up to the user agent, possibly by user preference.
    
  -->
  <define name="attlist.tr" combine="interleave">
    <ref name="attrs"/>
    <ref name="cellhalign"/>
    <ref name="cellvalign"/>
  </define>
  <!-- Use: th indicates a table cell containing header information. -->
  <define name="th">
    <element name="th">
      <ref name="attlist.th"/>
      <zeroOrMore>
        <ref name="flownopagenum"/>
      </zeroOrMore>
    </element>
  </define>
  <!--
    Attuse: th
    
    The uses of attributes other than %attrs; %cellvalign; and %cellhalign;
    are shown below. See [HTML401STRICT] for details and examples.
    
    "abbr" provides an abbreviated name for a <th> cell that can be used
    when referring to that <th> cell. Its default value is the cell content.
    
    "axis" is used to place cells into conceptual categories in order to
    provide improved access to information.
    
    "headers" provides the id value(s), used with <td> cells, to reference
    one or more cells with <th id="xxx"> that contain headings that
    collectively describe or qualify the content of the cell, for example
    <td headers="id1 id2">.
    
    "scope" identifies one of
        (row | rowgroup | column | colgroup)
    to which the header information applies.
    
    "rowspan" indicates the total number of rows that the cell extends, by
    default 1. All spanned cells share these attributes.
    
    "colspan" indicates the total number of columns the cell extends,
    by default 1, in the writing direction of the table. All spanned
    cells share these attributes.
  -->
  <define name="attlist.th" combine="interleave">
    <ref name="attrs"/>
    <optional>
      <attribute name="abbr"/>
    </optional>
    <optional>
      <attribute name="axis"/>
    </optional>
    <optional>
      <attribute name="headers">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="scope">
        <ref name="Scope"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="rowspan" a:defaultValue="1">
        <data type="NMTOKEN"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="colspan" a:defaultValue="1">
        <data type="NMTOKEN"/>
      </attribute>
    </optional>
    <ref name="cellhalign"/>
    <ref name="cellvalign"/>
  </define>
  <!-- Use: td indicates a table cell containing data. -->
  <define name="td">
    <element name="td">
      <ref name="attlist.td"/>
      <zeroOrMore>
        <ref name="flownopagenum"/>
      </zeroOrMore>
    </element>
  </define>
  <!--
    Attuse: td
    
    The uses of attributes other than %attrs; %cellhalign; and %cellvalign;
    are shown below.  See [HTML401STRICT] for details and examples.
    
    "abbr" provides an abbreviated name for a <th> cell that can be used
    when referring to that <th> cell. Its default value is the cell content.
    
    "axis" is used to place cells into conceptual categories in order to
    provide improved access to information.
    
    "headers" provides the id value(s), used with <td> cells, to reference
    one or more cells with <th id="xxx"> that contain headings that
    collectively describe or qualify the content of the cell, for example
    <td headers="id1 id2">.
    
    "scope" identifies one of
        (row | rowgroup | column | colgroup)
    to which the header information applies.
    
    "rowspan" indicates the total number of rows that the cell extends, by
    default 1. All spanned cells share these attributes.
    
    "colspan" indicates the total number of columns the cell extends,
    by default 1, in the writing direction of the table. All spanned
    cells share these attributes.
  -->
  <define name="attlist.td" combine="interleave">
    <ref name="attrs"/>
    <optional>
      <attribute name="abbr"/>
    </optional>
    <optional>
      <attribute name="axis"/>
    </optional>
    <optional>
      <attribute name="headers">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="scope">
        <ref name="Scope"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="rowspan" a:defaultValue="1">
        <data type="NMTOKEN"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="colspan" a:defaultValue="1">
        <data type="NMTOKEN"/>
      </attribute>
    </optional>
    <ref name="cellhalign"/>
    <ref name="cellvalign"/>
  </define>
</grammar>
