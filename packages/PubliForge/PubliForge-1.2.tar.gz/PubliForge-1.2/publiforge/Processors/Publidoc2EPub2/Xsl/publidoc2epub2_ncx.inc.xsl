<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: publidoc2epub2_ncx.inc.xsl b662575e42a4 2015/02/02 12:25:15 Patrick $ -->
<xsl:stylesheet version="1.1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns="http://www.daisy.org/z3986/2005/ncx/"
                xmlns:date="http://exslt.org/dates-and-times"
                extension-element-prefixes="date">

  <!--
      =========================================================================
      Template toc_ncx
      =========================================================================
  -->
  <xsl:template name="toc_ncx" >
    <xsl:variable name="has_children">
      <xsl:call-template name="has_toc_children"/>
    </xsl:variable>
    <xsl:document href="{$path}toc.ncx" method="xml"
                  encoding="utf-8" indent="yes">
      <xsl:comment> Generated by PubliForge, <xsl:value-of select="date:date-time()"/> </xsl:comment>
      <ncx version="2005-1">
        <xsl:attribute name="xml:lang"><xsl:value-of select="$lang"/></xsl:attribute>
        <head>
          <meta name="dtb:uid">
            <xsl:attribute name="content">
              <xsl:call-template name="identifier"/>
            </xsl:attribute>
          </meta>
          <meta name="dtb:totalPageCount" content="0"/>
          <meta name="dtb:maxPageNumber" content="0"/>
          <xsl:if test="head/cover or ($cover and not($cover='='))">
            <meta name="cover" content="h_{translate($fid, ' ', '_')}-cover"/>
          </xsl:if>
        </head>
        <docTitle>
          <text><xsl:call-template name="ncx_text"/></text>
        </docTitle>
        <xsl:apply-templates select="head/contributors/contributor" mode="toc_ncx"/>
        <navMap>
          <xsl:choose>
            <xsl:when test="$toc or $has_children='1' or ($index and .//index)">
              <xsl:if test="$toc">
                <navPoint id="navPoint-1" playOrder="1">
                  <navLabel><text><xsl:value-of select="$i18n_toc"/></text></navLabel>
                  <content src="{$fid}-toc{$html_ext}"/>
                </navPoint>
              </xsl:if>
              <xsl:apply-templates
                  select="../topic|../quiz|division|topic|quiz" mode="toc_ncx"/>
              <xsl:call-template name="index_ncx"/>
            </xsl:when>
            <xsl:otherwise>
              <navPoint id="navPoint-1" playOrder="1">
                <navLabel><text><xsl:call-template name="corpus_title_text"/></text></navLabel>
                <xsl:choose>
                  <xsl:when test="../quiz|quiz"><content src="{$fid}-quz-1{$html_ext}"/></xsl:when>
                  <xsl:otherwise><content src="{$fid}-tpc-1{$html_ext}"/></xsl:otherwise>
                </xsl:choose>
              </navPoint>
            </xsl:otherwise>
          </xsl:choose>
        </navMap>
      </ncx>
    </xsl:document>
  </xsl:template>

  <!--
      =========================================================================
      contributor mode toc_ncx
      =========================================================================
  -->
  <xsl:template match="contributor" mode="toc_ncx">
    <xsl:if test="role='author'">
      <docAuthor>
        <text>
          <xsl:if test="firstname">
            <xsl:call-template name="ncx_text">
              <xsl:with-param name="text">
                <xsl:apply-templates select="firstname" mode="text"/>
              </xsl:with-param>
            </xsl:call-template>
            <xsl:text> </xsl:text>
          </xsl:if>
          <xsl:if test="secondname">
            <xsl:call-template name="ncx_text">
              <xsl:with-param name="text">
                <xsl:apply-templates select="secondname" mode="text"/>
              </xsl:with-param>
            </xsl:call-template>
            <xsl:text> </xsl:text>
          </xsl:if>
          <xsl:call-template name="ncx_text">
            <xsl:with-param name="text">
              <xsl:apply-templates select="lastname|label" mode="text"/>
            </xsl:with-param>
          </xsl:call-template>
        </text>
      </docAuthor>
    </xsl:if>
  </xsl:template>

  <!--
      =========================================================================
      division mode toc_ncx
      =========================================================================
  -->
  <xsl:template match="division" mode="toc_ncx">
    <xsl:choose>
      <xsl:when test="head/title">
        <xsl:variable name="number">
          <xsl:call-template name="navpoint_number"/>
        </xsl:variable>
        <navPoint id="navPoint-{$number}" playOrder="{$number}">
          <navLabel>
            <text>
              <xsl:choose>
                <xsl:when test="head/shorttitle">
                  <xsl:call-template name="ncx_text">
                    <xsl:with-param name="text">
                      <xsl:apply-templates select="head/shorttitle" mode="text"/>
                    </xsl:with-param>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:call-template name="ncx_text"/>
                </xsl:otherwise>
              </xsl:choose>
              <xsl:for-each select="head/subtitle">
                <xsl:value-of select="$str_sep"/>
                <xsl:call-template name="ncx_text">
                  <xsl:with-param name="text">
                    <xsl:apply-templates mode="text"/>
                  </xsl:with-param>
                </xsl:call-template>
              </xsl:for-each>
            </text>
          </navLabel>
          <xsl:choose>
            <xsl:when test="$toc_division_depth&gt;count(ancestor::division)">
              <content
                  src="{$fid}-div-{count(preceding::division|ancestor::division)+1}{$html_ext}"/>
            </xsl:when>
            <xsl:when test="name(.//*[name()='topic' or name()='quiz'])='quiz'">
              <content
                  src="{$fid}-quz-{count(preceding::quiz)+1}{$html_ext}#level{count(ancestor::division)+1}"/>
            </xsl:when>
            <xsl:otherwise>
              <content
                  src="{$fid}-tpc-{count(preceding::topic)+1}{$html_ext}#level{count(ancestor::division)+1}"/>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:apply-templates select="division|topic|quiz" mode="toc_ncx"/>
        </navPoint>
      </xsl:when>

      <xsl:otherwise>
        <xsl:apply-templates select="division|topic|quiz" mode="toc_ncx"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!--
      =========================================================================
      topic mode toc_ncx
      =========================================================================
  -->
  <xsl:template match="topic" mode="toc_ncx">
    <xsl:choose>
      <xsl:when test="head/title or @type='title' or @type='copyright'
                      or @type='dedication' or @type='inscription'">
        <xsl:variable name="number">
          <xsl:call-template name="navpoint_number"/>
        </xsl:variable>
        <navPoint id="navPoint-{$number}" playOrder="{$number}">
          <navLabel>
            <text>
              <xsl:choose>
                <xsl:when test="@type='title'">
                  <xsl:value-of select="$i18n_title_page"/>
                </xsl:when>
                <xsl:when test="head/shorttitle">
                  <xsl:call-template name="ncx_text">
                    <xsl:with-param name="text">
                      <xsl:apply-templates select="head/shorttitle" mode="text"/>
                    </xsl:with-param>
                  </xsl:call-template>
                </xsl:when>
                <xsl:when test="head/title">
                  <xsl:call-template name="ncx_text"/>
                </xsl:when>
                <xsl:when test="@type='copyright'">
                  <xsl:value-of select="$i18n_copyright"/>
                </xsl:when>
                <xsl:when test="@type='dedication'">
                  <xsl:value-of select="$i18n_dedication"/>
                </xsl:when>
                <xsl:when test="@type='inscription'">
                  <xsl:value-of select="$i18n_inscription"/>
                </xsl:when>
              </xsl:choose>
              <xsl:if test="head/subtitle and not(head/shorttitle)
                            and (not(@type) or @type!='title')">
                <xsl:for-each select="head/subtitle">
                  <xsl:value-of select="$str_sep"/>
                  <xsl:call-template name="ncx_text">
                    <xsl:with-param name="text">
                      <xsl:apply-templates mode="text"/>
                    </xsl:with-param>
                  </xsl:call-template>
                </xsl:for-each>
              </xsl:if>
            </text>
          </navLabel>
          <content src="{$fid}-tpc-{count(preceding::topic)+1}{$html_ext}"/>
          <xsl:if test="$toc_section_depth &gt; 0">
            <xsl:apply-templates select="section" mode="toc_ncx"/>
            <xsl:apply-templates select="bibliography" mode="toc_ncx"/>
          </xsl:if>
        </navPoint>
      </xsl:when>

      <xsl:when test="$toc_section_depth &gt; 0">
        <xsl:apply-templates select="section" mode="toc_ncx"/>
        <xsl:apply-templates select="bibliography" mode="toc_ncx"/>
      </xsl:when>
    </xsl:choose>
  </xsl:template>

  <!--
      =========================================================================
      quiz mode toc_ncx
      =========================================================================
  -->
  <xsl:template match="quiz" mode="toc_ncx">
    <xsl:if test="head/title">
      <xsl:variable name="number">
        <xsl:call-template name="navpoint_number"/>
      </xsl:variable>
      <navPoint id="navPoint-{$number}" playOrder="{$number}">
        <navLabel>
          <text>
            <xsl:choose>
              <xsl:when test="head/shorttitle">
                <xsl:call-template name="ncx_text">
                  <xsl:with-param name="text">
                    <xsl:apply-templates select="head/shorttitle" mode="text"/>
                  </xsl:with-param>
                </xsl:call-template>
              </xsl:when>
              <xsl:otherwise>
                <xsl:call-template name="ncx_text"/>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:for-each select="head/subtitle">
              <xsl:value-of select="$str_sep"/>
              <xsl:call-template name="ncx_text">
                <xsl:with-param name="text">
                  <xsl:apply-templates mode="text"/>
                </xsl:with-param>
              </xsl:call-template>
            </xsl:for-each>
          </text>
        </navLabel>
        <content src="{$fid}-quz-{count(preceding::quiz)+1}{$html_ext}"/>
      </navPoint>
    </xsl:if>
  </xsl:template>

  <!--
      =========================================================================
      section mode toc_ncx
      =========================================================================
  -->
  <xsl:template match="section" mode="toc_ncx">
    <xsl:choose>
      <xsl:when test="head/title">
        <xsl:variable name="number">
          <xsl:call-template name="navpoint_number"/>
        </xsl:variable>
        <navPoint id="navPoint-{$number}" playOrder="{$number}">
          <navLabel>
            <text>
              <xsl:choose>
                <xsl:when test="head/shorttitle">
                  <xsl:call-template name="ncx_text">
                    <xsl:with-param name="text">
                      <xsl:apply-templates select="head/shorttitle" mode="text"/>
                    </xsl:with-param>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:call-template name="ncx_text"/>
                </xsl:otherwise>
              </xsl:choose>
              <xsl:for-each select="head/subtitle">
                <xsl:value-of select="$str_sep"/>
                <xsl:call-template name="ncx_text">
                  <xsl:with-param name="text"><xsl:apply-templates mode="text"/></xsl:with-param>
                </xsl:call-template>
              </xsl:for-each>
            </text>
          </navLabel>
          <content>
            <xsl:attribute name="src">
              <xsl:value-of
                  select="concat($fid, '-tpc-', count(preceding::topic)+1,
                          $html_ext, '#')"/>
              <xsl:choose>
                <xsl:when test="@xml:id">
                  <xsl:value-of select="@xml:id"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of
                      select="concat('sect',
                              count(preceding::section|ancestor::section))"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:attribute>
          </content>
          <xsl:if test="$toc_section_depth &gt; count(ancestor::section)+1">
            <xsl:apply-templates select="section" mode="toc_ncx"/>
          </xsl:if>
        </navPoint>
      </xsl:when>
      <xsl:when test="$toc_section_depth &gt; count(ancestor::section)+1">
        <xsl:apply-templates select="section" mode="toc_ncx"/>
       </xsl:when>
    </xsl:choose>
  </xsl:template>

  <!--
      =========================================================================
      bibliography mode toc_ncx
      =========================================================================
  -->
  <xsl:template match="bibliography" mode="toc_ncx">
    <xsl:variable name="number">
      <xsl:call-template name="navpoint_number"/>
    </xsl:variable>
    <navPoint id="navPoint-{$number}" playOrder="{$number}">
      <navLabel>
        <text><xsl:value-of select="$i18n_bibliography"/></text>
      </navLabel>
      <content src="{$fid}-tpc-{count(preceding::topic)+1}{$html_ext}#biblio"/>
    </navPoint>
  </xsl:template>

  <!--
      =========================================================================
      Template index_ncx
      =========================================================================
  -->
  <xsl:template name="index_ncx">
    <xsl:if test="$index and .//index">
      <xsl:variable name="number">
        <xsl:value-of
            select="count(//division[head/title])
                    + count(//topic
                      [head/title or @type='title' or @type='copyright'
                       or @type='dedication' or @type='inscription'])
                    + count(//quiz[head/title])
                    + count(//section
                      [head/title and
                       $toc_section_depth&gt;count(ancestor::section)])
                    + count(//topic/bibliography[$toc_section_depth&gt;0])
                    + $toc + 1"/>
      </xsl:variable>
      <navPoint id="navPoint-{$number}" playOrder="{$number}">
        <navLabel>
          <text><xsl:value-of select="$i18n_index"/></text>
        </navLabel>
        <content src="{$fid}-index{$html_ext}"/>
      </navPoint>
    </xsl:if>
  </xsl:template>

  <!--
      =========================================================================
      Template navpoint_number
      =========================================================================
  -->
  <xsl:template name="navpoint_number">
    <xsl:value-of
        select="count(preceding::division[head/title])
                + count(ancestor::division[head/title])
                + count(preceding::topic
                  [head/title or @type='title' or @type='copyright'
                   or @type='dedication' or @type='inscription'])
                + count(ancestor::topic
                  [head/title or @type='title' or @type='copyright'
                   or @type='dedication' or @type='inscription'])
                + count(preceding::quiz[head/title])
                + count(preceding::section
                  [head/title
                   and $toc_section_depth&gt;count(ancestor::section)])
                + count(ancestor::section[head/title])
                + count(preceding::topic/bibliography[$toc_section_depth&gt;0])
                + $toc + 1"/>
  </xsl:template>

  <!--
      =========================================================================
      Template ncx_text
      =========================================================================
  -->
  <xsl:template name="ncx_text">
    <xsl:param name="text">
      <xsl:apply-templates select="head/title" mode="text"/>
    </xsl:param>
    <xsl:value-of select="normalize-space($text)"/>
  </xsl:template>

</xsl:stylesheet>
