<?xml version="1.0" encoding="utf-8"?>
<!-- $Id: publidoc2epub2_template.inc.xsl 237c275a0588 2015/02/04 20:29:27 Patrick $ -->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:date="http://exslt.org/dates-and-times"
                extension-element-prefixes="date">

  <!--
      =========================================================================
      Template html_frame
      =========================================================================
  -->
  <xsl:template name="html_frame">
    <xsl:param name="title"/>
    <xsl:param name="body"/>
    <xsl:comment> Generated by PubliForge, <xsl:value-of select="date:date-time()"/> </xsl:comment>
    <html xmlns="http://www.w3.org/1999/xhtml">
      <xsl:attribute name="xml:lang"><xsl:value-of select="$lang"/></xsl:attribute>
      <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
        <meta http-equiv="Content-Language">
          <xsl:attribute name="content"><xsl:value-of select="$lang"/></xsl:attribute>
        </meta>
        <title><xsl:value-of select="$title"/></title>
        <xsl:choose>
          <xsl:when test="$minify">
            <link rel="StyleSheet" href="{$css_dir}styles.css" type="text/css"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:if test="not(@type) or @type!='image'
                          or count(.//section)&gt;1 or count(section/media)!=1
                          or count(.//p)&gt;0 or count(.//hotspot)&gt;0
                          or count(.//caption)&gt;0">
              <link rel="StyleSheet" href="{$css_dir}publidoc.css" type="text/css"/>
            </xsl:if>
            <link rel="StyleSheet" href="{$css_dir}custom.css" type="text/css"/>
          </xsl:otherwise>
        </xsl:choose>
      </head>
      <xsl:copy-of select="$body"/>
    </html>
  </xsl:template>

  <!--
      =========================================================================
      Template minify_files
      =========================================================================
  -->
  <xsl:template name="minify_files">
    <xsl:if test="$minify">
      <xsl:document
          href="{$path}{$css_dir}styles.css" method="text" encoding="utf-8">
publidoc.css
custom.css
      </xsl:document>
    </xsl:if>
  </xsl:template>

  <!--
      =========================================================================
      Template navigation
      =========================================================================
  -->
  <xsl:template name="navigation"/>

  <!--
      =========================================================================
      Template anchor_levels
      =========================================================================
  -->
  <xsl:template name="anchor_levels">
    <div>
      <a id="level1"><xsl:text> </xsl:text></a>
      <a id="level2"><xsl:text> </xsl:text></a>
      <a id="level3"><xsl:text> </xsl:text></a>
      <a id="level4"><xsl:text> </xsl:text></a>
      <a id="level5"><xsl:text> </xsl:text></a>
    </div>
  </xsl:template>

  <!--
      =========================================================================
      Template cover
      =========================================================================
  -->
  <xsl:template name="cover">
    <xsl:if test="head/cover or ($cover and not($cover='='))">
      <xsl:call-template name="html_file">
        <xsl:with-param name="name" select="concat($fid, '-cover')"/>
        <xsl:with-param name="nojs" select="1"/>
        <xsl:with-param name="title" select="$i18n_cover"/>
        <xsl:with-param name="body">
          <body class="pdocCover">
            <div>
              <xsl:choose>
                <xsl:when test="$cover and not($cover='=')">
                  <img src="{$img_dir}{$cover}" alt="{$i18n_cover}"/>
                </xsl:when>
                <xsl:when test="$cover='=' and head/cover">
                  <img src="{$img_dir}{head/cover/image/@id}{$img_ext_cover}"
                       alt="{$i18n_cover}"/>
                </xsl:when>
                <xsl:when test="$img and head/cover">
                  <img src="{$img_dir}{head/cover/image/@id}{$img_ext_cover}"
                       alt="{$i18n_cover}"/>
                </xsl:when>
                <xsl:when test="head/title">
                  <h1><xsl:apply-templates select="head/title"/></h1>
                  <xsl:if test="head/subtitle">
                    <h2><xsl:call-template name="subtitle"/></h2>
                  </xsl:if>
                </xsl:when>
                <xsl:otherwise>
                  <h1><xsl:value-of select="$i18n_cover"/></h1>
                </xsl:otherwise>
              </xsl:choose>
            </div>
          </body>
        </xsl:with-param>
      </xsl:call-template>
    </xsl:if>
  </xsl:template>

  <!--
      =========================================================================
      Template toc
      =========================================================================
  -->
  <xsl:template name="toc">
    <xsl:variable name="has_children">
      <xsl:call-template name="has_toc_children"/>
    </xsl:variable>

    <xsl:call-template name="html_file">
      <xsl:with-param name="name" select="concat($fid, '-toc')"/>
      <xsl:with-param name="title" select="$i18n_toc"/>
      <xsl:with-param name="nojs" select="1"/>
      <xsl:with-param name="body">
        <body class="pdocToc">
          <xsl:if test="head/title">
            <div class="h1"><xsl:apply-templates select="head/title"/></div>
          </xsl:if>
          <xsl:if test="$has_children='1'">
            <div class="h2"><xsl:value-of select="$i18n_toc"/></div>
            <ul>
              <xsl:apply-templates select="division|topic|section" mode="toc"/>
            </ul>
          </xsl:if>
        </body>
      </xsl:with-param>
    </xsl:call-template>
  </xsl:template>

  <!--
      =========================================================================
      Template identifier
      =========================================================================
  -->
  <xsl:template name="identifier">
    <xsl:choose>
      <xsl:when test="$ean">
        <xsl:value-of select="$ean"/>
      </xsl:when>
      <xsl:when test="head/identifier[@type='ean' and @for='epub2']">
        <xsl:value-of select="head/identifier[@type='ean' and @for='epub2']"/>
      </xsl:when>
      <xsl:when test="head/identifier[@type='ean' and @for='epub']">
        <xsl:value-of select="head/identifier[@type='ean' and @for='epub']"/>
      </xsl:when>
      <xsl:when test="head/identifier[@type='ean' and not(@for)]">
        <xsl:value-of select="head/identifier[@type='ean' and not(@for)]"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:choose>
          <xsl:when test="$publisher_url"><xsl:value-of select="$publisher_url"/></xsl:when>
          <xsl:when test="head/contributors/contributor[role='publisher']/link/@uri">
            <xsl:value-of select="head/contributors/contributor[role='publisher']/link/@uri"/>
          </xsl:when>
          <xsl:otherwise>http://www.publiforge.org</xsl:otherwise>
        </xsl:choose>
        <xsl:value-of select="concat('/epub/', @id)"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!--
      =========================================================================
      Template corpus_title
      =========================================================================
  -->
  <xsl:template name="corpus_title">
    <xsl:choose>
      <xsl:when test="/*/*/head/shorttitle">
        <xsl:apply-templates select="/*/*/head/shorttitle"/>
      </xsl:when>
      <xsl:when test="/*/*/head/title">
        <xsl:apply-templates select="/*/*/head/title"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$i18n_corpus"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <xsl:template name="corpus_title_text">
    <xsl:choose>
      <xsl:when test="/*/*/head/shorttitle">
        <xsl:apply-templates select="/*/*/head/shorttitle" mode="text"/>
      </xsl:when>
      <xsl:when test="/*/*/head/title">
        <xsl:apply-templates select="/*/*/head/title" mode="text"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$i18n_corpus"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

</xsl:stylesheet>
