<?xml version="1.0" encoding="utf-8"?>
<!-- $Id: publidoc2pdf.xsl ae7c00d5b084 2014/11/29 09:46:06 Patrick $ -->
<xsl:stylesheet version="1.1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:date="http://exslt.org/dates-and-times"
                xmlns:pf="http://publiforge.org/functions"
                extension-element-prefixes="date pf">

  <xsl:import href="publidoc2pdf_template.inc.xsl"/>
  <xsl:import href="publidoc2pdf_i18n.inc.xsl"/>
  <xsl:import href="publidoc2pdf_base.inc.xsl"/>
  <xsl:import href="publidoc2pdf_ini.inc.xsl"/>

  <!-- PubliForge parameters -->
  <xsl:param name="processor"/>   <!-- Full path to processor directory -->
  <xsl:param name="output"/>      <!-- Full path to output directory -->
  <xsl:param name="fid"/>         <!-- XML File name without extension -->

  <!-- Processor dimension parameters -->
  <xsl:param name="paper_size">a4paper</xsl:param>
  <xsl:param name="layout_width">210</xsl:param>
  <xsl:param name="layout_height">297</xsl:param>
  <xsl:param name="layout_offset">0</xsl:param>
  <xsl:param name="body_width">170</xsl:param>
  <xsl:param name="body_height">240</xsl:param>
  <xsl:param name="margin_top">30</xsl:param>
  <xsl:param name="margin_left">20</xsl:param>
  <xsl:param name="bindingoffset">0</xsl:param>
  <xsl:param name="headsep">10</xsl:param>
  <xsl:param name="footskip">10</xsl:param>
  <!-- Processor font parameters -->
  <xsl:param name="font_main">Serif, 11/12, m, n</xsl:param>
  <xsl:param name="font_header">Sans, 10/11, ,</xsl:param>
  <xsl:param name="font_folio">Sans, /, ,</xsl:param>
  <xsl:param name="font_title1">Sans, 20/24, bx,</xsl:param>
  <xsl:param name="font_title2">Sans, 18/20, bx,</xsl:param>
  <xsl:param name="font_title3">Sans, 16/18, bx,</xsl:param>
  <xsl:param name="font_title4">Sans, 14/16, bx,</xsl:param>
  <xsl:param name="font_title5">Sans, 12/14, bx, it</xsl:param>
  <xsl:param name="font_note">Sans, 7.5/8, ,</xsl:param>
  <xsl:param name="font_quote">, /, , it</xsl:param>
  <!-- Processor layout parameters -->
  <xsl:param name="first_page" select="1"/>
  <xsl:param name="title_page" select="1"/>
  <xsl:param name="toc_depth">0</xsl:param>
  <xsl:param name="web" select="0"/>
  <xsl:param name="debug" select="0"/>
  <!-- Processor string parameters -->
  <xsl:param name="str_stage_sep">, </xsl:param>
  <xsl:param name="str_stage_open">(</xsl:param>
  <xsl:param name="str_stage_close">)</xsl:param>
  <!-- Processor image parameters -->
  <xsl:param name="img" select="1"/>
  <xsl:param name="img_search">%(id)s.%(ext)s</xsl:param>

  <!-- Variables -->
  <xsl:variable name="path" select="$output"/>
  <xsl:variable name="img_dir">Images.tmp/</xsl:variable>
  <xsl:variable name="math_dir">Maths/</xsl:variable>
  <xsl:variable name="font_dir"
                select="concat(pf:relpath($processor, $output), '/Fonts/')"/>
  <xsl:variable name="lang">
    <xsl:choose>
      <xsl:when test="/*/*/@xml:lang">
        <xsl:value-of select="/*/*/@xml:lang"/>
      </xsl:when>
      <xsl:otherwise>en</xsl:otherwise>
    </xsl:choose>
  </xsl:variable>
  <xsl:variable name="font_main_size">
    <xsl:value-of
        select="normalize-space(substring-before(substring-after($font_main, '|'), '/'))"/>
  </xsl:variable>
  <xsl:variable name="font_main_skip">
    <xsl:choose>
      <xsl:when test="contains($font_main, '+')">
        <xsl:value-of
            select="translate(number(substring-before(substring-after($font_main,'/'), '+')), ',', '.')"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of
            select="translate(number(substring-before(substring-after($font_main,'/'), '|')), ',', '.')"/>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="contains($font_main,'+')">
      <xsl:text>pt plus </xsl:text>
      <xsl:value-of select="number(substring-before(substring-after($font_main, '+'), '|'))"/>
    </xsl:if>
    <xsl:text>pt</xsl:text>
  </xsl:variable>


  <xsl:output method="text" encoding="utf-8" indent="no"/>


  <!--
      =========================================================================
      publiset
      =========================================================================
  -->
  <xsl:template match="publiset"/>

  <!--
      =========================================================================
      publidoc
      =========================================================================
  -->
  <xsl:template match="publidoc">
    <xsl:document href="{$path}{$fid}.tmp.tex" method="text"
                  encoding="utf-8" indent="no">%
% Generated by PubliForge, <xsl:value-of select="date:date-time()"/>
%
\documentclass[11pt]{scrbook}
<xsl:call-template name="packages"/>
<xsl:call-template name="font_families"/>
<xsl:call-template name="fonts"/>
<xsl:call-template name="variables_defines"/>
<xsl:call-template name="layout"/>

% Document
% =============================================================================
\begin{document}
\setcounter{page}{<xsl:value-of select="$first_page"/>}
\fontmain
<xsl:call-template name="title_page"/>
<xsl:apply-templates select=".//topic[@type='title']" mode="corpus"/>
<xsl:call-template name="toc"/>
\cleardoublepage
<xsl:apply-templates select="document|topic"/>
\end{document}
      <xsl:if test="$img"><xsl:apply-templates select="//image" mode="ini"/></xsl:if>
      <xsl:call-template name="post_ini"/>
    </xsl:document>
  </xsl:template>

  <!--
      =========================================================================
      document
      =========================================================================
  -->
  <xsl:template match="document">
\renewcommand{\headtitleeven}{<xsl:apply-templates select="head/title"/>}
    <xsl:apply-templates select="division|topic[not(@type) or @type!='title']"
                         mode="corpus"/>
  </xsl:template>

  <!--
      =========================================================================
      topic
      =========================================================================
  -->
  <xsl:template match="topic">
\renewcommand{\headtitleeven}{<xsl:apply-templates select="head/title"/>}
    <xsl:apply-templates select="." mode="corpus"/>
  </xsl:template>
</xsl:stylesheet>
