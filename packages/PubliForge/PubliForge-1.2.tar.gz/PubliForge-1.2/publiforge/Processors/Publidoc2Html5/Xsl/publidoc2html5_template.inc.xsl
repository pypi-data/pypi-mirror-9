<?xml version='1.0' encoding="utf-8"?>
<!-- $Id: publidoc2html5_template.inc.xsl 237c275a0588 2015/02/04 20:29:27 Patrick $ -->
<xsl:stylesheet version="1.1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:date="http://exslt.org/dates-and-times"
                extension-element-prefixes="date">

  <!--
      =========================================================================
      Template html_file
      =========================================================================
  -->
  <xsl:template name="html_file">
    <xsl:param name="name"/>
    <xsl:param name="title"/>
    <xsl:param name="nojs"/>
    <xsl:param name="body"/>
    <xsl:document href="{$path}{$name}{$html_ext}" method="xml"
                  omit-xml-declaration="yes" encoding="utf-8" indent="yes">
      <xsl:call-template name="html_frame">
        <xsl:with-param name="title" select="$title"/>
        <xsl:with-param name="nojs" select="$nojs"/>
        <xsl:with-param name="body" select="$body"/>
      </xsl:call-template>
    </xsl:document>
  </xsl:template>

  <!--
      =========================================================================
      Template html_frame
      =========================================================================
  -->
  <xsl:template name="html_frame">
    <xsl:param name="title"/>
    <xsl:param name="nojs"/>
    <xsl:param name="body"/>
    <xsl:text disable-output-escaping="yes">&lt;!DOCTYPE html&gt;
</xsl:text>
    <xsl:comment> Generated by PubliForge, <xsl:value-of select="date:date-time()"/> </xsl:comment>
    <html>
      <xsl:attribute name="xml:lang"><xsl:value-of select="$lang"/></xsl:attribute>
      <xsl:attribute name="lang"><xsl:value-of select="$lang"/></xsl:attribute>
      <head>
        <meta charset="utf-8"/>
        <title><xsl:value-of select="$title"/></title>
        <xsl:choose>
          <xsl:when test="$minify">
            <link rel="StyleSheet" href="{$css_dir}styles.css" type="text/css"/>
            <xsl:if test="$js and (not($nojs) or $onefile)">
              <script src="{$js_dir}jquery.js" type="text/javascript"><xsl:text> </xsl:text></script>
              <script src="{$js_dir}scripts.js" type="text/javascript"><xsl:text> </xsl:text></script>
            </xsl:if>
          </xsl:when>
          <xsl:otherwise>
            <link rel="StyleSheet" href="{$css_dir}reset.css" type="text/css"/>
            <link rel="StyleSheet" href="{$css_dir}publidoc.css" type="text/css"/>
            <link rel="StyleSheet" href="{$css_dir}custom.css" type="text/css"/>
            <xsl:if test="$js and (not($nojs) or $onefile)">
              <script src="{$js_dir}jquery.js" type="text/javascript"><xsl:text> </xsl:text></script>
              <script src="{$js_dir}publidoc.js" type="text/javascript"><xsl:text> </xsl:text></script>
            </xsl:if>
          </xsl:otherwise>
        </xsl:choose>
      </head>
      <xsl:copy-of select="$body"/>
    </html>
  </xsl:template>

  <!--
      =========================================================================
      Template audio
      =========================================================================
  -->
  <xsl:template name="audio">
    <xsl:param name="id" select="@id"/>
    <xsl:param name="controls" select="1"/>
    <xsl:param name="autoplay" select="0"/>
    <audio id="aud-{$id}">
      <xsl:if test="$controls"><xsl:attribute name="controls"/></xsl:if>
      <xsl:if test="$autoplay"><xsl:attribute name="autoplay"/></xsl:if>
      <xsl:attribute name="class">
        <xsl:text>pdocAudio</xsl:text>
        <xsl:if test="name()='audio' and @type"> pdocAudio-<xsl:value-of select="@type"/></xsl:if>
      </xsl:attribute>
      <source src="{$aud_dir}{$id}{$aud_ext1}"/>
      <xsl:if test="$aud_ext2!='-' and $aud_ext1!=$aud_ext2">
        <source src="{$aud_dir}{$id}{$aud_ext2}"/>
      </xsl:if>
      <span><xsl:value-of select="$i18n_noaudio"/></span>
    </audio>
  </xsl:template>

  <!--
      =========================================================================
      Template video
      =========================================================================
  -->
  <xsl:template name="video">
    <xsl:param name="id" select="@id"/>
    <xsl:param name="controls" select="1"/>
    <xsl:param name="autoplay" select="0"/>
    <xsl:param name="width"/>
    <video id="vid-{$id}">
      <xsl:if test="$controls"><xsl:attribute name="controls"/></xsl:if>
      <xsl:if test="$autoplay"><xsl:attribute name="autoplay"/></xsl:if>
      <xsl:if test="$width">
        <xsl:attribute name="width"><xsl:value-of select="$width"/></xsl:attribute>
      </xsl:if>
      <xsl:if test="../image">
        <xsl:apply-templates select="../image[1]" mode="poster"/>
      </xsl:if>
      <xsl:attribute name="class">
        <xsl:text>pdocVideo</xsl:text>
        <xsl:if test="name()='video' and @type"> pdocVideo-<xsl:value-of select="@type"/></xsl:if>
      </xsl:attribute>
      <source src="{$vid_dir}{$id}{$vid_ext1}"/>
      <xsl:if test="$vid_ext2!='-' and $vid_ext1!=$vid_ext2">
        <source src="{$vid_dir}{$id}{$vid_ext2}"/>
      </xsl:if>
      <span><xsl:value-of select="$i18n_novideo"/></span>
    </video>
  </xsl:template>

</xsl:stylesheet>
