<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: publidoc2epub3_nav.inc.xsl b662575e42a4 2015/02/02 12:25:15 Patrick $ -->
<xsl:stylesheet version="1.1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:date="http://exslt.org/dates-and-times"
                extension-element-prefixes="date">

  <!--
      =========================================================================
      Template nav_xhtml
      =========================================================================
  -->
  <xsl:template name="nav_xhtml">
    <xsl:variable name="has_children">
      <xsl:call-template name="has_toc_children"/>
    </xsl:variable>
    <xsl:document href="{$path}{$fid}-nav{$html_ext}" method="xml"
                  encoding="utf-8" indent="yes">
      <xsl:text disable-output-escaping="yes">&lt;!DOCTYPE html&gt;
</xsl:text>
      <xsl:comment> Generated by PubliForge, <xsl:value-of select="date:date-time()"/> </xsl:comment>
      <html xmlns:epub="http://www.idpf.org/2007/ops">
        <xsl:attribute name="xml:lang"><xsl:value-of select="$lang"/></xsl:attribute>
        <xsl:attribute name="lang"><xsl:value-of select="$lang"/></xsl:attribute>
        <head>
          <meta charset="utf-8"/>
          <title><xsl:value-of select="concat(head/title, $str_sep, $i18n_toc)"/></title>
          <xsl:choose>
            <xsl:when test="$minify">
              <link rel="stylesheet" href="{$css_dir}styles.css" type="text/css"/>
            </xsl:when>
            <xsl:otherwise>
              <link rel="stylesheet" href="{$css_dir}publidoc.css" type="text/css"/>
              <link rel="stylesheet" href="{$css_dir}custom.css" type="text/css"/>
            </xsl:otherwise>
          </xsl:choose>
        </head>
        <body class="pdocToc">
          <div class="h1"><xsl:apply-templates select="head/title"/></div>
          <xsl:if test="head/subtitle">
            <h2><xsl:call-template name="subtitle"/></h2>
          </xsl:if>

          <nav epub:type="toc" id="toc">
            <h3><xsl:value-of select="$i18n_toc"/></h3>
            <ol>
              <xsl:if test="$toc">
                <li><a href="{$fid}-toc{$html_ext}">
                  <xsl:value-of select="$i18n_toc"/>
                </a></li>
              </xsl:if>
               <xsl:choose>
                <xsl:when test="$has_children='1' or ($index and .//index)">
                  <xsl:apply-templates
                      select="../topic|../quiz|division|topic[not(@type='title')]|quiz"
                      mode="navtoc"/>
                  <xsl:if test="$index and .//index">
                    <li><a href="{$fid}-index{$html_ext}">
                      <xsl:value-of select="$i18n_index"/>
                    </a></li>
                  </xsl:if>
                </xsl:when>
                <xsl:when test="../quiz or name(.//*[name()='topic' or name()='quiz'])='quiz'">
                  <li><a href="{$fid}-quz-1{$html_ext}">
                    <xsl:call-template name="corpus_title"/>
                  </a></li>
                </xsl:when>
                <xsl:otherwise>
                  <li><a href="{$fid}-tpc-1{$html_ext}">
                    <xsl:call-template name="corpus_title"/>
                  </a></li>
                </xsl:otherwise>
              </xsl:choose>
            </ol>
          </nav>

          <nav epub:type="landmarks">
            <h3><xsl:value-of select="$i18n_guide"/></h3>
            <ol>
              <xsl:if test="head/cover or ($cover and not($cover='='))">
                <li><a href="{$fid}-cover{$html_ext}" epub:type="cover">
                  <xsl:value-of select="$i18n_cover"/>
                </a></li>
              </xsl:if>
              <xsl:apply-templates select=".//topic[@type='title']" mode="nav_landmarks"/>
              <xsl:if test="$toc">
                <li><a href="{$fid}-toc{$html_ext}" epub:type="toc"><xsl:value-of select="$i18n_toc"/></a></li>
              </xsl:if>
              <xsl:apply-templates select=".//topic[@type='copyright']" mode="nav_landmarks"/>
              <xsl:choose>
                <xsl:when test=".//topic[@type='title' and count(preceding::topic)=0]
                                and .//topic[@type='copyright' and count(preceding::topic)=1]
                                and count(.//topic)&gt;2">
                  <li><a href="{$fid}-tpc-3{$html_ext}" epub:type="bodymatter"><xsl:value-of select="$i18n_text"/></a></li>
                </xsl:when>
                <xsl:when test=".//topic[@type='title' and count(preceding::topic)=0]
                                and count(.//topic)&gt;2">
                  <li><a href="{$fid}-tpc-2{$html_ext}" epub:type="bodymatter"><xsl:value-of select="$i18n_text"/></a></li>
                </xsl:when>
                <xsl:when test="../quiz or name(.//*[name()='topic' or name()='quiz'])='quiz'">
                  <li><a href="{$fid}-quz-1{$html_ext}" epub:type="bodymatter"><xsl:value-of select="$i18n_text"/></a></li>
                </xsl:when>
                <xsl:otherwise>
                  <li><a href="{$fid}-tpc-1{$html_ext}" epub:type="bodymatter"><xsl:value-of select="$i18n_text"/></a></li>
                </xsl:otherwise>
              </xsl:choose>
              <xsl:if test="$index and .//index">
                <li><a href="{$fid}-index{$html_ext}" epub:type="index">
                  <xsl:value-of select="$i18n_index"/>
                </a></li>
              </xsl:if>
            </ol>
          </nav>
        </body>
      </html>
    </xsl:document>
  </xsl:template>

  <!--
      =========================================================================
      division mode navtoc
      =========================================================================
  -->
  <xsl:template match="division" mode="navtoc">
    <xsl:variable name="has_children">
      <xsl:call-template name="has_toc_children"/>
    </xsl:variable>
    <xsl:choose>
      <xsl:when test="$toc_division_depth&gt;count(ancestor::division)
                      and (head/title or ($toc_with_abstract and head/abstract))">
        <li>
          <a href="{$fid}-div-{count(preceding::division|ancestor::division)+1}{$html_ext}">
            <xsl:call-template name="division_toc_title"/>
          </a>
          <xsl:if test="$has_children='1'">
            <ol>
              <xsl:apply-templates mode="navtoc"/>
            </ol>
          </xsl:if>
        </li>
      </xsl:when>

      <xsl:when test="$has_children='1' and
                      (head/title or ($toc_with_abstract and head/abstract))">
        <li>
          <span>
            <xsl:choose>
              <xsl:when test="head/shorttitle">
                <xsl:apply-templates select="head/shorttitle"/>
              </xsl:when>
              <xsl:when test="head/title">
                <xsl:apply-templates select="head/title"/>
              </xsl:when>
            </xsl:choose>
            <xsl:for-each select="head/subtitle">
              <xsl:value-of select="$str_sep"/>
              <xsl:apply-templates/>
            </xsl:for-each>
          </span>
          <xsl:if test="$has_children='1'">
            <ol>
              <xsl:apply-templates mode="navtoc"/>
            </ol>
          </xsl:if>
        </li>
      </xsl:when>
      
      <xsl:otherwise>
        <xsl:apply-templates mode="navtoc"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <xsl:template match="head|front" mode="navtoc"/>

  <!--
      =========================================================================
      topic mode navtoc
      =========================================================================
  -->
  <xsl:template match="topic" mode="navtoc">
    <xsl:variable name="has_children">
      <xsl:call-template name="has_toc_children"/>
    </xsl:variable>
    <xsl:choose>
      <xsl:when
          test="head/title or @type='title' or @type='copyright'
                or @type='dedication' or @type='inscription'
                or ($toc_with_abstract and head/abstract)">
        <li>
          <a href="{$fid}-tpc-{count(preceding::topic)+1}{$html_ext}">
            <xsl:call-template name="topic_toc_title"/>
          </a>
          <xsl:if test="$has_children='1'">
            <ol>
              <xsl:apply-templates select="section" mode="toc"/>
              <xsl:apply-templates select="bibliography" mode="toc"/>
            </ol>
          </xsl:if>
        </li>
      </xsl:when>
      <xsl:when test="$has_children='1'">
        <xsl:apply-templates select="section" mode="toc"/>
        <xsl:apply-templates select="bibliography" mode="toc"/>
      </xsl:when>
    </xsl:choose>
  </xsl:template>

  <!--
      =========================================================================
      quiz mode navtoc
      =========================================================================
  -->
  <xsl:template match="quiz" mode="navtoc">
    <xsl:if test="head/title">
      <li>
        <a href="{$fid}-quz-{count(preceding::quiz)+1}{$html_ext}">
          <xsl:choose>
            <xsl:when test="head/shorttitle">
              <xsl:apply-templates select="head/shorttitle" mode="link"/>
            </xsl:when>
            <xsl:when test="head/title">
              <xsl:apply-templates select="head/title" mode="link"/>
            </xsl:when>
          </xsl:choose>
          <xsl:for-each select="head/subtitle">
            <xsl:value-of select="$str_sep"/>
            <xsl:apply-templates mode="link"/>
          </xsl:for-each>
        </a>
      </li>
    </xsl:if>
  </xsl:template>

  <!--
      ========================================================================
      section mode toc
      ========================================================================
  -->
  <xsl:template match="section" mode="toc">
    <xsl:choose>
      <xsl:when test="head/title">
        <li>
          <a>
            <xsl:attribute name="href">
              <xsl:value-of
                  select="concat($fid, '-tpc-',
                          count(preceding::topic)+1, $html_ext, '#')"/>
              <xsl:choose>
                <xsl:when test="@xml:id">
                  <xsl:value-of select="@xml:id"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of
                      select="concat('sect',
                              count(preceding::section|ancestor::section))"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:attribute>
            <xsl:call-template name="section_toc_title"/>
          </a>
          <xsl:if test=".//section[head/title
                        and $toc_section_depth&gt;count(ancestor::section)]">
            <ol>
              <xsl:apply-templates select="section" mode="toc"/>
            </ol>
          </xsl:if>
        </li>
      </xsl:when>
      <xsl:when test=".//section[head/title and
                      $toc_section_depth&gt;count(ancestor::section)]">
        <xsl:apply-templates select="section" mode="toc"/>
      </xsl:when>
    </xsl:choose>
  </xsl:template>

  <!--
      =========================================================================
      topic mode nav_landmarks
      =========================================================================
  -->
  <xsl:template match="topic" mode="nav_landmarks">
    <xsl:if test="@type='title' or @type='copyright'">
      <li>
        <a href="{$fid}-tpc-{count(preceding::topic)+1}{$html_ext}">
          <xsl:attribute xmlns:epub="http://www.idpf.org/2007/ops" name="epub:type">
            <xsl:choose>
              <xsl:when test="@type='title'">titlepage</xsl:when>
              <xsl:when test="@type='copyright'">copyright-page</xsl:when>
            </xsl:choose>
          </xsl:attribute>
          <xsl:choose>
            <xsl:when test="@type='title'"><xsl:value-of select="$i18n_title_page"/></xsl:when>
            <xsl:when test="@type='copyright'"><xsl:value-of select="$i18n_copyright"/></xsl:when>
          </xsl:choose>
        </a>
      </li>
    </xsl:if>
  </xsl:template>

</xsl:stylesheet>
