{
  "id": 45, 
  "title": "SQL Injection", 
  "severity": "high", 
  "description": [
    "Due to the requirement for dynamic content of today's web", 
    "applications, many\nrely on a database backend to store data that will", 
    "be called upon and processed\nby the web application (or other", 
    "programs).\nWeb applications retrieve data from the database by using", 
    "Structured Query Language\n(SQL) queries.\n\nTo meet demands of many", 
    "developers, database servers (such as MSSQL, MySQL,\nOracle etc.) have", 
    "additional built-in functionality that can allow extensive\ncontrol of", 
    "the database and interaction with the host operating system itself.", 
    "An SQL injection occurs when a value originating from the client's", 
    "request is used\nwithin a SQL query without prior sanitisation. This", 
    "could allow cyber-criminals\nto execute arbitrary SQL code and steal", 
    "data or use the additional functionality\nof the database server to", 
    "take control of more server components.\n\nThe successful exploitation", 
    "of a SQL injection can be devastating to an\norganisation and is one of", 
    "the most commonly exploited web application vulnerabilities.\n\nThis", 
    "injection was detected as the tool was able to cause the server to", 
    "respond to\nthe request with a database related error."
  ], 
  "fix": {
    "effort": 50, 
    "guidance": [
      "The only proven method to prevent against SQL injection attacks while", 
      "still\nmaintaining full application functionality is to use", 
      "parameterized queries\n(also known as prepared statements).\nWhen", 
      "utilising this method of querying the database, any value supplied by", 
      "the\nclient will be handled as a string value rather than part of the", 
      "SQL query.\n\nAdditionally, when utilising parameterized queries, the", 
      "database engine will\nautomatically check to make sure the string being", 
      "used matches that of the column.\nFor example, the database engine will", 
      "check that the user supplied input is an\ninteger if the database", 
      "column is configured to contain integers."
    ]
  }, 
  "tags": [
    "sql", 
    "injection", 
    "regexp", 
    "database", 
    "error"
  ], 
  "references": [
    {
      "url": "http://www.securiteam.com/securityreviews/5DP0N1P76E.html", 
      "title": "SecuriTeam"
    }, 
    {
      "url": "http://en.wikipedia.org/wiki/SQL_injection", 
      "title": "Wikipedia"
    }, 
    {
      "url": "https://www.owasp.org/index.php/SQL_Injection", 
      "title": "OWASP"
    }, 
    {
      "url": "http://projects.webappsec.org/w/page/13246963/SQL%20Injection", 
      "title": "WASC"
    }, 
    {
      "url": "http://www.w3schools.com/sql/sql_injection.asp", 
      "title": "W3 Schools"
    }, 
    {
      "url": "http://unixwiz.net/techtips/sql-injection.html", 
      "title": "UnixWiz"
    }
  ]
}