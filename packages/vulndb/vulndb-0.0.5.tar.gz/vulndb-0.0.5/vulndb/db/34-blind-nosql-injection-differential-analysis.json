{
  "id": 34, 
  "title": "Blind NoSQL Injection (differential analysis)", 
  "severity": "high", 
  "description": [
    "A NoSQL injection occurs when a value originating from the client's", 
    "request is\nused within a NoSQL call without prior sanitisation.\n\nThis", 
    "can allow cyber-criminals to execute arbitrary NoSQL code and thus", 
    "steal data,\nor use the additional functionality of the database server", 
    "to take control of\nfurther server components.\n\nThe tool discovered that", 
    "the affected page and parameter are vulnerable. This\ninjection was", 
    "detected as the tool was able to inject specific NoSQL queries that\nif", 
    "vulnerable result in the responses for each injection being different.", 
    "This is\nknown as a blind NoSQL injection vulnerability."
  ], 
  "fix": {
    "effort": 50, 
    "guidance": [
      "The most effective remediation against NoSQL injection attacks is to", 
      "ensure that\nNoSQL API calls are not constructed via string", 
      "concatenation that includes\nunsanitized data.\n\nSanitization is best", 
      "achieved using existing escaping libraries."
    ]
  }, 
  "tags": [
    "nosql", 
    "blind", 
    "differential", 
    "injection", 
    "database"
  ], 
  "references": [
    {
      "url": "https://www.owasp.org/index.php/Testing_for_NoSQL_injection", 
      "title": "OWASP"
    }
  ]
}