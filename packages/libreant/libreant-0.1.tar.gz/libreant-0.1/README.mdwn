LibreAnt
========
[![License](https://pypip.in/license/libreant/badge.svg?style=flat)](https://pypi.python.org/pypi/libreant/)
[![Development Status](https://pypip.in/status/libreant/badge.svg?style=flat)](https://pypi.python.org/pypi/libreant/)
[![Latest Version](https://pypip.in/version/libreant/badge.svg?style=flat)](https://pypi.python.org/pypi/libreant/)

This is libreant: a software to manage both your ebooks and your physical books.
Its approach is:
* minimum assumptions about your library structure, catalogation systems or
  whatsoever
* ease of deployment
* ease to build a decentralized network for integration, sharing, and search

Its main UI is a web one

Quick start
-----------
###Dependencies
####Debian
Download and install the Public Signing Key for elasticsearch repo
```sh
wget -qO - http://packages.elasticsearch.org/GPG-KEY-elasticsearch | sudo apt-key add -
```
Add elasticsearch repos in /etc/apt/sources.list.d/elasticsearch.list
```sh
deb http://packages.elasticsearch.org/elasticsearch/1.4/debian stable main
```
*important choose version 1.2 or higher because "more like this" query doesn't work for elasticsearch < 1.2*  
Install all necessary packages
```sh
sudo apt-get update && sudo apt-get install python python-dev python-virtualenv openjdk-7-jre-headless elasticsearch
```
####Arch
Install all necessary packages
`pacman -S elasticsearch python2 python2-virtualenv`

###Install
Create a virtual env and install libreant in it 
```sh
virtualenv -p /usr/bin/python2 --no-site-packages ve
./ve/bin/python setup.py develop
```
###Run
`./run_all_dev.sh ve`

Implementation
==============

Main building blocks are python, elasticsearch, flask.

Testing
=======

There is not much, still. However, after having activated your virtualenv, start
elasticsearch, running `./run_es.sh -d`

Now you can run the unit test, using `nosetests -c nose.cfg`

For a more complete testing, wait a bit longer ;)
