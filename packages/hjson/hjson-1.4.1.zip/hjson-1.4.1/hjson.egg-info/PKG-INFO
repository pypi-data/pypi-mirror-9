Metadata-Version: 1.1
Name: hjson
Version: 1.4.1
Summary: JSON for Humans, allows comments and is less error prone.
Home-page: http://github.com/laktak/hjson-py
Author: Christian Zangl
Author-email: coralllama@gmail.com
License: MIT License
Description: hjson-py
        ========
        
        `Hjson`_, the Human JSON. A data format that caters to humans and helps
        reduce the errors they make.
        
        It supports ``#``, ``//`` and ``/**/`` style comments as well as
        avoiding trailing/missing comma and other mistakes. For details and
        syntax see `hjson.org`_.
        
        Hjson works with Python 2.5+ and Python 3.3+ (based on `simplejson`_)
        
        Installation
        ============
        
        -  ``pip install hjson``
        
        -  or download from https://pypi.python.org/pypi/hjson
        
        Usage
        =====
        
        ::
        
            import hjson
        
        Decoding Hjson
        --------------
        
        ::
        
            text = """{
              foo: a
              bar: 1
            }"""
        
            hjson.loads(text)
        
        Result:
        
        ::
        
            OrderedDict([('foo', 'a'), ('bar', 1)])
        
        Encoding Python object hierarchies
        ----------------------------------
        
        ::
        
            hjson.dumps({'foo': 'text', 'bar': (1, 2)})
        
        Result:
        
        ::
        
            {
              foo: text
              bar:
              [
                1
                2
              ]
            }
        
        Encoding as JSON
        ----------------
        
        Note that this is probably not as performant as the simplejson version.
        
        ::
        
            hjson.dumpsJSON(['foo', {'bar': ('baz', None, 1.0, 2)}])
        
        Result: ``'["foo", {"bar": ["baz", null, 1.0, 2]}]'``
        
        From the Commandline
        --------------------
        
        Use hjson.tool to validate and convert.
        
        ``python -m hjson.tool [FORMAT] [INFILE [OUTFILE]]``
        
        Formats:
        
        -  ``-h``: print Hjson
        -  ``-j``: print formatted JSON
        -  ``-c``: print compact JSON
        
        E.g. ``echo '{"json":"obj"}' | python -m hjson.tool``
        
        API
        ===
        
        `hjson-py`_
        
        .. _Hjson: http://hjson.org
        .. _hjson.org: http://hjson.org
        .. _simplejson: https://github.com/simplejson/simplejson
        .. _hjson-py: http://laktak.github.io/hjson-py/
        
Keywords: json comments configuration
Platform: any
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: License :: OSI Approved :: Academic Free License (AFL)
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.5
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Software Development :: Libraries :: Python Modules
