<!-- Form template for inline rendering of direct children
  Should be seriously tested with complex forms (including mappings or sequences)
-->
<form
  id="${field.formid}"
  class="deform ${field.bootstrap_form_style | 'form-grid'}
         ${field.css_class}"
  action="${field.action}"
  method="${field.method}"
  enctype="multipart/form-data"
  accept-charset="utf-8"
  i18n:domain="deform"
  tal:define="inline getattr(field, 'bootstrap_form_style', None) == 'form-inline';
              childgroups python: field.widget.childgroup(field);
              item_template item_template|field.widget.item_template;
              title title|field.title;
              ">
    <fieldset class="deformFormFieldset">
      <legend tal:condition="title">${title}</legend>
      <!-- Hidden inputs and alerts at the top -->
      <input type="hidden" name="_charset_" />
      <input type="hidden" name="__formid__" value="${field.formid}"/>


      <div class="alert alert-block alert-error" tal:condition="field.error">
        <span class="errorMsgLbl" i18n:translate="">
          There was a problem with your submission
        </span>
        <br />
        <span class="errorMsg" i18n:translate="">
          Errors have been highlighted below
        </span>
        <p class="errorMsg">${field.errormsg}</p>
      </div>


      <div>
        <div class="row-fluid form-row"
          tal:repeat="childgroup childgroups"
          i18n:domain="deform">
          <div tal:omit-tag="" tal:repeat="child childgroup">
            <tal:block tal:omit-tag="" tal:condition="child">
              <div tal:replace="structure child.render_template(item_template)" />
            </tal:block>
          </div>
        </div>
      </div>


    <!-- Append the buttons at the end -->
    <div tal:condition="field.buttons" tal:omit-tag="inline" class="form-actions">
      <tal:block repeat="button field.buttons">
        <button
            tal:attributes="disabled button.disabled"
            id="${field.formid+button.name}"
            name="${button.name}"
            type="${button.type}"
            class="btn ${repeat.button.start and 'btn-primary' or ''} ${button.css_class}"
            value="${button.value}">
          <i tal:condition="hasattr(button, 'icon') and button.icon"
                     class="${button.icon}"></i>
          ${button.title}
        </button>
      </tal:block>
    </div>

  <script type="text/javascript" tal:condition="field.use_ajax">
    deform.addCallback(
       '${field.formid}',
       function(oid) {
         var options = {
           target: '#' + oid,
           replaceTarget: true,
           success: function() {
             deform.processCallbacks();
             deform.focusFirstInput();
           }
         };
         var extra_options = ${field.ajax_options} || {};
         $('#' + oid).ajaxForm($.extend(options, extra_options));
       }
    );
  </script>
</form>
